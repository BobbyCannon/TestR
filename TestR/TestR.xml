<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestR</name>
    </assembly>
    <members>
        <member name="T:TestR.Application">
            <summary>
            Represents an application that can be automated.
            </summary>
        </member>
        <member name="F:TestR.Application.DefaultTimeout">
            <summary>
            Gets the default timeout (in milliseconds).
            </summary>
        </member>
        <member name="M:TestR.Application.#ctor(System.Diagnostics.Process)">
            <summary>
            Creates an instance of the application.
            </summary>
            <param name="process"> The process for the application. </param>
        </member>
        <member name="P:TestR.Application.AutoClose">
            <summary>
            Gets or sets a flag to auto close the application when disposed of.
            </summary>
        </member>
        <member name="P:TestR.Application.FocusedElement">
            <inheritdoc />
        </member>
        <member name="P:TestR.Application.Handle">
            <summary>
            Gets the handle for this window.
            </summary>
        </member>
        <member name="P:TestR.Application.Id">
            <inheritdoc />
        </member>
        <member name="P:TestR.Application.IsRunning">
            <summary>
            Gets the value indicating that the process is running.
            </summary>
        </member>
        <member name="P:TestR.Application.Location">
            <summary>
            Gets the location of the application.
            </summary>
        </member>
        <member name="P:TestR.Application.Name">
            <inheritdoc />
        </member>
        <member name="P:TestR.Application.Process">
            <summary>
            Gets the underlying process for this application.
            </summary>
        </member>
        <member name="P:TestR.Application.Size">
            <summary>
            Gets the size of the application.
            </summary>
        </member>
        <member name="P:TestR.Application.SlowMotion">
            <summary>
            Gets or sets a flag to tell the browser to act slower. Defaults to false.
            </summary>
        </member>
        <member name="P:TestR.Application.Timeout">
            <summary>
            Gets or sets the time out for delay request. Defaults to 5 seconds.
            </summary>
        </member>
        <member name="M:TestR.Application.Attach(System.String,System.String,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="arguments"> The arguments for the executable. Arguments are optional. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.Attach(System.IntPtr,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="handle"> The main window handle of the executable. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.Attach(System.Diagnostics.Process,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="process"> The process to attach to. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.AttachOrCreate(System.String,System.String,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="arguments"> The arguments for the executable. Arguments are optional. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.BringToFront">
            <summary>
            Brings the application to the front and makes it the top window.
            </summary>
        </member>
        <member name="M:TestR.Application.Close">
            <summary>
            Closes the window.
            </summary>
        </member>
        <member name="M:TestR.Application.CloseAll(System.String,System.Int32)">
            <summary>
            Closes all windows my name and closes them.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="timeout"> The timeout to wait for the application to close. </param>
        </member>
        <member name="M:TestR.Application.Create(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new application process.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="arguments"> The arguments for the executable. Arguments are optional. </param>
            <param name="refresh"> The flag to trigger loading to load state when creating the application. Defaults to true. </param>
            <returns> The instance that represents an application. </returns>
        </member>
        <member name="M:TestR.Application.Exists(System.String,System.String)">
            <summary>
            Checks to see if an application process exist by path and optional arguments.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="arguments"> The arguments for the executable. Arguments are optional. </param>
            <returns> True if the application exists and false otherwise. </returns>
        </member>
        <member name="M:TestR.Application.IsInFront">
            <summary>
            Returns a value indicating if the windows is in front of all other windows.
            </summary>
            <returns> </returns>
        </member>
        <member name="M:TestR.Application.MoveWindow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="x"> The x coordinate to move to. </param>
            <param name="y"> The y coordinate to move to. </param>
            <param name="width"> The width of the window. </param>
            <param name="height"> The height of the window. </param>
        </member>
        <member name="M:TestR.Application.Refresh">
            <inheritdoc />
        </member>
        <member name="M:TestR.Application.WaitForComplete(System.Int32)">
            <summary>
            Waits for the Process to not be busy.
            </summary>
            <param name="minimumDelay"> The minimum delay in milliseconds to wait. Defaults to 0 milliseconds. </param>
        </member>
        <member name="M:TestR.Application.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Application.OnElementClicked(TestR.Desktop.DesktopElement,System.Drawing.Point)">
            <summary>
            Triggers the element clicked event.
            </summary>
            <param name="element"> The element that was clicked. </param>
            <param name="point"> The point that was clicked. </param>
        </member>
        <member name="E:TestR.Application.ElementClicked">
            <summary>
            An element was clicked.
            </summary>
        </member>
        <member name="T:TestR.Desktop.DesktopElement">
            <summary>
            Base element for desktop automation.
            </summary>
        </member>
        <member name="F:TestR.Desktop.DesktopElement.ExcludedProperties">
            <summary>
            Properties that should not be included in UI elements or the detail string.
            </summary>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.#ctor(UIAutomationClient.IUIAutomationElement,TestR.Application,TestR.ElementHost)">
            <summary>
            Creates an instance of an element.
            </summary>
            <param name="element"> The automation element for this element. </param>
            <param name="application"> The application parent for this element. </param>
            <param name="parent"> The parent element for this element. </param>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Enabled">
            <summary>
            Gets a value that indicates whether the element is enabled.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Focused">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.FocusedElement">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Height">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Id">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.KeyboardFocusable">
            <summary>
            Gets a value that indicates whether the element can be use by the keyboard.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Location">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Name">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.NativeElement">
            <summary>
            Gets the native element for the desktop element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.ProcessId">
            <summary>
            First the current process ID;
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.TypeId">
            <summary>
            Gets the type ID of this element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.TypeName">
            <summary>
            Gets the name of the control type.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Visible">
            <summary>
            Gets a value that indicates whether the element is visible.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Width">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.CaptureSnippet(System.String)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Click(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Focus">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.FromFocus">
            <summary>
            Gets the element that is currently focused.
            </summary>
            <returns> The element if found or null if not found. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.FromPoint(System.Drawing.Point)">
            <summary>
            Gets the element that is currently at the point.
            </summary>
            <param name="point"> The point to try and detect at element at. </param>
            <returns> The element if found or null if not found. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.GetText">
            <summary>
            Gets the text value of the element.
            </summary>
            <returns> The value of the element. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.MoveMouseTo(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Refresh">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.RightClick(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.SetText(System.String)">
            <summary>
            Sets the text value of the element.
            </summary>
            <param name="value"> The text to set the element to. </param>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.ToDetailString">
            <summary>
            Provides a string of details for the element.
            </summary>
            <returns> The string of element details. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.UpdateParent">
            <summary>
            Update the parent for the provided element.
            </summary>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.UpdateParents">
            <summary>
            Update the parents for this element.
            </summary>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.WaitForComplete(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Create(UIAutomationClient.IUIAutomationElement,TestR.Application,TestR.Desktop.DesktopElement)">
            <summary>
            Creates an element from the automation element.
            </summary>
            <param name="element"> The element to create. </param>
            <param name="application"> The application parent for this element. </param>
            <param name="parent"> The parent of the element to create. </param>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.GetChildren(TestR.Desktop.DesktopElement)">
            <summary>
            Gets all the direct children of an element.
            </summary>
            <param name="element"> The element to get the children of. </param>
            <returns> The list of children for the element. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.GetClickablePoint(System.Int32,System.Int32)">
            <summary>
            Gets the clickable point for the element.
            </summary>
            <param name="x"> Optional X offset when calculating. </param>
            <param name="y"> Optional Y offset when calculating. </param>
            <returns> The clickable point for the element. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.TryGetClickablePoint(System.Drawing.Point@,System.Int32,System.Int32)">
            <summary>
            Try to get a clickable point for the element.
            </summary>
            <param name="point"> The point value if call was successful. </param>
            <param name="x"> Optional X offset when calculating. </param>
            <param name="y"> Optional Y offset when calculating. </param>
            <returns> The clickable point for the element. </returns>
        </member>
        <member name="T:TestR.Desktop.Elements.Button">
            <summary>
            Represents a button element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Button.Toggled">
            <summary>
            Gets a flag indicating if the button is checked. Usable for split buttons.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Button.ToggleState">
            <summary>
            Gets the toggle state of the button.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Calendar">
            <summary>
            Represents a calendar element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.CheckBox">
            <summary>
            Represents a check box element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.CheckBox.Checked">
            <summary>
            Gets a flag indicating if the checkbox is checked.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.CheckBox.CheckedState">
            <summary>
            Gets the state of the checkbox.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.CheckBox.ReadOnly">
            <summary>
            Gets a value indicating whether the control can have a value set programmatically, or that can be edited by the user.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.CheckBox.Toggle">
            <summary>
            Toggle the checkbox.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ComboBox">
            <summary>
            Represents a combo box element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.ComboBox.ExpandCollapseState">
            <summary>
            Gets the current expanded state of the combo box.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.ComboBox.ReadOnly">
            <summary>
            Gets a value indicating whether the control can have a value set programmatically, or that can be edited by the user.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.ComboBox.Text">
            <summary>
            Gets the text value.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.ComboBox.Collapse">
            <summary>
            Collapses the combo box.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.ComboBox.Expand">
            <summary>
            Expands the combo box.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Custom">
            <summary>
            Represents a custom element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.DataGrid">
            <summary>
            Represents a datagrid element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.DataItem">
            <summary>
            Represents the data item.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Document">
            <summary>
            Represents a document element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Document.Text">
            <summary>
            Gets the text value.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Edit">
            <summary>
            Represents a edit element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Edit.ReadOnly">
            <summary>
            Gets a value indicating whether the control can have a value set programmatically, or that can be edited by the user.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Edit.Text">
            <summary>
            Gets the text value.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Group">
            <summary>
            Represents the group for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Header">
            <summary>
            Represents the header.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.HeaderItem">
            <summary>
            Represents the header item.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Hyperlink">
            <summary>
            Represents a hyperlink element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Image">
            <summary>
            Represents a image element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.List">
            <summary>
            Represents the list for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ListItem">
            <summary>
            Represents a list item element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Menu">
            <summary>
            Represents a menu element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.MenuBar">
            <summary>
            Represents the menu bar for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.MenuItem">
            <summary>
            Represents the menu item for a window.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.MenuItem.IsExpanded">
            <summary>
            Gets the menu expand collapse state.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.MenuItem.SupportsExpandingCollapsing">
            <summary>
            Gets a value indicating whether this menu item supports expanding and collapsing pattern.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.MenuItem.Click(System.Int32,System.Int32)">
            <summary>
            Performs mouse click at the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
        </member>
        <member name="M:TestR.Desktop.Elements.MenuItem.Collapse">
            <summary>
            Collapse the menu item.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.MenuItem.Expand">
            <summary>
            Expand the menu item.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Pane">
            <summary>
            Represents a edit element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ProgressBar">
            <summary>
            Represents a progress bar element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.RadioButton">
            <summary>
            Represents a radio button element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ScrollBar">
            <summary>
            Represents the scroll bar for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.SemanticZoom">
            <summary>
            Represents a semantic zoom element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Separator">
            <summary>
            Represents the separator element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Slider">
            <summary>
            Represents a semantic zoom element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Spinner">
            <summary>
            Represents a spinner element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.SplitButton">
            <summary>
            Represents a split button element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.StatusBar">
            <summary>
            Represents the status bar for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.TabControl">
            <summary>
            Represents the tab control.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.TabItem">
            <summary>
            Represents the tab item.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Table">
            <summary>
            Represents the table element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Text">
            <summary>
            Represents the text for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Thumb">
            <summary>
            Represents the thumb for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.TitleBar">
            <summary>
            Represents the title bar for a window.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.TitleBar.CloseButton">
            <summary>
            Gets the close button.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.TitleBar.MaximizeButton">
            <summary>
            Gets the maximize button.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.TitleBar.MinimizeButton">
            <summary>
            Gets the maximize button.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ToolBar">
            <summary>
            Represents the tool bar for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ToolTip">
            <summary>
            Represents a tooltip element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Tree">
            <summary>
            Represents the tree for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.TreeItem">
            <summary>
            Represents a tree item element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Window">
            <summary>
            Represents a window for an application.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.Location">
            <summary>
            Gets the location of the element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.StatusBar">
            <summary>
            Gets the status bar for the window. Returns null if the window does not have a status bar.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.TitleBar">
            <summary>
            Gets the title bar for the window. Returns null if the window does not have a title bar.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.BringToFront">
            <summary>
            Bring the window to the front.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.Close">
            <summary>
            Closes a window.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.Move(System.Int32,System.Int32)">
            <summary>
            Move the window.
            </summary>
            <param name="x"> The x value of the position to move to. </param>
            <param name="y"> The y value of the position to move to. </param>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.Resize(System.Int32,System.Int32)">
            <summary>
            Resize the window.
            </summary>
            <param name="width"> The width to set. </param>
            <param name="height"> The height to set. </param>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.WaitWhileBusy">
            <summary>
            Waits for the window to no longer be busy.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.ExpandCollapsePattern">
            <summary>
            Represents the Windows expand / collapse pattern.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ExpandCollapsePattern.ExpandCollapseState">
            <summary>
            Gets the current expanded state of the element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ExpandCollapsePattern.IsExpanded">
            <summary>
            Gets the value indicating the element is expanded.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.ExpandCollapsePattern.Collapse">
            <summary>
            Collapses the element.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.ExpandCollapsePattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.ExpandCollapsePattern.Expand">
            <summary>
            Expands the element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.ExpandCollapseState">
            <summary>
            Represents the state of the expand collapse pattern.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ExpandCollapseState.Collapsed">
            <summary>
            No children are visible.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ExpandCollapseState.Expanded">
            <summary>
            All children are visible.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ExpandCollapseState.PartiallyExpanded">
            <summary>
            Some, but not all, children are visible.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ExpandCollapseState.LeafNode">
            <summary>
            The element does not expand or collapse.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.TogglePattern">
            <summary>
            Represents the Windows toggle pattern.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.TogglePattern.Toggled">
            <summary>
            Gets the toggled value.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.TogglePattern.ToggleState">
            <summary>
            Gets the toggle state of the element.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.TogglePattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.TogglePattern.Toggle">
            <summary>
            Toggle the element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.ToggleState">
            <summary>
            Represents the state of a element with toggle pattern support.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ToggleState.On">
            <summary>
            The element is selected, checked, marked or otherwise activated.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ToggleState.Off">
            <summary>
            The element is not selected, checked, marked or otherwise activated.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ToggleState.Indeterminate">
            <summary>
            The element is in an indeterminate state.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.TransformPattern">
            <summary>
            Represents the Windows transform pattern.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.TransformPattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.TransformPattern.Move(System.Int32,System.Int32)">
            <summary>
            Move the element.
            </summary>
            <param name="x"> The x value of the position to move to. </param>
            <param name="y"> The y value of the position to move to. </param>
        </member>
        <member name="M:TestR.Desktop.Pattern.TransformPattern.Resize(System.Int32,System.Int32)">
            <summary>
            Resize the element.
            </summary>
            <param name="width"> The width to set. </param>
            <param name="height"> The height to set. </param>
        </member>
        <member name="T:TestR.Desktop.Pattern.ValuePattern">
            <summary>
            Represents the Windows value pattern.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ValuePattern.IsReadOnly">
            <summary>
            Gets a value determining if the pattern is read only.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ValuePattern.Value">
            <summary>
            Gets the value of the pattern.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.ValuePattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.ValuePattern.SetValue(System.String)">
            <summary>
            Set the value of the pattern.
            </summary>
            <param name="value"> The value to set. </param>
        </member>
        <member name="T:TestR.Element">
            <summary>
            Represents an automation element.
            </summary>
        </member>
        <member name="M:TestR.Element.#ctor(TestR.Application,TestR.ElementHost)">
            <summary>
            Instantiates an instance of an element.
            </summary>
            <param name="application"> </param>
            <param name="parent"> </param>
        </member>
        <member name="P:TestR.Element.BoundingRectangle">
            <summary>
            Gets the area of the element.
            </summary>
        </member>
        <member name="P:TestR.Element.Focused">
            <summary>
            Gets a value that indicates whether the element is focused.
            </summary>
        </member>
        <member name="P:TestR.Element.FullId">
            <summary>
            Gets the full id of the element which include all parent IDs prefixed to this element ID.
            </summary>
            <summary>
            Gets the ID of this element in the element host. Includes full host namespace. Ex. GrandParent\Parent\Element
            </summary>
        </member>
        <member name="P:TestR.Element.Height">
            <summary>
            Gets the width of the element.
            </summary>
        </member>
        <member name="P:TestR.Element.Item(System.String)">
            <summary>
            Gets or sets an attribute or property by name.
            </summary>
            <param name="id"> The ID of the attribute or property to read. </param>
        </member>
        <member name="P:TestR.Element.Location">
            <summary>
            Gets the location of the element.
            </summary>
        </member>
        <member name="P:TestR.Element.Size">
            <summary>
            Gets the size of the element.
            </summary>
        </member>
        <member name="P:TestR.Element.Width">
            <summary>
            Gets the width of the element.
            </summary>
        </member>
        <member name="M:TestR.Element.CaptureSnippet(System.String)">
            <summary>
            Takes a snippet of the element.
            </summary>
        </member>
        <member name="M:TestR.Element.Click(System.Int32,System.Int32)">
            <summary>
            Performs mouse click at the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
        </member>
        <member name="M:TestR.Element.Focus">
            <summary>
            Set focus on the element.
            </summary>
        </member>
        <member name="M:TestR.Element.MoveMouseTo(System.Int32,System.Int32)">
            <summary>
            Moves mouse cursor to the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
        </member>
        <member name="M:TestR.Element.RightClick(System.Int32,System.Int32)">
            <summary>
            Performs mouse right click at the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
        </member>
        <member name="M:TestR.Element.ToDetailString">
            <summary>
            Provides a string of details for the element.
            </summary>
            <returns> The string of element details. </returns>
        </member>
        <member name="M:TestR.Element.TypeText(System.String)">
            <summary>
            Focus the element then type the text via the keyboard.
            </summary>
            <param name="value"> The value to type. </param>
        </member>
        <member name="T:TestR.ElementCollection">
            <summary>
            Represents a collection of elements.
            </summary>
        </member>
        <member name="M:TestR.ElementCollection.#ctor(TestR.ElementHost)">
            <summary>
            Initializes an instance of the ElementCollection class.
            </summary>
            <param name="parent"> </param>
        </member>
        <member name="P:TestR.ElementCollection.Item(System.String)">
            <summary>
            Access an element by the Full ID, ID, or Name.
            </summary>
            <param name="id"> The ID of the element. </param>
            <returns> The element if found or null if not found. </returns>
        </member>
        <member name="P:TestR.ElementCollection.Parent">
            <summary>
            Gets the parent element of this element collection.
            </summary>
        </member>
        <member name="M:TestR.ElementCollection.Add(TestR.Element[])">
            <summary>
            Adds items to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="items"> The objects to add to the <see cref="T:System.Collections.Generic.ICollection`1" />. </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1" /> is
            read-only.
            </exception>
        </member>
        <member name="M:TestR.ElementCollection.Contains(System.String)">
            <summary>
            Check to see if this collection contains an element.
            </summary>
            <param name="id"> The id to search for. </param>
            <returns> True if the id is found, false if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Descendants">
            <summary>
            First a collection of element from the collection.
            </summary>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Descendants(System.Func{TestR.Element,System.Boolean})">
            <summary>
            First a collection of element from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Descendants``1">
            <summary>
            First a collection of element of a specific type from the collection.
            </summary>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Descendants``1(System.Func{``0,System.Boolean})">
            <summary>
            First a collection of element of a specific type from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.First(System.String,System.Boolean)">
            <summary>
            Get an element from the collection using the provided ID.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> The flag that determines to include descendants or not. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementCollection.First(System.Func{TestR.Element,System.Boolean},System.Boolean)">
            <summary>
            Get an element from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> The flag that determines to include descendants or not. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The element matching the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.First``1(System.String,System.Boolean)">
            <summary>
            Get an element from the collection using the provided ID.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> The flag that determines to include descendants or not. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementCollection.First``1(System.Func{``0,System.Boolean},System.Boolean)">
            <summary>
            Get an element from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> The flag that determines to include descendants or not. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.FirstOrDefault``1(System.String,System.Boolean)">
            <summary>
            Get an element from the collection using the provided ID.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> The flag that determines to include descendants or not. </param>
            <returns> The child element for the ID or null if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementCollection.FirstOrDefault``1(System.Func{``0,System.Boolean},System.Boolean)">
            <summary>
            Get an element from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> The flag that determines to include descendants or not. </param>
            <returns> The child element for the condition or null if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementCollection.OfType``1">
            <summary>
            Gets a collection of element of the provided type.
            </summary>
            <typeparam name="T"> The type of the element for the collection. </typeparam>
            <returns> The collection of elements of the provided type. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Remove``1(``0,System.Boolean)">
            <summary>
            Removes an element from a collection.
            </summary>
            <param name="element"> The element to be removed. </param>
            <param name="includeDescendants"> The flag that determines to include descendants or not. </param>
            <returns> true if item is successfully removed; otherwise, false. This method also returns false if item was not found. </returns>
        </member>
        <member name="T:TestR.ElementHost">
            <summary>
            Represents a host for a set of elements.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.#ctor(TestR.Application,TestR.ElementHost)">
            <summary>
            Instantiates an instance of an element host.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Application">
            <summary>
            Gets the application for this element host.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Children">
            <summary>
            Gets a hierarchical list of elements.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.FocusedElement">
            <summary>
            Gets the current focused element.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Id">
            <summary>
            Gets the ID of this element host.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Parent">
            <summary>
            Gets the parent element of this element.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.Contains(System.String)">
            <summary>
            Check to see if this element host contains an element.
            </summary>
            <param name="id"> The id to search for. </param>
            <returns> True if the id is found, false if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementHost.Descendants">
            <summary>
            Get all the children.
            </summary>
            <returns> The child elements. </returns>
        </member>
        <member name="M:TestR.ElementHost.Descendants(System.Func{TestR.Element,System.Boolean})">
            <summary>
            Get all the children that match the optional condition. If a condition is not provided
            then all children of the type will be returned.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementHost.Descendants``1">
            <summary>
            Get all the children of a specific type.
            </summary>
            <returns> The child elements of the specific type. </returns>
        </member>
        <member name="M:TestR.ElementHost.Descendants``1(System.Func{``0,System.Boolean})">
            <summary>
            Get all the children of a specific type that matches the condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements of the specific type for the condition. </returns>
        </member>
        <member name="M:TestR.ElementHost.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.First(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementHost.First(System.Func{TestR.Element,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the condition or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.First``1(System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementHost.First``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementHost.First``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <exception cref="T:System.InvalidOperationException"> The source sequence is empty. </exception>
            <returns> The child element for the condition. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the ID or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault(System.Func{TestR.Element,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the condition or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the ID or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> Flag to determine to include descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the condition or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.OfType``1">
            <summary>
            Gets a collection of element of the provided type.
            </summary>
            <typeparam name="T"> The type of the element for the collection. </typeparam>
            <returns> The collection of elements of the provided type. </returns>
        </member>
        <member name="M:TestR.ElementHost.Refresh">
            <summary>
            Refresh the children for this element host.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.Remove``1(``0,System.Boolean)">
            <summary>
            Removes an element from a collection.
            </summary>
            <param name="element"> The element to be removed. </param>
            <param name="includeDescendants"> The flag that determines to include descendants or not. </param>
            <returns> true if item is successfully removed; otherwise, false. This method also returns false if item was not found. </returns>
        </member>
        <member name="M:TestR.ElementHost.WaitForComplete(System.Int32)">
            <summary>
            Waits for the host to complete the work. Will wait until no longer busy.
            </summary>
            <param name="minimumDelay"> The minimum delay in milliseconds to wait. Defaults to 0 milliseconds. </param>
        </member>
        <member name="M:TestR.ElementHost.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="T:TestR.Extensions">
            <summary>
            Container for all extension methods.
            </summary>
        </member>
        <member name="M:TestR.Extensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a range of items to the collection.
            </summary>
            <param name="collection"> The collection to add the items to. </param>
            <param name="items"> The items to add to the collection. </param>
            <typeparam name="T"> The type of the item in the collections. </typeparam>
        </member>
        <member name="M:TestR.Extensions.AsJToken(System.String)">
            <summary>
            Deserialize JSON data into a JToken class.
            </summary>
            <param name="data"> The JSON data to deserialize. </param>
            <returns> The JToken class of the data. </returns>
        </member>
        <member name="M:TestR.Extensions.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            Check to see if the string contains the value.
            </summary>
            <param name="source"> The source string value. </param>
            <param name="value"> The value to search for. </param>
            <param name="comparisonType"> The type of comparison to use when searching. </param>
            <returns> True if the value is found and false if otherwise. </returns>
        </member>
        <member name="M:TestR.Extensions.Count(TestR.Web.BrowserType)">
            <summary>
            Returns the number of browsers for this type.
            </summary>
            <param name="type"> The browser type that contains the configuration. </param>
            <returns> The number of browsers configured in the type. </returns>
        </member>
        <member name="M:TestR.Extensions.FirstValue(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Return the first string that is not null or empty.
            </summary>
            <param name="collection"> The collection of string to parse. </param>
        </member>
        <member name="M:TestR.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs an action on each item in the collection.
            </summary>
            <param name="collection"> The collection of items to run the action with. </param>
            <param name="action"> The action to run against each item in the collection. </param>
            <typeparam name="T"> The type of the item in the collection. </typeparam>
        </member>
        <member name="M:TestR.Extensions.ForEachDisposable``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs an action on each item in the collection.
            </summary>
            <param name="collection"> The collection of items to run the action with. </param>
            <param name="action"> The action to run against each item in the collection. </param>
            <typeparam name="T"> The type of the item in the collection. </typeparam>
        </member>
        <member name="M:TestR.Extensions.GetWindowLocation(System.Diagnostics.Process)">
            <summary>
            First the main window location for the process.
            </summary>
            <param name="process"> The process that contains the window. </param>
            <returns> The location of the window. </returns>
        </member>
        <member name="M:TestR.Extensions.GetWindows(System.Diagnostics.Process,TestR.Application)">
            <summary>
            Gets all windows for the process.
            </summary>
            <param name="process"> The process to get windows for. </param>
            <param name="application"> The application the elements are for. </param>
            <returns> The array of windows. </returns>
        </member>
        <member name="M:TestR.Extensions.GetWindowSize(System.Diagnostics.Process)">
            <summary>
            Gets the size of the main window for the process.
            </summary>
            <param name="process"> The process to size. </param>
            <returns> The size of the main window. </returns>
        </member>
        <member name="M:TestR.Extensions.IsAssemblyDebugBuild(System.Reflection.Assembly)">
            <summary>
            Checks to see if the assembly passed in is a debug build.
            </summary>
            <param name="assembly"> The assembly to test. </param>
            <returns> True if is a debug build and false if a release build. </returns>
        </member>
        <member name="M:TestR.Extensions.Split(System.String,System.String,System.StringSplitOptions)">
            <summary>
            Splits a by a single separator.
            </summary>
            <param name="value"> The string to be split. </param>
            <param name="separator"> The character to deliminate the string. </param>
            <param name="options"> The options to use when splitting. </param>
            <returns> The array of strings. </returns>
        </member>
        <member name="M:TestR.Extensions.ToInt(System.String)">
            <summary>
            Converts the string to an integer.
            </summary>
            <param name="item"> The item to convert to an integer. </param>
            <returns> The JSON data of the object. </returns>
        </member>
        <member name="M:TestR.Extensions.ToJson``1(``0,System.Boolean)">
            <summary>
            Serializes the object to JSON.
            </summary>
            <typeparam name="T"> The type of the item. </typeparam>
            <param name="item"> The item to serialize. </param>
            <param name="camelCase"> The flag to use camel case. If true then camel case else pascel case. </param>
            <returns> The JSON data of the object. </returns>
        </member>
        <member name="T:TestR.Native.Keyboard">
            <summary>
            Represents the keyboard and allows for simulated input.
            </summary>
        </member>
        <member name="M:TestR.Native.Keyboard.IsControlPressed">
            <summary>
            Determinse if the control key is pressed.
            </summary>
            <returns>
            True if either control key is pressed.
            </returns>
        </member>
        <member name="M:TestR.Native.Keyboard.StartMonitoring">
            <summary>
            Start monitoring the keyboard for keystrokes.
            </summary>
        </member>
        <member name="M:TestR.Native.Keyboard.StopMonitoring">
            <summary>
            Stop monitoring the keyboard for keystrokes.
            </summary>
        </member>
        <member name="M:TestR.Native.Keyboard.TypeText(System.String)">
            <summary>
            Types text as keyboard input.
            </summary>
            <param name="value"> </param>
        </member>
        <member name="E:TestR.Native.Keyboard.KeyPressed">
            <summary>
            Event for key press events when monitoring the keyboard.
            </summary>
        </member>
        <member name="T:TestR.Native.Mouse">
            <summary>
            Represents the mouse and allows for simulated input.
            </summary>
        </member>
        <member name="P:TestR.Native.Mouse.Cursor">
            <summary>
            Gets the current cursor for the mouse.
            </summary>
        </member>
        <member name="M:TestR.Native.Mouse.GetCursorPosition">
            <summary>
            Gets the current position of the mouse.
            </summary>
            <returns> The point location of the mouse cursor. </returns>
        </member>
        <member name="M:TestR.Native.Mouse.LeftClick(System.Drawing.Point)">
            <summary>
            Left click at the provided point.
            </summary>
            <param name="point"> The point in which to click. </param>
        </member>
        <member name="M:TestR.Native.Mouse.MoveTo(System.Drawing.Point)">
            <summary>
            Sets the mouse to the provide point.
            </summary>
            <param name="point"> The point in which to move to. </param>
        </member>
        <member name="M:TestR.Native.Mouse.RightClick(System.Drawing.Point)">
            <summary>
            Right click at the provided point.
            </summary>
            <param name="point"> The point in which to click. </param>
        </member>
        <member name="T:TestR.Native.Mouse.MouseEvent">
            <summary>
            Represents a mouse event.
            </summary>
        </member>
        <member name="F:TestR.Native.Mouse.MouseEvent.Unknown">
            <summary>
            Unknown event.
            </summary>
        </member>
        <member name="F:TestR.Native.Mouse.MouseEvent.LeftButtonDown">
            <summary>
            Event for left button press.
            </summary>
        </member>
        <member name="F:TestR.Native.Mouse.MouseEvent.LeftButtonUp">
            <summary>
            Event for left button release.
            </summary>
        </member>
        <member name="F:TestR.Native.Mouse.MouseEvent.MouseMove">
            <summary>
            Event for mouse moving.
            </summary>
        </member>
        <member name="F:TestR.Native.Mouse.MouseEvent.MouseWheel">
            <summary>
            Event for mouse wheel moving.
            </summary>
        </member>
        <member name="F:TestR.Native.Mouse.MouseEvent.RightButtonDown">
            <summary>
            Event for right button press.
            </summary>
        </member>
        <member name="F:TestR.Native.Mouse.MouseEvent.RightButtonUp">
            <summary>
            Event for right button release.
            </summary>
        </member>
        <member name="T:TestR.Native.MouseCursor">
            <summary>
            Represents a cursor for the mouse.
            </summary>
        </member>
        <member name="F:TestR.Native.MouseCursor.DefaultAndWait">
            <summary>
            Gets the cursor that represents default and wait.
            </summary>
        </member>
        <member name="F:TestR.Native.MouseCursor.Pointer">
            <summary>
            Gets the cursor that represents a pointer.
            </summary>
        </member>
        <member name="F:TestR.Native.MouseCursor.ShapedCursor">
            <summary>
            Gets the cursor that represents text edit.
            </summary>
        </member>
        <member name="F:TestR.Native.MouseCursor.Wait">
            <summary>
            Gets the cursor that represents wait.
            </summary>
        </member>
        <member name="P:TestR.Native.MouseCursor.Current">
            <summary>
            Gets the current cursor for the mouse.
            </summary>
        </member>
        <member name="P:TestR.Native.MouseCursor.WaitCursors">
            <summary>
            Gets a list of cursors that represent wait cursors.
            </summary>
        </member>
        <member name="M:TestR.Native.MouseCursor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified object  is equal to the current object; otherwise, false.
            </returns>
            <param name="obj"> The object to compare with the current object. </param>
            <filterpriority> 2 </filterpriority>
        </member>
        <member name="M:TestR.Native.MouseCursor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority> 2 </filterpriority>
        </member>
        <member name="M:TestR.Native.MouseCursor.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority> 2 </filterpriority>
        </member>
        <member name="T:TestR.Native.MouseMessageFilter">
            <summary>
            The filter to capture mouse messages.
            </summary>
        </member>
        <member name="M:TestR.Native.MouseMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <returns>
            true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter
            or control.
            </returns>
            <param name="m"> The message to be dispatched. You cannot modify this message. </param>
        </member>
        <member name="E:TestR.Native.MouseMessageFilter.Click">
            <summary>
            The mouse was clicked event.
            </summary>
        </member>
        <member name="E:TestR.Native.MouseMessageFilter.Move">
            <summary>
            The mouse was moved.
            </summary>
        </member>
        <member name="F:TestR.Native.NativeMethods.SetWindowPosFlags.NoMove">
            <summary>
            Retains the current position (ignores X and Y parameters).
            </summary>
        </member>
        <member name="F:TestR.Native.NativeMethods.SetWindowPosFlags.NoSize">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="T:TestR.Utility">
            <summary>
            Represents the Utility class.
            </summary>
        </member>
        <member name="F:TestR.Utility.DefaultWaitDelay">
            <summary>
            The detail wait delay.
            </summary>
        </member>
        <member name="F:TestR.Utility.DefaultWaitTimeout">
            <summary>
            The default wait timeout.
            </summary>
        </member>
        <member name="M:TestR.Utility.Wait(System.Func{System.Boolean},System.Double,System.Int32)">
            <summary>
            Runs the action until the action returns true or the timeout is reached. Will delay in between actions of the
            provided
            time.
            </summary>
            <param name="action"> The action to call. </param>
            <param name="timeout"> The timeout to attempt the action. This value is in milliseconds. </param>
            <param name="delay"> The delay in between actions. This value is in milliseconds. </param>
            <returns> Returns true of the call completed successfully or false if it timed out. </returns>
        </member>
        <member name="M:TestR.Utility.Wait``1(``0,System.Func{``0,System.Boolean},System.Double,System.Int32)">
            <summary>
            Runs the action until the action returns true or the timeout is reached. Will delay in between actions of the
            provided
            time.
            </summary>
            <param name="input"> The input to pass to the action. </param>
            <param name="action"> The action to call. </param>
            <param name="timeout"> The timeout to attempt the action. This value is in milliseconds. </param>
            <param name="delay"> The delay in between actions. This value is in milliseconds. </param>
            <returns> Returns true of the call completed successfully or false if it timed out. </returns>
        </member>
        <member name="T:TestR.Web.Browser">
            <summary>
            This is the base class for browsers.
            </summary>
            <exclude> </exclude>
        </member>
        <member name="F:TestR.Web.Browser.DefaultTimeout">
            <summary>
            Gets the default timeout (in milliseconds).
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.#ctor(TestR.Application)">
            <summary>
            Initializes a new instance of the Browser class.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.ActiveElement">
            <summary>
            Gets the current active element.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.AutoClose">
            <summary>
            Gets or sets a flag to auto close the browser when disposed of. Defaults to false.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.AutoRefresh">
            <summary>
            Gets or sets a flag that allows elements to refresh when reading properties. Defaults to true.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.FocusedElement">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.Browser.Id">
            <summary>
            Gets the ID of the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.JavascriptLibraries">
            <summary>
            Gets a list of JavaScript libraries that were detected on the page.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.RawHtml">
            <summary>
            Gets the raw HTML of the page.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.Uri">
            <summary>
            Gets the URI of the current page.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.AttachBrowsers(TestR.Web.BrowserType)">
            <summary>
            Attach browsers for each type provided.
            </summary>
            <param name="type"> The type of the browser to attach to. </param>
        </member>
        <member name="M:TestR.Web.Browser.AttachOrCreate(TestR.Web.BrowserType)">
            <summary>
            Attach or create browsers for each type provided.
            </summary>
            <param name="type"> The type of the browser to attach to or create. </param>
        </member>
        <member name="M:TestR.Web.Browser.AttachToBrowser(System.Diagnostics.Process)">
            <summary>
            Attach process as a browser.
            </summary>
            <param name="process"> The process of the browser to attach to. </param>
            <returns> The browser if successfully attached or otherwise null. </returns>
        </member>
        <member name="M:TestR.Web.Browser.BringToFront">
            <summary>
            Brings the application to the front and makes it the top window.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.CloseBrowsers(TestR.Web.BrowserType)">
            <summary>
            Closes all browsers of the provided type.
            </summary>
            <param name="type"> The type of the browser to close. </param>
        </member>
        <member name="M:TestR.Web.Browser.CreateBrowsers(TestR.Web.BrowserType)">
            <summary>
            Create browsers for each type provided.
            </summary>
            <param name="type"> The type of the browser to create. </param>
        </member>
        <member name="M:TestR.Web.Browser.ExecuteScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The script to run. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the script. </returns>
        </member>
        <member name="M:TestR.Web.Browser.ForEachBrowser(System.Action{TestR.Web.Browser},TestR.Web.BrowserType)">
            <summary>
            Process an action against a new instance of each browser type provided.
            </summary>
            <param name="action"> The action to perform against each browser. </param>
            <param name="type"> The type of the browser to process against. </param>
        </member>
        <member name="M:TestR.Web.Browser.GetTestScript">
            <summary>
            Inserts the test script into the current page.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.MoveWindow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="x"> The x coordinate to move to. </param>
            <param name="y"> The y coordinate to move to. </param>
            <param name="width"> The width of the window. </param>
            <param name="height"> The height of the window. </param>
        </member>
        <member name="M:TestR.Web.Browser.NavigateTo(System.String,System.String)">
            <summary>
            Navigates the browser to the provided URI.
            </summary>
            <param name="uri"> The URI to navigate to. </param>
            <param name="expectedUri"> The expected URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browser.Refresh">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.Browser.RemoveElement(TestR.Web.WebElement)">
            <summary>
            Removes the element from the page. * Experimental
            </summary>
            <param name="element"> The element to remove. </param>
        </member>
        <member name="M:TestR.Web.Browser.RemoveElementAttribute(TestR.Web.WebElement,System.String)">
            <summary>
            Removes an attribute from an element.
            </summary>
            <param name="element"> The element to remove the attribute from. </param>
            <param name="name"> The name of the attribute to remove. </param>
        </member>
        <member name="M:TestR.Web.Browser.WaitForComplete(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.Browser.WaitForNavigation(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Wait for the browser page to redirect to a provided URI.
            </summary>
            <param name="uri"> The expected URI to land on. Defaults to empty string if not provided. </param>
            <param name="timeout"> The timeout before giving up on the redirect. Defaults to Timeout if not provided. </param>
        </member>
        <member name="M:TestR.Web.Browser.BrowserNavigateTo(System.String)">
            <summary>
            Browser implementation of navigate to
            </summary>
            <param name="uri"> The URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browser.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Web.Browser.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The code script to execute. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the execution. </returns>
        </member>
        <member name="M:TestR.Web.Browser.GetBrowserUri">
            <summary>
            Reads the current URI directly from the browser.
            </summary>
            <returns> The current URI that was read from the browser. </returns>
        </member>
        <member name="M:TestR.Web.Browser.InjectTestScript">
            <summary>
            Injects the test script into the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.DetectJavascriptLibraries">
            <summary>
            Runs script to detect specific libraries.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.RefreshElements">
            <summary>
            Refreshes the element collection for the current page.
            </summary>
        </member>
        <member name="T:TestR.Web.Browsers.Chrome">
            <summary>
            Represents an Chrome browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Chrome.BrowserName">
            <summary>
            The name of the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Chrome.DebugArgument">
            <summary>
            The debugging argument for starting the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.#ctor(TestR.Application)">
            <summary>
            Initializes a new instance of the Chrome class.
            </summary>
            <param name="application"> The window of the existing browser. </param>
        </member>
        <member name="P:TestR.Web.Browsers.Chrome.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.Attach">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.Attach(System.Diagnostics.Process)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.AttachOrCreate">
            <summary>
            Attempts to attach to an existing browser. If one is not found then create and return a new one.
            </summary>
            <returns> The browser instance. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.Create">
            <summary>
            Attempts to create a new browser. If one is not found then we'll make sure it was started with the
            remote debugger argument. If not an exception will be thrown.
            </summary>
            <returns> The browser instance. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.BrowserNavigateTo(System.String)">
            <summary>
            Navigates the browser to the provided URI.
            </summary>
            <param name="uri"> The URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The code script to execute. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the execution. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.GetBrowserUri">
            <summary>
            Reads the current URI directly from the browser.
            </summary>
            <returns> The current URI that was read from the browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.Connect">
            <summary>
            Connect to the Chrome browser debugger port.
            </summary>
            <exception cref="T:System.Exception"> All debugging sessions are taken. </exception>
        </member>
        <member name="T:TestR.Web.Browsers.Edge">
            <summary>
            Represents an Edge browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Edge.BrowserName">
            <summary>
            The name of the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.#ctor(TestR.Application,System.String)">
            <summary>
            Initializes a new instance of the Browser class.
            </summary>
        </member>
        <member name="P:TestR.Web.Browsers.Edge.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.Attach">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <returns> An instance of an Internet Explorer browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.Attach(System.Diagnostics.Process)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.AttachOrCreate">
            <summary>
            Attempts to attach to an existing browser. If one is not found then create and return a new one.
            </summary>
            <returns> An instance of an Internet Explorer browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.Create">
            <summary>
            Creates a new instance of an Edge browser.
            </summary>
            <returns> An instance of an Edge browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.MoveWindow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="x"> The x coordinate to move to. </param>
            <param name="y"> The y coordinate to move to. </param>
            <param name="width"> The width of the window. </param>
            <param name="height"> The height of the window. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.BrowserNavigateTo(System.String)">
            <summary>
            Browser implementation of navigate to
            </summary>
            <param name="uri"> The URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The code script to execute. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the execution. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.GetBrowserUri">
            <summary>
            Reads the current URI directly from the browser.
            </summary>
            <returns> The current URI that was read from the browser. </returns>
        </member>
        <member name="T:TestR.Web.Browsers.Firefox">
            <summary>
            Represents a Firefox browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Firefox.BrowserName">
            <summary>
            The name of the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Firefox.DebugArgument">
            <summary>
            The debugging argument for starting the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.#ctor(TestR.Application)">
            <summary>
            Initializes a new instance of the Firefox class.
            </summary>
            <param name="application"> The window of the existing browser. </param>
        </member>
        <member name="P:TestR.Web.Browsers.Firefox.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Attach">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Attach(System.Diagnostics.Process)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.AttachOrCreate">
            <summary>
            Attempts to attach to an existing browser. If one is not found then create and return a new one.
            </summary>
            <returns> The browser instance. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Create">
            <summary>
            Attempts to create a new browser.
            </summary>
            <remarks>
            The Firefox browser must have the "listen 6000" command run in the console to enable remote debugging. A newly created
            browser will not be able to connect until someone manually starts the remote debugger.
            </remarks>
            <returns> The browser instance. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.BrowserNavigateTo(System.String)">
            <summary>
            Navigates the browser to the provided URI.
            </summary>
            <param name="uri"> The URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The code script to execute. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the execution. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.GetBrowserUri">
            <summary>
            Reads the current URI directly from the browser.
            </summary>
            <returns> The current URI that was read from the browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Connect">
            <summary>
            Connect to the Firefox browser debugger port.
            </summary>
            <exception cref="T:System.Exception"> All debugging sessions are taken. </exception>
        </member>
        <member name="T:TestR.Web.Browsers.InternetExplorer">
            <summary>
            Represents an Internet Explorer browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.InternetExplorer.BrowserName">
            <summary>
            The name of the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browsers.InternetExplorer.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browsers.InternetExplorer.RawHtml">
            <summary>
            Gets the raw HTML of the page.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.Attach">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <returns> An instance of an Internet Explorer browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.Attach(System.Diagnostics.Process)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.AttachOrCreate">
            <summary>
            Attempts to attach to an existing browser. If one is not found then create and return a new one.
            </summary>
            <returns> An instance of an Internet Explorer browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.Create">
            <summary>
            Creates a new instance of an Internet Explorer browser.
            </summary>
            <returns> An instance of an Internet Explorer browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.WaitForComplete(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.BrowserNavigateTo(System.String)">
            <summary>
            Navigates the browser to the provided URI.
            </summary>
            <param name="uri"> The URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The code script to execute. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the execution. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.GetBrowserUri">
            <summary>
            Reads the current URI directly from the browser.
            </summary>
            <returns> The current URI that was read from the browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.CreateInternetExplorerClass">
            <summary>
            Creates an instance of the InternetExplorer.
            </summary>
            <returns> An instance of Internet Explorer. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.InternetExplorer.ReinitializeBrowser">
            <summary>
            Disconnects from the current browser and finds the new instance.
            </summary>
        </member>
        <member name="T:TestR.Web.BrowserType">
            <summary>
            The type of the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.Chrome">
            <summary>
            Represents a Chrome browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.InternetExplorer">
            <summary>
            Represents an Internet Explorer browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.Firefox">
            <summary>
            Represents a Firefox browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.Edge">
            <summary>
            Represents an Edge browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.All">
            <summary>
            Represents all browser types.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Abbreviation">
            <summary>
            Represents a browser abbreviation element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Abbreviation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Acronym">
            <summary>
            Represents a browser Acronym element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Acronym.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Address">
            <summary>
            Represents a browser address element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Address.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Applet">
            <summary>
            Represents a browser Applet element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Applet.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Applet.Code">
            <summary>
            Gets or sets the code attribute. This should be a URL to the applet class file.
            </summary>
            <remarks>
            Specifies the file name of a Java applet.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Applet.Height">
            <summary>
            Gets or sets the height attribute.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.Applet.Object">
            <summary>
            Gets or sets the object attribute.
            </summary>
            <remarks>
            Specifies a reference to a serialized representation of an applet.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Applet.Width">
            <summary>
            Gets or sets the width attribute.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Area">
            <summary>
            Represents a browser BoundingRectangle element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Area.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Article">
            <summary>
            Represents a browser article element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Article.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Aside">
            <summary>
            Represents a browser Aside element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Aside.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Audio">
            <summary>
            Represents a browser Audio element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Audio.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Base">
            <summary>
            Represents a browser Base element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Base.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.BaseFont">
            <summary>
            Represents a browser BaseFont element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.BaseFont.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.BiDirectionalIsolation">
            <summary>
            Represents a browser BiDirectionalIsolation element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.BiDirectionalIsolation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.BiDirectionalOverride">
            <summary>
            Represents a browser BiDirectionalOverride element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.BiDirectionalOverride.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Big">
            <summary>
            Represents a browser Big element.
            </summary>
            <remarks>
            Not supported in HTML5 use CSS instead.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.Big.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.BlockQuote">
            <summary>
            Represents a block quotes element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.BlockQuote.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Body">
            <summary>
            Represents a browser Body element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Body.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Bold">
            <summary>
            Represents a browser bold element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Bold.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Button">
            <summary>
            Represent a browser button element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Button.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a Button browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Button.AutoFocus">
            <summary>
            Gets or sets the autofocus attribute.
            </summary>
            <remarks>
            HTML5: Specifies that a button should automatically get focus when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.Form">
            <summary>
            Gets or sets the form attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the button belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormAction">
            <summary>
            Gets or sets the form action attribute.
            </summary>
            <remarks>
            HTML5: Specifies where to send the form-data when a form is submitted. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormEncType">
            <summary>
            Gets or sets the form encoded type attribute.
            </summary>
            <remarks>
            HTML5: Specifies how form-data should be encoded before sending it to a server. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormMethod">
            <summary>
            Gets or sets the form method attribute.
            </summary>
            <remarks>
            HTML5: Specifies how to send the form-data (which HTTP method to use). Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormNoValidate">
            <summary>
            Gets or sets the form no validate attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the form-data should not be validated on submission. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormTarget">
            <summary>
            Gets or sets the form target attribute.
            </summary>
            <remarks>
            HTML5: Specifies where to display the response after submitting the form. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.Button.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Canvas">
            <summary>
            Represents a browser Canvas element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Canvas.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Caption">
            <summary>
            Represents a browser Caption element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Caption.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Center">
            <summary>
            Represents a browser Center element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Center.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.CheckBox">
            <summary>
            Represent a browser input checkbox element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.CheckBox.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a check box browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Checked">
            <summary>
            Gets or sets the checked attribute.
            </summary>
            <remarks>
            Specifies that an element should be pre-selected when the page loads (for type="checkbox" or type="radio").
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Form">
            <summary>
            Gets or sets the form attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the button belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.FormNoValidate">
            <summary>
            Gets or sets the form no validate attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the form-data should not be validated on submission. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Cite">
            <summary>
            Represents a browser Cite element.
            </summary>
            <remarks>
            In HTML5 this tag defines the title of a work.
            In HTML4 this tag defines a citation.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.Cite.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Code">
            <summary>
            Represents a browser code element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Code.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Column">
            <summary>
            Represents a browser Column (col) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Column.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.ColumnGroup">
            <summary>
            Represents a browser ColumnGroup element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.ColumnGroup.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.DataList">
            <summary>
            Represents a browser DataList element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.DataList.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Definition">
            <summary>
            Represents a browser Definition (dfn) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Definition.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Deleted">
            <summary>
            Represents a browser Deleted (del) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Deleted.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.DescriptionList">
            <summary>
            Represents a browser DescriptionList (dl) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.DescriptionList.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.DescriptionListDefinition">
            <summary>
            Represents a browser DescriptionListDefinition (dd) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.DescriptionListDefinition.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.DescriptionListTerm">
            <summary>
            Represents a browser DescriptionListTerm (dt) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.DescriptionListTerm.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Details">
            <summary>
            Represents a browser Details element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Details.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Dialog">
            <summary>
            Represents a browser Dialog element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Dialog.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Directory">
            <summary>
            Represents a browser Directory (dir) element.
            </summary>
            <remarks>
            Not supported in HTML5 so use CSS instead.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.Directory.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Division">
            <summary>
            Represents a browser division (div) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Division.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Embed">
            <summary>
            Represents a browser Embed element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Embed.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Emphasis">
            <summary>
            Represents a browser Emphasis (em) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Emphasis.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.FieldSet">
            <summary>
            Represents a browser fieldset element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.FieldSet.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Figure">
            <summary>
            Represents a browser Figure element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Figure.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.FigureCaption">
            <summary>
            Represents a browser FigureCaption (figcapture) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.FigureCaption.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Font">
            <summary>
            Represents a browser Font element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Font.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Footer">
            <summary>
            Represents a browser Footer element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Footer.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Form">
            <summary>
            Represent a browser form element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Form.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a form browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Form.Action">
            <summary>
            Gets or sets the action attribute.
            </summary>
            <remarks>
            Specifies where to send the form-data when a form is submitted.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.AutoComplete">
            <summary>
            Gets or sets the auto complete attribute.
            </summary>
            <remarks>
            HTML5: Specifies whether a form should have autocomplete on or off.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.EncType">
            <summary>
            Gets or sets the encoded type attribute.
            </summary>
            <remarks>
            Specifies how the form-data should be encoded when submitting it to the server (only for method="post").
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.Method">
            <summary>
            Gets or sets the method attribute.
            </summary>
            <remarks>
            Specifies the HTTP method to use when sending form-data.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.NoValidate">
            <summary>
            Gets or sets the no validate attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the form should not be validated when submitted.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.Target">
            <summary>
            Gets or sets the target attribute.
            </summary>
            <remarks>
            Specifies where to display the response that is received after submitting the form.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.Frame">
            <summary>
            Represents a browser Frame element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Frame.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.FrameSet">
            <summary>
            Represents a browser FrameSet element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.FrameSet.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Head">
            <summary>
            Represents a browser Head element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Head.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Header">
            <summary>
            Represents a browser header element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Header.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.HeadingGroup">
            <summary>
            Represents a browser HeadingGroup (hgroup) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.HeadingGroup.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.HorizontalRule">
            <summary>
            Represents a browser horizontal rule element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.HorizontalRule.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Html">
            <summary>
            Represents a browser Html element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Html.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Image">
            <summary>
            Represents a browser text input["image"] element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Image.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a Image browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Image.Alt">
            <summary>
            Gets or sets the alt attribute.
            </summary>
            <remarks>
            Specifies an alternate text for images.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Image.Height">
            <summary>
            Gets or sets the height attribute.
            </summary>
            <remarks>
            HTML5: Specifies the height of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Image.Src">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the URL of the image to use as a submit button.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Image.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Image.Width">
            <summary>
            Gets or sets the width attribute.
            </summary>
            <remarks>
            HTML5: Specifies the width of an input element.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.InlineFrame">
            <summary>
            Represents a browser InlineFrame element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.InlineFrame.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Insert">
            <summary>
            Represents a browser Insert (ins) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Insert.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Italic">
            <summary>
            Represents a browser Italic element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Italic.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Keyboard">
            <summary>
            Represents a browser Keyboard (kbd) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Keyboard.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.KeyGenerator">
            <summary>
            Represents a browser KeyGenerator (keygen) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.KeyGenerator.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Label">
            <summary>
            Represents a browser label element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Label.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Label.For">
            <summary>
            Gets or sets the element id (for) attribute.
            </summary>
            <remarks>
            Specifies which form element a label is bound to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Label.Form">
            <summary>
            Gets or sets the form id (form) attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the label belongs to.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.Legend">
            <summary>
            Represents a browser legend element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Legend.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.LineBreak">
            <summary>
            Represent a browser line break element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.LineBreak.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a line break browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Link">
            <summary>
            Represent a browser link element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Link.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a Link browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Link.Download">
            <summary>
            Gets or set the download attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the target will be downloaded when a user clicks on the hyper link.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Href">
            <summary>
            Gets or set the hypertext reference (href) attribute.
            </summary>
            <remarks>
            Specifies the URL of the page the link goes to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Media">
            <summary>
            Gets or set the media attribute.
            </summary>
            <remarks>
            HTML5: Specifies what media/device the linked document is optimized for.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Rel">
            <summary>
            Gets or set the hypertext reference of this link.
            </summary>
            <remarks>
            The rel attribute specifies the relationship between the current document and the linked
            document. Only used if the href attribute is present.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Target">
            <summary>
            Gets or set the target of this link.
            </summary>
            <remarks>
            Specifies where to open the linked document.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Type">
            <summary>
            Gets or set the media type of this link.
            </summary>
            <remarks>
            The Internet media type of the linked document. Look at IANA Media Types for a complete
            list of standard media types.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.ListItem">
            <summary>
            Represents a browser list item element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.ListItem.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.ListItem.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of a list item. The following list items will increment from that number (only for ordered lists).
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.Main">
            <summary>
            Represents a browser Main element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Main.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Map">
            <summary>
            Represents a browser Map element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Map.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Mark">
            <summary>
            Represents a browser Mark element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Mark.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Menu">
            <summary>
            Represents a browser Menu element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Menu.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.MenuItem">
            <summary>
            Represents a browser MenuItem element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.MenuItem.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Metadata">
            <summary>
            Represents a browser Metadata (meta) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Metadata.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Meter">
            <summary>
            Represents a browser Meter element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Meter.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Navigation">
            <summary>
            Represents a browser Navigation (nav) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Navigation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.NoFrames">
            <summary>
            Represents a browser NoFrames element.
            </summary>
            <remarks>
            Not supported in HTML5.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.NoFrames.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.NoScript">
            <summary>
            Represents a browser NoScript element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.NoScript.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Object">
            <summary>
            Represents a browser Object element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Object.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Option">
            <summary>
            Represents a browser option element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Option.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Option.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that an option should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Option.Label">
            <summary>
            Gets or sets the label attribute.
            </summary>
            <remarks>
            Specifies a shorter label for an option.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Option.Selected">
            <summary>
            Gets or sets the selected attribute.
            </summary>
            <remarks>
            Specifies that an option should be pre-selected when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Option.Value">
            <summary>
            Gets or sets the value for this select.
            </summary>
            <remarks>
            Specifies the value to be sent to a server.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.OptionGroup">
            <summary>
            Represents a browser OptionGroup (optgroup) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.OptionGroup.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.OrderedList">
            <summary>
            Represents a browser ordered list element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.OrderedList.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Output">
            <summary>
            Represents a browser Output element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Output.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Paragraph">
            <summary>
            Represents a browser paragraph (p) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Paragraph.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Parameter">
            <summary>
            Represents a browser Parameter (param) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Parameter.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.PreformattedText">
            <summary>
            Represents a browser PreformattedText (pre) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.PreformattedText.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Progress">
            <summary>
            Represents a browser Progress element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Progress.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Quotation">
            <summary>
            Represents a browser Quotation (q) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Quotation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.RadioButton">
            <summary>
            Represent a browser input radio button element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.RadioButton.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a input radio button browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Checked">
            <summary>
            Gets or sets the checked attribute.
            </summary>
            <remarks>
            Specifies that an element should be pre-selected when the page loads (for type="checkbox" or type="radio").
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Form">
            <summary>
            Gets or sets the form attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the button belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.FormNoValidate">
            <summary>
            Gets or sets the form no validate attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the form-data should not be validated on submission. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Ruby">
            <summary>
            Represents a browser Ruby element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Ruby.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.RubyExplanation">
            <summary>
            Represents a browser RubyExplanation (rp) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.RubyExplanation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.RubyTag">
            <summary>
            Represents a browser RubyTag (rt) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.RubyTag.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Sample">
            <summary>
            Represents a browser Sample (samp) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Sample.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Script">
            <summary>
            Represents a browser Script element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Script.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Section">
            <summary>
            Represents a browser Section element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Section.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Select">
            <summary>
            Represents a browser select element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Select.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Select.AutoFocus">
            <summary>
            Gets or sets the autofocus attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the drop-down list should automatically get focus when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a drop-down list should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.Form">
            <summary>
            Gets or sets the form id (form) attribute.
            </summary>
            <remarks>
            HTML5: Defines one or more forms the select field belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.Multiple">
            <summary>
            Gets or sets the multiple attribute.
            </summary>
            <remarks>
            Specifies that multiple options can be selected at once.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.OptionCount">
            <summary>
            Gets or sets the size attribute.
            </summary>
            <remarks>
            Defines the number of visible options in a drop-down list.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.Required">
            <summary>
            Gets or sets the required attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the user is required to select a value before submitting the form.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.SelectedOption">
            <summary>
            Returns the selected option or null if nothing is selected.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.Select.Value">
            <summary>
            Gets or sets the value for this select.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Small">
            <summary>
            Represents a browser small element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Small.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Source">
            <summary>
            Represents a browser Source element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Source.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Span">
            <summary>
            Represents a browser span element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Span.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Strike">
            <summary>
            Represents a browser Strike element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Strike.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.StrikeThrough">
            <summary>
            Represents a browser StrikeThrough (s) element.
            </summary>
            <remarks>
            The strike through element was deprecated in HTML4 use the delete (del) tag instead.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.StrikeThrough.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Strong">
            <summary>
            Represents a browser strong element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Strong.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Style">
            <summary>
            Represents a browser Style element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Style.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.StyleSheetLink">
            <summary>
            Represents a browser StyleSheetLink (link) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.StyleSheetLink.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.SubScript">
            <summary>
            Represents a browser SubScript (sub) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.SubScript.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Summary">
            <summary>
            Represents a browser Summary element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Summary.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.SuperScriptText">
            <summary>
            Represents a browser SuperScriptText (sup) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.SuperScriptText.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Table">
            <summary>
            Represents a browser table (table) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Table.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Table.Sortable">
            <summary>
            Gets or sets the sortable attribute.
            </summary>
            <remarks>
            Specifies that the table should be sortable.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.TableBody">
            <summary>
            Represents a browser table body (tbody) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableBody.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TableColumn">
            <summary>
            Represents a browser table column (td) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableColumn.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.TableColumn.ColumnSpan">
            <summary>
            Gets or sets the column span (colspan) attribute.
            </summary>
            <remarks>
            Specifies the number of columns a cell should span.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TableColumn.Headers">
            <summary>
            Gets or sets the header id (headers) attribute.
            </summary>
            <remarks>
            Specifies one or more header cells a cell is related to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TableColumn.RowSpan">
            <summary>
            Gets or sets the row span (rowspan) attribute.
            </summary>
            <remarks>
            Sets the number of rows a cell should span.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.TableFooter">
            <summary>
            Represents a browser TableFooter (tfoot) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableFooter.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TableHead">
            <summary>
            Represents a browser table head (thead) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableHead.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TableHeaderColumn">
            <summary>
            Represents a browser TableHeaderColumn (th) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableHeaderColumn.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TableRow">
            <summary>
            Represents a browser table row (tr) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableRow.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TeletypeText">
            <summary>
            Represents a browser TeletypeText (tt) element.
            </summary>
            <remarks>
            This tag is not supported in HTML5 so use CSS instead.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.TeletypeText.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TextArea">
            <summary>
            Represents a browser text area element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TextArea.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a text area browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.AutoFocus">
            <summary>
            Gets or sets the autofocus attribute.
            </summary>
            <remarks>
            HTML5: Specifies that an input element should automatically get focus when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Cols">
            <summary>
            Gets or sets the cols attribute.
            </summary>
            <remarks>
            Specifies the visible width of a text area.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Form">
            <summary>
            Gets or sets the form attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the text area belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.MaxLength">
            <summary>
            Gets or sets the max length attribute.
            </summary>
            <remarks>
            HTML5: Specifies the maximum number of characters allowed in the text area.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.PlaceHolder">
            <summary>
            Gets or sets the place holder attribute.
            </summary>
            <remarks>
            HTML5: Specifies a short hint that describes the expected value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.ReadOnly">
            <summary>
            Gets or sets the read only attribute.
            </summary>
            <remarks>
            Specifies that an input field is read-only
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Required">
            <summary>
            Gets or sets the required attribute.
            </summary>
            <remarks>
            HTML5: Specifies that a text area is required/must be filled out.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Rows">
            <summary>
            Gets or sets the rows attribute.
            </summary>
            <remarks>
            Specifies the visible number of lines in a text area.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.TypingDelay">
            <summary>
            Gets the delay (in milliseconds) between each character.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Wrap">
            <summary>
            Gets or sets the wrap attribute.
            </summary>
            <remarks>
            HTML5: Specifies how the text in a text area is to be wrapped when submitted in a form.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.TextArea.TypeText(System.String,System.Boolean)">
            <summary>
            Type text into the element.
            </summary>
            <param name="value"> The value to be typed. </param>
            <param name="reset"> Resets the text in the element before typing the text. </param>
        </member>
        <member name="T:TestR.Web.Elements.TextInput">
            <summary>
            Represents a browser text input element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TextInput.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a TextInput browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.AutoFocus">
            <summary>
            Gets or sets the autofocus attribute.
            </summary>
            <remarks>
            HTML5: Specifies that an input element should automatically get focus when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Pattern">
            <summary>
            Gets or sets the pattern attribute.
            </summary>
            <remarks>
            HTML5: Specifies a regular expression that an input element's value is checked against.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.PlaceHolder">
            <summary>
            Gets or sets the place holder attribute.
            </summary>
            <remarks>
            HTML5: Specifies a short hint that describes the expected value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.ReadOnly">
            <summary>
            Gets or sets the read only attribute.
            </summary>
            <remarks>
            Specifies that an input field is read-only
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Step">
            <summary>
            Gets or sets the step attribute.
            </summary>
            <remarks>
            HTML5: Specifies the legal number intervals for an input field.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.TypingDelay">
            <summary>
            Gets the delay (in milliseconds) between each character.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.TextInput.TypeText(System.String,System.Boolean)">
            <summary>
            Type text into the element.
            </summary>
            <param name="value"> The value to be typed. </param>
            <param name="reset"> Clear the input before typing the text. </param>
        </member>
        <member name="T:TestR.Web.Elements.Time">
            <summary>
            Represents a browser Time element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Time.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Title">
            <summary>
            Represents a browser Title element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Title.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Track">
            <summary>
            Represents a browser Track element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Track.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Underline">
            <summary>
            Represents a browser underline element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Underline.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.UnorderedList">
            <summary>
            Represents a browser unordered list element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.UnorderedList.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Variable">
            <summary>
            Represents a browser Variable (var) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Variable.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Video">
            <summary>
            Represents a browser Video element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Video.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.WordBreakOpportunity">
            <summary>
            Represents a browser WordBreakOpportunity (wbr) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.WordBreakOpportunity.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.JavaScriptLibrary">
            <summary>
            Specifies different JavaScript libraries that are detected after page navigation in the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Angular">
            <summary>
            AngularJS
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.JQuery">
            <summary>
            JQuery
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Moment">
            <summary>
            Moment
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Bootstrap2">
            <summary>
            Bootstrap 2
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Bootstrap3">
            <summary>
            Bootstrap 3
            </summary>
        </member>
        <member name="T:TestR.Web.WebElement">
            <summary>
            Represents an element for a browser.
            </summary>
        </member>
        <member name="F:TestR.Web.WebElement._propertiesToRename">
            <summary>
            Properties that need to be renamed when requested.
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> </param>
        </member>
        <member name="P:TestR.Web.WebElement.Browser">
            <summary>
            Gets the browser this element is currently associated with.
            </summary>
        </member>
        <member name="P:TestR.Web.WebElement.Class">
            <summary>
            Gets or sets the class attribute.
            </summary>
            <remarks>
            Specifies one or more class names for an element (refers to a class in a style sheet).
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Focused">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.FocusedElement">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Height">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Id">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Location">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Name">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.TagName">
            <summary>
            Gets the tag element name.
            </summary>
        </member>
        <member name="P:TestR.Web.WebElement.Text">
            <summary>
            Gets or sets the text content.
            </summary>
        </member>
        <member name="P:TestR.Web.WebElement.Title">
            <summary>
            Gets or sets the title attribute.
            </summary>
            <remarks>
            Specifies extra information about an element.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Width">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.CaptureSnippet(System.String)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.Click(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.FireEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Fires an event on the element.
            </summary>
            <param name="eventName"> The events name to fire. </param>
            <param name="eventProperties"> The properties for the event. </param>
        </member>
        <member name="M:TestR.Web.WebElement.Focus">
            <summary>
            Focuses on the element.
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.GetAttributeValue(System.String)">
            <summary>
            Gets an attribute value by the provided name.
            </summary>
            <param name="name"> The name of the attribute to read. </param>
            <returns> The attribute value. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.GetAttributeValue(System.String,System.Boolean)">
            <summary>
            Gets an attribute value by the provided name.
            </summary>
            <param name="name"> The name of the attribute to read. </param>
            <param name="refresh"> A flag to force the element to refresh. </param>
            <returns> The attribute value. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.GetStyleAttributeValue(System.String)">
            <summary>
            Gets an attribute style value by the provided name.
            </summary>
            <param name="name"> The name of the attribute style to read. </param>
            <returns> The attribute style value. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.GetStyleAttributeValue(System.String,System.Boolean)">
            <summary>
            Gets an attribute style value by the provided name.
            </summary>
            <param name="name"> The name of the attribute style to read. </param>
            <param name="forceRefresh"> A flag to force the element to refresh. </param>
            <returns> The attribute style value. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.Highlight(System.Boolean)">
            <summary>
            Highlight or resets the element.
            </summary>
            <param name="highlight">
            If true the element is highlight yellow. If false the element is returned to its original
            color.
            </param>
        </member>
        <member name="M:TestR.Web.WebElement.MoveMouseTo(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.Refresh">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.RightClick(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.SetAttributeValue(System.String,System.String)">
            <summary>
            Sets an attribute value by the provided name.
            </summary>
            <param name="name"> The name of the attribute to write. </param>
            <param name="value"> The value to be written. </param>
        </member>
        <member name="M:TestR.Web.WebElement.SetStyleAttributeValue(System.String,System.String)">
            <summary>
            Sets an attribute style value by the provided name.
            </summary>
            <param name="name"> The name of the attribute style to write. </param>
            <param name="value"> The style value to be written. </param>
        </member>
        <member name="M:TestR.Web.WebElement.ToDetailString">
            <summary>
            Provides a string of details for the element.
            </summary>
            <returns> The string of element details. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.WaitForComplete(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.GetKeyCodeEventProperty(System.Char)">
            <summary>
            First the key code event properties for the character.
            </summary>
            <param name="character"> The character to get the event properties for. </param>
            <returns> An event properties for the character. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.TriggerElement">
            <summary>
            Triggers the element via the Angular function "trigger".
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.Create(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Adds a collection of elements and initializes them as their specific element type.
            </summary>
            <param name="token"> The collection of elements to add. </param>
            <param name="browser"> The browser the element is for. </param>
            <param name="parent"> The parent for this element. </param>
        </member>
        <member name="M:TestR.Web.WebElement.AddOrUpdateElementAttribute(System.String,System.String)">
            <summary>
            Add or updates the cached attributes for this element.
            </summary>
            <param name="name"> </param>
            <param name="value"> </param>
        </member>
        <member name="M:TestR.Web.WebElement.GetCachedAttribute(System.String)">
            <summary>
            Gets the attribute from the local cache.
            </summary>
            <param name="name"> The name of the attribute. </param>
            <returns> Returns the value or null if the attribute was not found. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.SetElementAttributeValue(System.String,System.String)">
            <summary>
            Sets the element attribute value. If the attribute is not found we'll add it.
            </summary>
            <param name="name"> </param>
            <param name="value"> </param>
        </member>
    </members>
</doc>
