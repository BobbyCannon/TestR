<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestR</name>
    </assembly>
    <members>
        <member name="T:TestR.Application">
            <summary>
            Represents an application that can be automated.
            </summary>
        </member>
        <member name="F:TestR.Application.DefaultTimeout">
            <summary>
            Gets the default timeout (in milliseconds).
            </summary>
        </member>
        <member name="M:TestR.Application.#ctor(System.Diagnostics.Process)">
            <summary>
            Creates an instance of the application.
            </summary>
            <param name="process"> The process for the application. </param>
        </member>
        <member name="M:TestR.Application.#ctor(TestR.Desktop.SafeProcess)">
            <summary>
            Creates an instance of the application.
            </summary>
            <param name="process"> The safe process for the application. </param>
        </member>
        <member name="P:TestR.Application.AutoClose">
            <summary>
            Gets or sets a flag to auto close the application when disposed of.
            </summary>
        </member>
        <member name="P:TestR.Application.FocusedElement">
            <inheritdoc />
        </member>
        <member name="P:TestR.Application.Handle">
            <summary>
            Gets the handle for this window.
            </summary>
        </member>
        <member name="P:TestR.Application.Id">
            <inheritdoc />
        </member>
        <member name="P:TestR.Application.IsRunning">
            <summary>
            Gets the value indicating that the process is running.
            </summary>
        </member>
        <member name="P:TestR.Application.Location">
            <summary>
            Gets the location of the application.
            </summary>
        </member>
        <member name="P:TestR.Application.Name">
            <inheritdoc />
        </member>
        <member name="P:TestR.Application.Process">
            <summary>
            Gets the underlying process for this application.
            </summary>
        </member>
        <member name="P:TestR.Application.Size">
            <summary>
            Gets the size of the application.
            </summary>
        </member>
        <member name="P:TestR.Application.SlowMotion">
            <summary>
            Gets or sets a flag to tell the browser to act slower. Defaults to false.
            </summary>
        </member>
        <member name="P:TestR.Application.Timeout">
            <summary>
            Gets or sets the time out for delay request. Defaults to 60 seconds.
            </summary>
        </member>
        <member name="M:TestR.Application.Attach(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="arguments"> The arguments for the executable. Arguments are optional. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <param name="isUwp"> True if we are attaching to a UWP window. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.Attach(System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="handle"> The main window handle of the executable. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.Attach(System.Diagnostics.Process,System.Boolean,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="process"> The process to attach to. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.Attach(TestR.Desktop.SafeProcess,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="process"> The process to attach to. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <param name="isUwp"> True if we are attaching to a UWP window. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.AttachOrCreate(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Attaches the application to an existing process.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="arguments"> The arguments for the executable. Arguments are optional. </param>
            <param name="refresh"> The setting to determine to refresh children now. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.AttachOrCreateUniversal(System.String,System.String)">
            <summary>
            Attaches or creates a new instance of the universal application.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="packageFamilyName"> The application package family name. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.BringToFront">
            <summary>
            Brings the application to the front and makes it the top window.
            </summary>
        </member>
        <member name="M:TestR.Application.Close(System.Nullable{System.Int32})">
            <summary>
            Closes the window.
            </summary>
            <param name="timeout"> The optional timeout in milliseconds. If not provided the Timeout value will be used. </param>
        </member>
        <member name="M:TestR.Application.CloseAll(System.String,System.Int32,System.Int32)">
            <summary>
            Closes all windows my name and closes them.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="timeout"> The timeout to wait for the application to close. </param>
            <param name="exceptProcessId"> The ID of the process to exclude. </param>
        </member>
        <member name="M:TestR.Application.Create(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new application process.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="arguments"> The arguments for the executable. Arguments are optional. </param>
            <param name="refresh"> The flag to trigger loading to load state when creating the application. Defaults to true. </param>
            <param name="bringToFront"> Bring the process to the front. </param>
            <returns> The instance that represents an application. </returns>
        </member>
        <member name="M:TestR.Application.CreateUniversal(System.String,System.String)">
            <summary>
            Creates a new instance of the universal application.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="packageFamilyName"> The application package family name. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Application.Exists(System.String,System.String)">
            <summary>
            Checks to see if an application process exist by path and optional arguments.
            </summary>
            <param name="executablePath"> The path to the executable. </param>
            <param name="arguments"> The arguments for the executable. Arguments are optional. </param>
            <returns> True if the application exists and false otherwise. </returns>
        </member>
        <member name="M:TestR.Application.Focus">
            <summary>
            Sets the application as the focused window.
            </summary>
        </member>
        <member name="M:TestR.Application.IsInFront">
            <summary>
            Returns a value indicating if the windows is in front of all other windows.
            </summary>
            <returns> </returns>
        </member>
        <member name="M:TestR.Application.Kill(System.Nullable{System.Int32})">
            <summary>
            Forcefully closes the application.
            </summary>
            <param name="timeout"> The optional timeout in milliseconds. If not provided the Timeout value will be used. </param>
        </member>
        <member name="M:TestR.Application.MoveWindow(System.Int32,System.Int32)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="x"> The x coordinate to move to. </param>
            <param name="y"> The y coordinate to move to. </param>
        </member>
        <member name="M:TestR.Application.MoveWindow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="x"> The x coordinate to move to. </param>
            <param name="y"> The y coordinate to move to. </param>
            <param name="width"> The width of the window. </param>
            <param name="height"> The height of the window. </param>
        </member>
        <member name="M:TestR.Application.MoveWindow(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="location"> The location to move to. </param>
            <param name="size"> The size of the window. </param>
        </member>
        <member name="M:TestR.Application.Refresh``1(System.Func{``0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:TestR.Application.Resize(System.Int32,System.Int32)">
            <summary>
            Resize the browser to the provided size.
            </summary>
            <param name="width"> The width to set. </param>
            <param name="height"> The height to set. </param>
        </member>
        <member name="M:TestR.Application.WaitForComplete(System.Int32)">
            <summary>
            Waits for the Process to not be busy.
            </summary>
            <param name="minimumDelay"> The minimum delay in milliseconds to wait. Defaults to 0 milliseconds. </param>
        </member>
        <member name="M:TestR.Application.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Application.GetWindows(System.Collections.Generic.ICollection{System.IntPtr})">
            <summary>
            Gets all windows for the process.
            </summary>
            <returns> The array of windows. </returns>
        </member>
        <member name="T:TestR.Desktop.DesktopElement">
            <summary>
            Base element for desktop automation.
            </summary>
        </member>
        <member name="F:TestR.Desktop.DesktopElement._excludedProperties">
            <summary>
            Properties that should not be included in <see cref="M:TestR.Desktop.DesktopElement.ToDetailString" />.
            </summary>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.#ctor(Interop.UIAutomationClient.IUIAutomationElement,TestR.Application,TestR.ElementHost)">
            <summary>
            Creates an instance of a desktop element.
            </summary>
            <param name="element"> The automation element for this element. </param>
            <param name="application"> The application parent for this element. </param>
            <param name="parent"> The parent element for this element. </param>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Enabled">
            <summary>
            Gets a value that indicates whether the element is enabled.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Focused">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.FocusedElement">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Height">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Id">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.KeyboardFocusable">
            <summary>
            Gets a value that indicates whether the element can be use by the keyboard.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Location">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Name">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.DesktopElement.NativeElement">
            <summary>
            Gets the native element for the desktop element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.TypeId">
            <summary>
            Gets the type ID of this element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.TypeName">
            <summary>
            Gets the name of the control type.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Visible">
            <summary>
            Gets a value that indicates whether the element is visible.
            </summary>
        </member>
        <member name="P:TestR.Desktop.DesktopElement.Width">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Click(System.Int32,System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Focus">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.FromCursor">
            <summary>
            Gets the element that is currently under the cursor.
            </summary>
            <returns> The element if found or null if not found. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.FromFocus">
            <summary>
            Gets the element that is currently focused.
            </summary>
            <returns> The element if found or null if not found. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.FromPoint(System.Drawing.Point)">
            <summary>
            Gets the element that is currently at the point.
            </summary>
            <param name="point"> The point to try and detect at element at. </param>
            <returns> The element if found or null if not found. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.GetText">
            <summary>
            Gets the text value of the element.
            </summary>
            <returns> The value of the element. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.LeftClick(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.MiddleClick(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.MoveMouseTo(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Refresh``1(System.Func{``0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.RightClick(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.SetText(System.String)">
            <summary>
            Sets the text value of the element.
            </summary>
            <param name="value"> The text to set the element to. </param>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.ToDetailString">
            <summary>
            Provides a string of details for the element.
            </summary>
            <returns> The string of element details. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.UpdateParents">
            <summary>
            Update the parents for this element.
            </summary>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.WaitForComplete(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.DesktopElement.Create(Interop.UIAutomationClient.IUIAutomationElement,TestR.Application,TestR.Desktop.DesktopElement)">
            <summary>
            Creates an element from the automation element.
            </summary>
            <param name="element"> The element to create. </param>
            <param name="application"> The application parent for this element. </param>
            <param name="parent"> The parent of the element to create. </param>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.GetChildren(TestR.Desktop.DesktopElement)">
            <summary>
            Gets all the direct children of an element.
            </summary>
            <param name="element"> The element to get the children of. </param>
            <returns> The list of children for the element. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.GetClickablePoint(System.Int32,System.Int32)">
            <summary>
            Gets the clickable point for the element.
            </summary>
            <param name="x"> Optional X offset when calculating. </param>
            <param name="y"> Optional Y offset when calculating. </param>
            <returns> The clickable point for the element. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.GetTypeName(System.Int32)">
            <summary>
            Fallback for native element type text.
            </summary>
            <param name="typeId"> The ID of the type. </param>
            <returns> The name of the type for the provided ID. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.TryGetClickablePoint(System.Drawing.Point@,System.Int32,System.Int32)">
            <summary>
            Try to get a clickable point for the element.
            </summary>
            <param name="point"> The point value if call was successful. </param>
            <param name="x"> Optional X offset when calculating. </param>
            <param name="y"> Optional Y offset when calculating. </param>
            <returns> The clickable point for the element. </returns>
        </member>
        <member name="M:TestR.Desktop.DesktopElement.UpdateParent">
            <summary>
            Update the parent for the provided element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Button">
            <summary>
            Represents a button element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Button.Toggled">
            <summary>
            Gets a flag indicating if the button is checked. Usable for split buttons.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Button.ToggleState">
            <summary>
            Gets the toggle state of the button.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Calendar">
            <summary>
            Represents a calendar element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.CheckBox">
            <summary>
            Represents a check box element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.CheckBox.Checked">
            <summary>
            Gets a flag indicating if the checkbox is checked.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.CheckBox.CheckedState">
            <summary>
            Gets the state of the checkbox.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.CheckBox.ReadOnly">
            <summary>
            Gets a value indicating whether the control can have a value set programmatically, or that can be edited by the user.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.CheckBox.Toggle">
            <summary>
            Toggle the checkbox.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ComboBox">
            <summary>
            Represents a combo box element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.ComboBox.ExpandCollapseState">
            <summary>
            Gets the current expanded state of the combo box.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.ComboBox.ReadOnly">
            <summary>
            Gets a value indicating whether the control can have a value set programmatically, or that can be edited by the user.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.ComboBox.Text">
            <summary>
            Gets the text value.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.ComboBox.Collapse">
            <summary>
            Collapses the combo box.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.ComboBox.Expand">
            <summary>
            Expands the combo box.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Custom">
            <summary>
            Represents a custom element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.DataGrid">
            <summary>
            Represents a datagrid element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.DataItem">
            <summary>
            Represents the data item.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Document">
            <summary>
            Represents a document element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Document.Text">
            <summary>
            Gets the text value.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Edit">
            <summary>
            Represents a edit element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Edit.ReadOnly">
            <summary>
            Gets a value indicating whether the control can have a value set programmatically, or that can be edited by the user.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Edit.Text">
            <summary>
            Gets the text value.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Group">
            <summary>
            Represents the group for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Header">
            <summary>
            Represents the header.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.HeaderItem">
            <summary>
            Represents the header item.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Hyperlink">
            <summary>
            Represents a hyperlink element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Image">
            <summary>
            Represents a image element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.List">
            <summary>
            Represents the list for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ListItem">
            <summary>
            Represents a list item element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Menu">
            <summary>
            Represents a menu element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.MenuBar">
            <summary>
            Represents the menu bar for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.MenuItem">
            <summary>
            Represents the menu item for a window.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.MenuItem.IsExpanded">
            <summary>
            Gets the menu expand collapse state.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.MenuItem.SupportsExpandingCollapsing">
            <summary>
            Gets a value indicating whether this menu item supports expanding and collapsing pattern.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.MenuItem.Click(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Performs mouse click at the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
            <param name="refresh"> Optional value to refresh the element's children. </param>
        </member>
        <member name="M:TestR.Desktop.Elements.MenuItem.Collapse">
            <summary>
            Collapse the menu item.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.MenuItem.Expand">
            <summary>
            Expand the menu item.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Pane">
            <summary>
            Represents a edit element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ProgressBar">
            <summary>
            Represents a progress bar element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.RadioButton">
            <summary>
            Represents a radio button element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ScrollBar">
            <summary>
            Represents the scroll bar for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.SemanticZoom">
            <summary>
            Represents a semantic zoom element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Separator">
            <summary>
            Represents the separator element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Slider">
            <summary>
            Represents a semantic zoom element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Spinner">
            <summary>
            Represents a spinner element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.SplitButton">
            <summary>
            Represents a split button element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.StatusBar">
            <summary>
            Represents the status bar for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.TabControl">
            <summary>
            Represents the tab control.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.TabItem">
            <summary>
            Represents the tab item.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Table">
            <summary>
            Represents the table element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Text">
            <summary>
            Represents the text for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Thumb">
            <summary>
            Represents the thumb for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.TitleBar">
            <summary>
            Represents the title bar for a window.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.TitleBar.CloseButton">
            <summary>
            Gets the close button.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.TitleBar.MaximizeButton">
            <summary>
            Gets the maximize button.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.TitleBar.MinimizeButton">
            <summary>
            Gets the maximize button.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ToolBar">
            <summary>
            Represents the tool bar for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.ToolTip">
            <summary>
            Represents a tooltip element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Tree">
            <summary>
            Represents the tree for a window.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.TreeItem">
            <summary>
            Represents a tree item element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.Window">
            <summary>
            Represents a window for an application.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.Handle">
            <summary>
            Gets the handle for the Window.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.IsMaximized">
            <summary>
            Get a flag that determines if the window is maximized.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.IsMinimized">
            <summary>
            Get a flag that determines if the window is minimized.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.Location">
            <summary>
            Gets the location of the element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.StatusBar">
            <summary>
            Gets the status bar for the window. Returns null if the window does not have a status bar.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.TitleBar">
            <summary>
            Gets the title bar for the window. Returns null if the window does not have a title bar.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Elements.Window.WindowState">
            <summary>
            Gets the state of the window.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.BringToFront">
            <summary>
            Bring the window to the front.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.Close">
            <summary>
            Closes a window.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.Move(System.Int32,System.Int32)">
            <summary>
            Move the window.
            </summary>
            <param name="x"> The x value of the position to move to. </param>
            <param name="y"> The y value of the position to move to. </param>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.Move(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Move the window.
            </summary>
            <param name="x"> The x value of the position to move to. </param>
            <param name="y"> The y value of the position to move to. </param>
            <param name="width"> The width to set. </param>
            <param name="height"> The height to set. </param>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.Move(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="location"> The location to move to. </param>
            <param name="size"> The size of the window. </param>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.Resize(System.Int32,System.Int32)">
            <summary>
            Resize the window.
            </summary>
            <param name="width"> The width to set. </param>
            <param name="height"> The height to set. </param>
        </member>
        <member name="M:TestR.Desktop.Elements.Window.WaitWhileBusy">
            <summary>
            Waits for the window to no longer be busy.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Elements.WindowState">
            <summary>
            Specifies whether a window is minimized, maximized, or restored.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Elements.WindowState.Normal">
            <summary>
            The window is restored.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Elements.WindowState.Minimized">
            <summary>
            The window is minimized.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Elements.WindowState.Maximized">
            <summary>
            The window is maximized.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Keyboard">
            <summary>
            Represents the keyboard and allows for simulated input.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Keyboard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TestR.Desktop.Keyboard" />.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Keyboard.State">
            <summary>
            The last state of the keyboard when monitoring.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Keyboard.DefaultInputDelay">
            <summary>
            Default input delay if the SendInput delay is TimeSpan.Zero.
            If this default input delay is also TimeSpan.Zero then no delay will occur.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Keyboard.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Keyboard.IsKeyDown(TestR.Desktop.KeyboardKey[])">
            <summary>
            Determines whether the specified key is up or down.
            </summary>
            <param name="keys"> The <see cref="T:TestR.Desktop.KeyboardKey" /> for the key(s). </param>
            <returns>
            True if the key is down otherwise false.
            </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.IsKeyUp(TestR.Desktop.KeyboardKey[])">
            <summary>
            Determines whether the specified key is up or down.
            </summary>
            <param name="keys"> The <see cref="T:TestR.Desktop.KeyboardKey" /> for the key(s). </param>
            <returns>
            True if the key is up otherwise false.
            </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.IsTogglingKeyInEffect(TestR.Desktop.KeyboardKey)">
            <summary>
            Determines whether the toggling key is toggled on (in-effect) or not by calling the GetKeyState function.
            </summary>
            <param name="key"> The <see cref="T:TestR.Desktop.KeyboardKey" /> for the key. </param>
            <returns>
            True if the toggling key is toggled on (in-effect) otherwise false.
            </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.KeyDown(TestR.Desktop.KeyboardKey[])">
            <summary>
            Calls the Input.SendInput method to simulate key down.
            </summary>
            <param name="keys"> The key(s) to press down. </param>
        </member>
        <member name="M:TestR.Desktop.Keyboard.KeyPress(TestR.Desktop.KeyboardKey[])">
            <summary>
            Simulates a key press for each of the specified key codes in the order they are specified.
            </summary>
            <param name="keys"> The keys to press. </param>
        </member>
        <member name="M:TestR.Desktop.Keyboard.KeyPress(TestR.Desktop.KeyboardModifier,TestR.Desktop.KeyboardKey[])">
            <summary>
            Simulates a modified keystroke where there is one modifier and multiple keys like CTRL-K-C where CTRL is the
            modifierKey and K and C are the keys.
            The flow is Modifier KeyDown, Keys Press in order, Modifier KeyUp.
            </summary>
            <param name="modifier"> The modifier key. </param>
            <param name="keys"> The list of keys to press. </param>
        </member>
        <member name="M:TestR.Desktop.Keyboard.KeyUp(TestR.Desktop.KeyboardKey[])">
            <summary>
            Calls the Input.SendInput method to simulate key up.
            </summary>
            <param name="keys"> The key(s) to lift up. </param>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(System.String)">
            <summary>
            Sends provided text and an optional set of keys as input.
            </summary>
            <param name="text"> The text to be sent. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(System.String,System.TimeSpan)">
            <summary>
            Sends provided text and an optional set of keys as input.
            </summary>
            <param name="text"> The text to be sent. </param>
            <param name="delay"> An optional delay after sending input. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(System.String,TestR.Desktop.KeyboardKey[])">
            <summary>
            Sends provided text and an optional set of keys as input.
            </summary>
            <param name="text"> The text to be sent. </param>
            <param name="keys"> The set of keys to be sent. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(System.String,System.TimeSpan,TestR.Desktop.KeyboardKey[])">
            <summary>
            Sends provided text as input. Can delay with before sending an optional set of keys.
            </summary>
            <param name="text"> The text to be sent. </param>
            <param name="delay"> An optional delay to wait before sending the provided keys. </param>
            <param name="keys"> An optional set of keys to be sent. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
            <exception cref="T:System.ArgumentException"> The text parameter is too long. </exception>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(System.String,TestR.Desktop.KeyStroke[])">
            <summary>
            Sends provided text and optional set of key strokes as input.
            </summary>
            <param name="text"> The text to be sent. </param>
            <param name="keyStrokes"> An optional set of key strokes to be sent. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
            <exception cref="T:System.ArgumentException"> The text parameter is too long. </exception>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(System.String,System.TimeSpan,TestR.Desktop.KeyStroke[])">
            <summary>
            Sends provided text as input. Can delay with before sending an optional set of key strokes.
            </summary>
            <param name="text"> The text to be sent. </param>
            <param name="delay"> An optional delay to wait before sending the provided keys. </param>
            <param name="keyStrokes"> An optional set of key strokes to be sent. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
            <exception cref="T:System.ArgumentException"> The text parameter is too long. </exception>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(TestR.Desktop.KeyboardKey[])">
            <summary>
            Sends provided set of key as input.
            </summary>
            <param name="keys"> The set of keys to be sent. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(TestR.Desktop.KeyboardModifier,TestR.Desktop.KeyboardKey[])">
            <summary>
            Sends provided set of keys as input with a modifier (ctrl, shift, etc).
            </summary>
            <param name="modifiers"> The modifier key(s). </param>
            <param name="keys"> The set of keys to be sent. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.SendInput(TestR.Desktop.KeyStroke[])">
            <summary>
            Sends provided key strokes as input.
            </summary>
            <param name="keyStrokes"> The set of key strokes to be sent. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
            <exception cref="T:System.ArgumentException"> The text parameter is too long. </exception>
        </member>
        <member name="M:TestR.Desktop.Keyboard.Sleep(System.Int32)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeoutInMilliseconds"> The number of milliseconds to wait. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.Sleep(System.TimeSpan)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeout"> The time to wait. </param>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.StartMonitoring">
            <summary>
            Start monitoring the keyboard input.
            </summary>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.StopMonitoring">
            <summary>
            Stop monitoring the keyboard input.
            </summary>
            <returns> This <see cref="T:TestR.Desktop.Keyboard" /> instance. </returns>
        </member>
        <member name="M:TestR.Desktop.Keyboard.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="E:TestR.Desktop.Keyboard.KeyPressed">
            <summary>
            Called when monitoring keyboard and a key is pressed.
            </summary>
        </member>
        <member name="T:TestR.Desktop.KeyboardAction">
            <summary>
            Represents a keyboard key action. Ex. Key Press, Up, Down
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardAction.KeyPress">
            <summary>
            Represents a key press action.
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardAction.KeyDown">
            <summary>
            Represents a key down action.
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardAction.KeyUp">
            <summary>
            Represents a key up action.
            </summary>
        </member>
        <member name="T:TestR.Desktop.KeyboardKey">
            <summary>
            The input codes.
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LeftMouseButton">
            <summary>
            Left mouse button
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.RightMouseButton">
            <summary>
            Right mouse button
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.ControlBreak">
            <summary>
            Control-break processing
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.MiddleMouseButton">
            <summary>
            Middle mouse button (three-button mouse) - NOT contiguous with LBUTTON and RBUTTON
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.XButton1">
            <summary>
            X1 mouse button - NOT contiguous with LBUTTON and RBUTTON
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.XButton2">
            <summary>
            X2 mouse button - NOT contiguous with LBUTTON and RBUTTON
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Backspace">
            <summary>
            BACKSPACE key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Tab">
            <summary>
            TAB key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Clear">
            <summary>
            CLEAR key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Enter">
            <summary>
            ENTER key
            </summary>
            <seealso cref="F:TestR.Desktop.KeyboardKey.Return" />
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Return">
            <summary>
            ENTER key
            </summary>
            <seealso cref="F:TestR.Desktop.KeyboardKey.Enter" />
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Shift">
            <summary>
            SHIFT key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Control">
            <summary>
            CTRL key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Alt">
            <summary>
            ALT key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Pause">
            <summary>
            PAUSE key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.CapsLock">
            <summary>
            CAPS LOCK key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Kana">
            <summary>
            Input Method Editor (IME) Kana mode
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Hangeul">
            <summary>
            IME Hangeul mode (maintained for compatibility; use HANGUL)
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Hangul">
            <summary>
            IME Hangul mode
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Junja">
            <summary>
            IME Junja mode
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Final">
            <summary>
            IME final mode
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Hanja">
            <summary>
            IME Hanja mode
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Kanji">
            <summary>
            IME Kanji mode
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Escape">
            <summary>
            ESC key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Convert">
            <summary>
            IME convert
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.NonConvert">
            <summary>
            IME non-convert
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Accept">
            <summary>
            IME accept
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.ModeChange">
            <summary>
            IME mode change request
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Space">
            <summary>
            Space Bar
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Prior">
            <summary>
            PAGE UP key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Next">
            <summary>
            PAGE DOWN key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.End">
            <summary>
            END key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Home">
            <summary>
            HOME key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LeftArrow">
            <summary>
            LEFT ARROW key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.UpArrow">
            <summary>
            UP ARROW key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.RightArrow">
            <summary>
            RIGHT ARROW key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.DownArrow">
            <summary>
            DOWN ARROW key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Select">
            <summary>
            SELECT key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Print">
            <summary>
            PRINT key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Execute">
            <summary>
            EXECUTE key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Snapshot">
            <summary>
            PRINT SCREEN key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Insert">
            <summary>
            INS key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Delete">
            <summary>
            DEL key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Help">
            <summary>
            HELP key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number0">
            <summary>
            0 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number1">
            <summary>
            1 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number2">
            <summary>
            2 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number3">
            <summary>
            3 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number4">
            <summary>
            4 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number5">
            <summary>
            5 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number6">
            <summary>
            6 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number7">
            <summary>
            7 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number8">
            <summary>
            8 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Number9">
            <summary>
            9 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.A">
            <summary>
            A key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.B">
            <summary>
            B key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.C">
            <summary>
            C key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.D">
            <summary>
            D key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.E">
            <summary>
            E key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F">
            <summary>
            F key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.G">
            <summary>
            G key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.H">
            <summary>
            H key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.I">
            <summary>
            I key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.J">
            <summary>
            J key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.K">
            <summary>
            K key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.L">
            <summary>
            L key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.M">
            <summary>
            M key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.N">
            <summary>
            N key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.O">
            <summary>
            O key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.P">
            <summary>
            P key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Q">
            <summary>
            Q key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.R">
            <summary>
            R key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.S">
            <summary>
            S key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.T">
            <summary>
            T key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.U">
            <summary>
            U key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.V">
            <summary>
            V key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.W">
            <summary>
            W key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.X">
            <summary>
            X key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Y">
            <summary>
            Y key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Z">
            <summary>
            Z key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LeftWindows">
            <summary>
            Left Windows key (Microsoft Natural keyboard)
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.RightWindows">
            <summary>
            Right Windows key (Natural keyboard)
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Apps">
            <summary>
            Applications key (Natural keyboard)
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Sleep">
            <summary>
            Computer Sleep key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad0">
            <summary>
            Numeric keypad 0 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad1">
            <summary>
            Numeric keypad 1 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad2">
            <summary>
            Numeric keypad 2 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad3">
            <summary>
            Numeric keypad 3 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad4">
            <summary>
            Numeric keypad 4 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad5">
            <summary>
            Numeric keypad 5 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad6">
            <summary>
            Numeric keypad 6 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad7">
            <summary>
            Numeric keypad 7 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad8">
            <summary>
            Numeric keypad 8 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Numpad9">
            <summary>
            Numeric keypad 9 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Multiply">
            <summary>
            Multiply key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Add">
            <summary>
            Add key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Separator">
            <summary>
            Separator key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Subtract">
            <summary>
            Subtract key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Decimal">
            <summary>
            Decimal key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Divide">
            <summary>
            Divide key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F1">
            <summary>
            F1 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F2">
            <summary>
            F2 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F3">
            <summary>
            F3 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F4">
            <summary>
            F4 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F5">
            <summary>
            F5 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F6">
            <summary>
            F6 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F7">
            <summary>
            F7 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F8">
            <summary>
            F8 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F9">
            <summary>
            F9 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F10">
            <summary>
            F10 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F11">
            <summary>
            F11 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F12">
            <summary>
            F12 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F13">
            <summary>
            F13 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F14">
            <summary>
            F14 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F15">
            <summary>
            F15 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F16">
            <summary>
            F16 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F17">
            <summary>
            F17 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F18">
            <summary>
            F18 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F19">
            <summary>
            F19 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F20">
            <summary>
            F20 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F21">
            <summary>
            F21 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F22">
            <summary>
            F22 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F23">
            <summary>
            F23 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.F24">
            <summary>
            F24 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.NumLock">
            <summary>
            NUM LOCK key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Scroll">
            <summary>
            SCROLL LOCK key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LeftShift">
            <summary>
            Left SHIFT key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.RightShift">
            <summary>
            Right SHIFT key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LeftControl">
            <summary>
            Left CONTROL key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.RightControl">
            <summary>
            Right CONTROL key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LeftAlt">
            <summary>
            Left ALT/MENU key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.RightAlt">
            <summary>
            Right ALT/MENU key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.BrowserBack">
            <summary>
            Browser Back key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.BrowserForward">
            <summary>
            Browser Forward key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.BrowserRefresh">
            <summary>
            Browser Refresh key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.BrowserStop">
            <summary>
            Browser Stop key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.BrowserSearch">
            <summary>
            Browser Search key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.BrowserFavorites">
            <summary>
            Browser Favorites key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.BrowserHome">
            <summary>
            Browser Start and Home key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.VolumeMute">
            <summary>
            Volume Mute key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.VolumeDown">
            <summary>
            Volume Down key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.VolumeUp">
            <summary>
            Volume Up key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.MediaNextTrack">
            <summary>
            Next Track key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.MediaPrevTrack">
            <summary>
            Previous Track key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.MediaStop">
            <summary>
            Stop Media key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.MediaPlayPause">
            <summary>
            Play/Pause Media key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LaunchMail">
            <summary>
            Start Mail key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LaunchMediaSelect">
            <summary>
            Select Media key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LaunchApp1">
            <summary>
            Start Application 1 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.LaunchApp2">
            <summary>
            Start Application 2 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem1">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ';:' key 
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.OemPlus">
            <summary>
            For any country/region, the '+' key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.OemComma">
            <summary>
            For any country/region, the ',' key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.OemMinus">
            <summary>
            For any country/region, the '-' key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.OemPeriod">
            <summary>
            For any country/region, the '.' key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem2">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '/?' key 
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem3">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '`~' key 
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem4">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '[{' key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem5">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the '\|' key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem6">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the ']}' key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem7">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard. For the US standard keyboard, the 'single-quote/double-quote' key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem8">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Oem102">
            <summary>
            Either the angle bracket key or the backslash key on the RT 102-key keyboard
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.ProcessKey">
            <summary>
            Windows 95/98/Me, Windows NT 4.0, IME PROCESS key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Packet">
            <summary>
            Used to pass Unicode characters as if they were keystrokes. The PACKET key is the low word of a 32-bit Virtual Key value used for non-keyboard input methods. For more information, see Remark in KEYBDINPUT, SendInput, WM_KEYDOWN, and WM_KEYUP
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Attn">
            <summary>
            Attn key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.CrSel">
            <summary>
            CrSel key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.ExSel">
            <summary>
            ExSel key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.ErEof">
            <summary>
            Erase EOF key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Play">
            <summary>
            Play key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Zoom">
            <summary>
            Zoom key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.NoName">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.Pa1">
            <summary>
            PA1 key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardKey.OemClear">
            <summary>
            Clear key
            </summary>
        </member>
        <member name="T:TestR.Desktop.KeyboardModifier">
            <summary>
            The keyboard modifier.
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.None">
            <summary>
            No modifier
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.Shift">
            <summary>
            SHIFT key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.Control">
            <summary>
            CTRL key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.Alt">
            <summary>
            ALT key
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.LeftShift">
            <summary>
            Left SHIFT key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.RightShift">
            <summary>
            Right SHIFT key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.LeftControl">
            <summary>
            Left CONTROL key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.RightControl">
            <summary>
            Right CONTROL key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.LeftAlt">
            <summary>
            Left ALT/MENU key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="F:TestR.Desktop.KeyboardModifier.RightAlt">
            <summary>
            Right ALT/MENU key - Used only as parameters to GetAsyncKeyState() and GetKeyState()
            </summary>
        </member>
        <member name="T:TestR.Desktop.KeyboardState">
            <summary>
            Represents the state of the keyboard during Keyboard.StartMonitoring.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.Character">
            <summary>
            The string interpretation of the key.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsAltPressed">
            <summary>
            Gets a value indicating if either the left or right alt key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsCapsLockOn">
            <summary>
            Determines if the caps lock in on at the time of the key event.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsControlPressed">
            <summary>
            Gets a value indicating if either the left or right control key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsLeftAltPressed">
            <summary>
            Gets a value indicating if the left alt key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsLeftControlPressed">
            <summary>
            Gets a value indicating if the left control key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsLeftShiftPressed">
            <summary>
            Gets a value indicating if the left shift key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsMonitoring">
            <summary>
            Gets a value indicating if the keyboard input is being monitored.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsPressed">
            <summary>
            Gets a value indicating the key is being pressed (down). If false the key is being released (up).
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsRightAltPressed">
            <summary>
            Gets a value indicating if the right alt key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsRightControlPressed">
            <summary>
            Gets a value indicating if the right control key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsRightShiftPressed">
            <summary>
            Gets a value indicating if the right shift key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.IsShiftPressed">
            <summary>
            Gets a value indicating if either the left or right shift key is pressed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyboardState.Key">
            <summary>
            Gets a value of the key being changed (up or down).
            </summary>
        </member>
        <member name="M:TestR.Desktop.KeyboardState.Clone">
            <summary>
            Clone the keyboard state.
            </summary>
            <returns> The copy of the keyboard state. </returns>
        </member>
        <member name="M:TestR.Desktop.KeyboardState.ToString">
            <inheritdoc />
        </member>
        <member name="T:TestR.Desktop.KeyStroke">
            <summary>
            Represents a key stroke.
            </summary>
        </member>
        <member name="M:TestR.Desktop.KeyStroke.#ctor(TestR.Desktop.KeyboardKey)">
            <summary>
            Instantiates an instance of a key stroke.
            </summary>
            <param name="key"> The key to be processed. </param>
        </member>
        <member name="M:TestR.Desktop.KeyStroke.#ctor(TestR.Desktop.KeyboardModifier,TestR.Desktop.KeyboardKey)">
            <summary>
            Instantiates an instance of a key stroke.
            </summary>
            <param name="modifier"> An optional modifier. </param>
            <param name="key"> The key to be processed. </param>
        </member>
        <member name="P:TestR.Desktop.KeyStroke.Action">
            <summary>
            The keyboard action to perform. Defaults to KeyPress.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyStroke.Key">
            <summary>
            The key to be processed.
            </summary>
        </member>
        <member name="P:TestR.Desktop.KeyStroke.Modifier">
            <summary>
            An optional key modifier. Ex. Control, Alt, Shift
            </summary>
        </member>
        <member name="T:TestR.Desktop.Mouse">
            <summary>
            Represents the mouse and allows for simulated input.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Mouse.Cursor">
            <summary>
            Gets the current cursor for the mouse.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.GetCursorPosition">
            <summary>
            Gets the current position of the mouse.
            </summary>
            <returns> The point location of the mouse cursor. </returns>
        </member>
        <member name="M:TestR.Desktop.Mouse.HorizontalScroll(System.Int32)">
            <summary>
            Simulates a mouse horizontal wheel scroll gesture. Supported by Windows Vista and later.
            </summary>
            <param name="scrollAmountInClicks"> The amount to scroll in clicks. A positive value indicates that the wheel was rotated to the right; a negative value indicates that the wheel was rotated to the left. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.LeftButtonClick">
            <summary>
            Simulates a mouse left-click gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.LeftButtonClick(System.Drawing.Point)">
            <summary>
            Simulates a mouse left-click gesture.
            </summary>
            <param name="point"> The absolute X-coordinate and Y-coordinate for the click. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.LeftButtonClick(System.Int32,System.Int32)">
            <summary>
            Simulates a mouse left-click gesture.
            </summary>
            <param name="x"> The absolute X-coordinate for the click. </param>
            <param name="y"> The absolute Y-coordinate for the click. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.LeftButtonDoubleClick">
            <summary>
            Simulates a mouse left button double-click gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.LeftButtonDown">
            <summary>
            Simulates a mouse left button down gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.LeftButtonUp">
            <summary>
            Simulates a mouse left button up gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.MiddleButtonClick">
            <summary>
            Simulates a mouse left-click gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.MiddleButtonClick(System.Drawing.Point)">
            <summary>
            Simulates a mouse middle-click gesture.
            </summary>
            <param name="point"> The absolute X-coordinate and Y-coordinate for the click. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.MiddleButtonClick(System.Int32,System.Int32)">
            <summary>
            Simulates a mouse middle-click gesture.
            </summary>
            <param name="x"> The absolute X-coordinate for the click. </param>
            <param name="y"> The absolute Y-coordinate for the click. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.MoveBy(System.Int32,System.Int32)">
            <summary>
            Simulates mouse movement by the specified distance measured as a delta from the current mouse location in pixels.
            </summary>
            <param name="pixelDeltaX"> The distance in pixels to move the mouse horizontally. </param>
            <param name="pixelDeltaY"> The distance in pixels to move the mouse vertically. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.MoveTo(System.Drawing.Point)">
            <summary>
            Simulates mouse movement to the specified location on the primary display device.
            </summary>
            <param name="point"> The absolute X-coordinate and Y-coordinate to move the mouse to. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.MoveTo(System.Drawing.PointF)">
            <summary>
            Simulates mouse movement to the specified location on the primary display device.
            </summary>
            <param name="point"> The absolute X-coordinate and Y-coordinate to move the mouse to. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.MoveTo(System.Int32,System.Int32)">
            <summary>
            Simulates mouse movement to the specified location.
            </summary>
            <param name="x"> The absolute X-coordinate to move the mouse cursor to. </param>
            <param name="y"> The absolute Y-coordinate to move the mouse cursor to. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.RightButtonClick">
            <summary>
            Simulates a mouse right button click gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.RightButtonClick(System.Drawing.Point)">
            <summary>
            Simulates a mouse move to an absolute position then right button click gesture.
            </summary>
            <param name="point"> The absolute X-coordinate and Y-coordinate for the click. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.RightButtonClick(System.Int32,System.Int32)">
            <summary>
            Simulates a mouse move to an absolute position then right button click gesture.
            </summary>
            <param name="x"> The absolute X-coordinate for the click. </param>
            <param name="y"> The absolute Y-coordinate for the click. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.RightButtonDoubleClick">
            <summary>
            Simulates a mouse right button double-click gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.RightButtonDown">
            <summary>
            Simulates a mouse right button down gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.RightButtonUp">
            <summary>
            Simulates a mouse right button up gesture.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Mouse.Sleep(System.Int32)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeoutInMilliseconds"> The number of milliseconds to wait. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.Sleep(System.TimeSpan)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeout"> The time to wait. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.VerticalScroll(System.Int32)">
            <summary>
            Simulates mouse vertical wheel scroll gesture.
            </summary>
            <param name="scrollAmountInClicks">
            The amount to scroll in clicks. A positive value indicates that the wheel was rotated forward, away from the user; a negative
            value indicates that the wheel was rotated backward, toward the user.
            </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.XButtonClick(System.Int32)">
            <summary>
            Simulates a mouse X button click gesture.
            </summary>
            <param name="buttonId"> The button id. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.XButtonDoubleClick(System.Int32)">
            <summary>
            Simulates a mouse X button double-click gesture.
            </summary>
            <param name="buttonId"> The button id. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.XButtonDown(System.Int32)">
            <summary>
            Simulates a mouse X button down gesture.
            </summary>
            <param name="buttonId"> The button id. </param>
        </member>
        <member name="M:TestR.Desktop.Mouse.XButtonUp(System.Int32)">
            <summary>
            Simulates a mouse X button up gesture.
            </summary>
            <param name="buttonId"> The button id. </param>
        </member>
        <member name="T:TestR.Desktop.MouseButton">
            <summary>
            The mouse button
            </summary>
        </member>
        <member name="F:TestR.Desktop.MouseButton.LeftButton">
            <summary>
            Left mouse button
            </summary>
        </member>
        <member name="F:TestR.Desktop.MouseButton.MiddleButton">
            <summary>
            Middle mouse button
            </summary>
        </member>
        <member name="F:TestR.Desktop.MouseButton.RightButton">
            <summary>
            Right mouse button
            </summary>
        </member>
        <member name="T:TestR.Desktop.MouseCursor">
            <summary>
            Represents a cursor for the mouse.
            </summary>
        </member>
        <member name="F:TestR.Desktop.MouseCursor.DefaultAndWait">
            <summary>
            Gets the cursor that represents default and wait.
            </summary>
        </member>
        <member name="F:TestR.Desktop.MouseCursor.Pointer">
            <summary>
            Gets the cursor that represents a pointer.
            </summary>
        </member>
        <member name="F:TestR.Desktop.MouseCursor.ShapedCursor">
            <summary>
            Gets the cursor that represents text edit.
            </summary>
        </member>
        <member name="F:TestR.Desktop.MouseCursor.Wait">
            <summary>
            Gets the cursor that represents wait.
            </summary>
        </member>
        <member name="P:TestR.Desktop.MouseCursor.Current">
            <summary>
            Gets the current cursor for the mouse.
            </summary>
        </member>
        <member name="P:TestR.Desktop.MouseCursor.WaitCursors">
            <summary>
            Gets a list of cursors that represent wait cursors.
            </summary>
        </member>
        <member name="M:TestR.Desktop.MouseCursor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
            <returns>
            True if the specified object  is equal to the current object otherwise false.
            </returns>
            <param name="obj"> The object to compare with the current object. </param>
            <filterpriority> 2 </filterpriority>
        </member>
        <member name="M:TestR.Desktop.MouseCursor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
            <filterpriority> 2 </filterpriority>
        </member>
        <member name="M:TestR.Desktop.MouseCursor.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority> 2 </filterpriority>
        </member>
        <member name="T:TestR.Desktop.Pattern.ExpandCollapsePattern">
            <summary>
            Represents the Windows expand / collapse pattern.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ExpandCollapsePattern.ExpandCollapseState">
            <summary>
            Gets the current expanded state of the element.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ExpandCollapsePattern.IsExpanded">
            <summary>
            Gets the value indicating the element is expanded.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.ExpandCollapsePattern.Collapse">
            <summary>
            Collapses the element.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.ExpandCollapsePattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.ExpandCollapsePattern.Expand">
            <summary>
            Expands the element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.ExpandCollapseState">
            <summary>
            Represents the state of the expand collapse pattern.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ExpandCollapseState.Collapsed">
            <summary>
            No children are visible.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ExpandCollapseState.Expanded">
            <summary>
            All children are visible.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ExpandCollapseState.PartiallyExpanded">
            <summary>
            Some, but not all, children are visible.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ExpandCollapseState.LeafNode">
            <summary>
            The element does not expand or collapse.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.ScrollPattern">
            <summary>
            Represents the Windows scroll pattern.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ScrollPattern.HorizontalScrollPercent">
            <summary>
            Gets the scroll percentage for the horizontal bar.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ScrollPattern.VerticalScrollPercent">
            <summary>
            Gets the scroll percentage for the vertical bar.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.ScrollPattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.ScrollPattern.ScrollPercent(System.Double,System.Double)">
            <summary>
            Scroll the desktop element.
            </summary>
            <param name="horizontalPercent"> The percentage to scroll horizontally. </param>
            <param name="verticalPercent"> The percentage to scroll vertically. </param>
        </member>
        <member name="T:TestR.Desktop.Pattern.TogglePattern">
            <summary>
            Represents the Windows toggle pattern.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.TogglePattern.Toggled">
            <summary>
            Gets the toggled value.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.TogglePattern.ToggleState">
            <summary>
            Gets the toggle state of the element.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.TogglePattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.TogglePattern.Toggle">
            <summary>
            Toggle the element.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.ToggleState">
            <summary>
            Represents the state of a element with toggle pattern support.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ToggleState.On">
            <summary>
            The element is selected, checked, marked or otherwise activated.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ToggleState.Off">
            <summary>
            The element is not selected, checked, marked or otherwise activated.
            </summary>
        </member>
        <member name="F:TestR.Desktop.Pattern.ToggleState.Indeterminate">
            <summary>
            The element is in an indeterminate state.
            </summary>
        </member>
        <member name="T:TestR.Desktop.Pattern.TransformPattern">
            <summary>
            Represents the Windows transform pattern.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.TransformPattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.TransformPattern.Move(System.Int32,System.Int32)">
            <summary>
            Move the element.
            </summary>
            <param name="x"> The x value of the position to move to. </param>
            <param name="y"> The y value of the position to move to. </param>
        </member>
        <member name="M:TestR.Desktop.Pattern.TransformPattern.Resize(System.Int32,System.Int32)">
            <summary>
            Resize the element.
            </summary>
            <param name="width"> The width to set. </param>
            <param name="height"> The height to set. </param>
        </member>
        <member name="T:TestR.Desktop.Pattern.ValuePattern">
            <summary>
            Represents the Windows value pattern.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ValuePattern.IsReadOnly">
            <summary>
            Gets a value determining if the pattern is read only.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Pattern.ValuePattern.Value">
            <summary>
            Gets the value of the pattern.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Pattern.ValuePattern.Create(TestR.Desktop.DesktopElement)">
            <summary>
            Create a new pattern for the provided element.
            </summary>
            <param name="element"> The element that supports the pattern. </param>
            <returns> The pattern if we could find one else null will be returned. </returns>
        </member>
        <member name="M:TestR.Desktop.Pattern.ValuePattern.SetValue(System.String)">
            <summary>
            Set the value of the pattern.
            </summary>
            <param name="value"> The value to set. </param>
        </member>
        <member name="T:TestR.Desktop.ProcessService">
            <summary>
            Represents a service that handling processes.
            </summary>
        </member>
        <member name="M:TestR.Desktop.ProcessService.GetCurrentProcess">
            <summary>
            Get the safe process for the current process.
            </summary>
            <returns> The safe process for the current process or null if an issue occurs. </returns>
        </member>
        <member name="M:TestR.Desktop.ProcessService.Start(System.String,System.String)">
            <summary>
            Start an application and return the safe process representing it.
            </summary>
            <param name="filePath"> The file path for the application to start. </param>
            <param name="arguments"> The optional arguments for the application. </param>
            <returns> The safe process for the current process or null if an issue occurs. </returns>
        </member>
        <member name="M:TestR.Desktop.ProcessService.StartUniversal(System.String,System.String)">
            <summary>
            Creates a new instance of the universal application.
            </summary>
            <param name="executablePathOrName"> The executable file path or name of the process to load. </param>
            <param name="packageFamilyName"> The application package family name. </param>
            <returns> The instance that represents the application. </returns>
        </member>
        <member name="M:TestR.Desktop.ProcessService.Where(System.String,System.String)">
            <summary>
            Gets a list of safe processes by executable path.
            </summary>
            <param name="executablePathOrName"> The executable file path or name of the processes to load. </param>
            <param name="arguments"> The optional arguments the process was started with. </param>
            <returns> The processes for the executable path. </returns>
        </member>
        <member name="M:TestR.Desktop.ProcessService.Where(System.Func{TestR.Desktop.SafeProcess,System.Boolean})">
            <summary>
            Gets a list of safe processes filtered by provided filter.
            </summary>
            <param name="filter"> The filter to reduce collection. </param>
            <returns> The processes that match the filter. </returns>
        </member>
        <member name="M:TestR.Desktop.ProcessService.WhereByName(System.String,System.Func{TestR.Desktop.SafeProcess,System.Boolean})">
            <summary>
            Gets a list of safe processes filtered by provided filter.
            </summary>
            <param name="name"> The name of the process. </param>
            <param name="filter"> The filter to reduce collection. </param>
            <returns> The processes that match the filter. </returns>
        </member>
        <member name="M:TestR.Desktop.ProcessService.WhereUniversal(System.String)">
            <summary>
            Gets a list of safe processes by executable path.
            </summary>
            <param name="executablePathOrName"> The executable file path or name of the processes to load. </param>
            <returns> The processes for the executable path. </returns>
        </member>
        <member name="T:TestR.Desktop.SafeProcess">
            <summary>
            Provided process details to safely work in x86 or x64 processes.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.Arguments">
            <summary>
            Gets the arguments that were provided when the process started.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.FileName">
            <summary>
            Gets the name of the file.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.FilePath">
            <summary>
            Gets the path to the file.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.Handle">
            <summary>
            Gets the handle to this process interaction.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.HasExited">
            <summary>
            Gets a value indicating whether the associated process has been terminated.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.Id">
            <summary>
            Gets the ID.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.Is64Bit">
            <summary>
            Gets a flag indicating the process is 64 bit.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.IsElevated">
            <summary>
            Gets a flag indicating the process is elevated.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.MainWindowHandle">
            <summary>
            Gets the main window handle.
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.Name">
            <summary>
            Gets the name
            </summary>
        </member>
        <member name="P:TestR.Desktop.SafeProcess.Process">
            <summary>
            Gets the details of the safe process.
            </summary>
            <seealso cref="T:System.Diagnostics.Process" />
        </member>
        <member name="M:TestR.Desktop.SafeProcess.Close(System.Int32)">
            <summary>
            Wait for the process to close if not then kill the process.
            </summary>
            <param name="timeout"> The timeout to wait for graceful close. If the timeout is reached then kill the process. The timeout is in milliseconds. </param>
        </member>
        <member name="M:TestR.Desktop.SafeProcess.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TestR.Desktop.SafeProcess.GetProcess">
            <summary>
            Gets the process for this safe process.
            </summary>
            <returns> </returns>
        </member>
        <member name="M:TestR.Desktop.SafeProcess.GetWindowLocation">
            <summary>
            First the main window location for the process.
            </summary>
            <returns> The location of the window. </returns>
        </member>
        <member name="M:TestR.Desktop.SafeProcess.GetWindowSize">
            <summary>
            Gets the size of the main window for the process.
            </summary>
            <returns> The size of the main window. </returns>
        </member>
        <member name="M:TestR.Desktop.SafeProcess.Kill(System.Int32)">
            <summary>
            Wait for the process to close if not then kill the process.
            </summary>
            <param name="timeout"> The timeout to wait for graceful close. If the timeout is reached then kill the process. The timeout is in milliseconds. </param>
        </member>
        <member name="M:TestR.Desktop.SafeProcess.WaitForExit(System.Int32)">
            <summary>
            Wait for the process to exit.
            </summary>
            <param name="timeout"> The timeout to wait for exit. The timeout is in milliseconds. </param>
        </member>
        <member name="M:TestR.Desktop.SafeProcess.WaitForInputIdle(System.Int32)">
            <summary>
            Wait for the process to go idle.
            </summary>
            <param name="milliseconds"> The time to wait for idle to occur. Time is in milliseconds. </param>
        </member>
        <member name="M:TestR.Desktop.SafeProcess.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="T:TestR.Desktop.Screen">
            <summary>
            Represents a display device or multiple display devices on a single system.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.AllScreens">
            <summary>
            All screens that were enumerated. See <see cref="M:TestR.Desktop.Screen.Refresh" /> to update.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.DeviceName">
            <summary>
            Gets the device name.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.IsPrimary">
            <summary>
            The screen is the primary screen.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.Location">
            <summary>
            Gets the location of the screen.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.MultipleScreenSupport">
            <summary>
            Returns true if multiple screens are supported.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.PrimaryScreen">
            <summary>
            Gets the primary screen.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.ScreenArea">
            <summary>
            Gets the bounds of the monitor.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.Size">
            <summary>
            Gets the size of the screen.
            </summary>
        </member>
        <member name="P:TestR.Desktop.Screen.VirtualScreenSize">
            <summary> Gets the bounds of the virtual screen. </summary>
            <returns> A <see cref="T:System.Drawing.Rectangle" /> that specifies the bounding rectangle of the entire virtual screen. </returns>
        </member>
        <member name="P:TestR.Desktop.Screen.WorkingArea">
            <summary>
            Gets the bounds of the monitor.
            </summary>
        </member>
        <member name="M:TestR.Desktop.Screen.FromPoint(System.Drawing.Point)">
            <summary>
            Gets the screen from the provided point.
            </summary>
            <param name="point"> The point that is in the screen you want. </param>
            <returns> The screen that contains the point. </returns>
        </member>
        <member name="M:TestR.Desktop.Screen.FromPoint(System.Int32,System.Int32)">
            <summary>
            Gets the screen from the provided point.
            </summary>
            <param name="x"> The x location that is in the screen you want. </param>
            <param name="y"> The y location that is in the screen you want. </param>
            <returns> The screen that contains the point. </returns>
        </member>
        <member name="M:TestR.Desktop.Screen.Refresh">
            <summary>
            Refresh the <see cref="P:TestR.Desktop.Screen.AllScreens" /> collection.
            </summary>
        </member>
        <member name="T:TestR.Desktop.ScrollableDesktopElement">
            <summary>
            Represents a scrollable desktop application.
            </summary>
        </member>
        <member name="P:TestR.Desktop.ScrollableDesktopElement.HorizontalScrollPercent">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.ScrollableDesktopElement.IsScrollable">
            <inheritdoc />
        </member>
        <member name="P:TestR.Desktop.ScrollableDesktopElement.VerticalScrollPercent">
            <inheritdoc />
        </member>
        <member name="M:TestR.Desktop.ScrollableDesktopElement.Scroll(System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="T:TestR.Element">
            <summary>
            Represents an element.
            </summary>
        </member>
        <member name="M:TestR.Element.#ctor(TestR.Application,TestR.ElementHost)">
            <summary>
            Instantiates an instance of an element.
            </summary>
            <param name="application"> The application this element exists in. </param>
            <param name="parent"> The parent of this element. </param>
        </member>
        <member name="P:TestR.Element.BoundingRectangle">
            <summary>
            Gets the coordinates of the rectangle that completely encloses the element.
            </summary>
        </member>
        <member name="P:TestR.Element.Enabled">
            <summary>
            Gets a value that indicates whether the element is enabled.
            </summary>
        </member>
        <member name="P:TestR.Element.Focused">
            <summary>
            Gets a value that indicates whether the element is focused.
            </summary>
        </member>
        <member name="P:TestR.Element.FullId">
            <summary>
            Gets the full id of the element which include all parent IDs prefixed to this element ID.
            </summary>
            <summary>
            Gets the ID of this element in the element host. Includes full host namespace. Ex. GrandParent,Parent,Element
            </summary>
        </member>
        <member name="P:TestR.Element.Height">
            <summary>
            Gets the width of the element.
            </summary>
        </member>
        <member name="P:TestR.Element.Item(System.String)">
            <summary>
            Gets or sets an attribute or property by name.
            </summary>
            <param name="id"> The ID of the attribute or property to read. </param>
        </member>
        <member name="P:TestR.Element.Location">
            <summary>
            Gets the location of the element.
            </summary>
        </member>
        <member name="P:TestR.Element.Size">
            <summary>
            Gets the size of the element.
            </summary>
        </member>
        <member name="P:TestR.Element.Width">
            <summary>
            Gets the width of the element.
            </summary>
        </member>
        <member name="M:TestR.Element.Click(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Performs mouse click at the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
            <param name="refresh"> Optional value to refresh the element's children. </param>
        </member>
        <member name="M:TestR.Element.Focus">
            <summary>
            Set focus on the element.
            </summary>
        </member>
        <member name="M:TestR.Element.GetNextSibling">
            <summary>
            Get next sibling. Returns null if no sibling is found.
            </summary>
        </member>
        <member name="M:TestR.Element.GetPreviousSibling">
            <summary>
            Get previous sibling. Returns null if no sibling is found.
            </summary>
        </member>
        <member name="M:TestR.Element.LeftClick(System.Int32,System.Int32)">
            <summary>
            Performs mouse left click at the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
        </member>
        <member name="M:TestR.Element.MiddleClick(System.Int32,System.Int32)">
            <summary>
            Performs mouse middle click at the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
        </member>
        <member name="M:TestR.Element.MoveMouseTo(System.Int32,System.Int32)">
            <summary>
            Moves mouse cursor to the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
        </member>
        <member name="M:TestR.Element.RightClick(System.Int32,System.Int32)">
            <summary>
            Performs mouse right click at the center of the element.
            </summary>
            <param name="x"> Optional X offset when clicking. </param>
            <param name="y"> Optional Y offset when clicking. </param>
        </member>
        <member name="M:TestR.Element.SendInput(System.String)">
            <summary>
            Focus the element then sends provided text and an optional set of keys as input.
            </summary>
            <param name="text"> The value to type. </param>
        </member>
        <member name="M:TestR.Element.SendInput(System.String,System.Int32)">
            <summary>
            Focus the element then sends provided text and an optional set of keys as input.
            </summary>
            <param name="text"> The value to type. </param>
            <param name="delay"> An optional delay after sending input. </param>
        </member>
        <member name="M:TestR.Element.SendInput(System.String,System.TimeSpan)">
            <summary>
            Focus the element then sends provided text and an optional set of keys as input.
            </summary>
            <param name="text"> The value to type. </param>
            <param name="delay"> An optional delay after sending input. </param>
        </member>
        <member name="M:TestR.Element.SendInput(System.String,TestR.Desktop.KeyboardKey[])">
            <summary>
            Focus the element then sends provided text and an optional set of keys as input.
            </summary>
            <param name="text"> The value to type. </param>
            <param name="keys"> An optional set of keyboard keys to press after typing the provided text. </param>
        </member>
        <member name="M:TestR.Element.SendInput(System.String,System.TimeSpan,TestR.Desktop.KeyboardKey[])">
            <summary>
            Focus the element then sends provided text as input. Can delay with before sending an optional set of key strokes.
            </summary>
            <param name="text"> The value to type. </param>
            <param name="delay"> An optional delay before sending optional keys. </param>
            <param name="keys"> An optional set of keyboard keys to press after typing the provided text. </param>
        </member>
        <member name="M:TestR.Element.SendInput(System.String,System.TimeSpan,TestR.Desktop.KeyStroke[])">
            <summary>
            Focus the element then sends provided text as input. Can delay with before sending an optional set of key strokes.
            </summary>
            <param name="text"> The text to be sent. </param>
            <param name="delay"> An optional delay to wait before sending the provided keys. </param>
            <param name="keyStrokes"> An optional set of key strokes to be sent. </param>
            <returns> This <see cref="T:TestR.Element" /> instance. </returns>
            <exception cref="T:System.ArgumentException"> The text parameter is too long. </exception>
        </member>
        <member name="M:TestR.Element.SendInput(TestR.Desktop.KeyboardKey[])">
            <summary>
            Focus the element then sends provided set of key as input.
            </summary>
            <param name="keys"> The set of keys to be sent. </param>
            <returns> This <see cref="T:TestR.Element" /> instance. </returns>
        </member>
        <member name="M:TestR.Element.SendInput(TestR.Desktop.KeyboardModifier,TestR.Desktop.KeyboardKey[])">
            <summary>
            Sends provided set of keys as input with a modifier (ctrl, shift, etc).
            </summary>
            <param name="modifiers"> The modifier key(s). </param>
            <param name="keys"> The set of keys to be sent. </param>
            <returns> This <see cref="T:TestR.Element" /> instance. </returns>
        </member>
        <member name="M:TestR.Element.SendInput(TestR.Desktop.KeyStroke[])">
            <summary>
            Focus the element then send the key strokes as input.
            </summary>
            <param name="keyStrokes"> An set of keyboard key strokes to send. </param>
        </member>
        <member name="M:TestR.Element.Sleep(System.TimeSpan)">
            <summary>
            Sleeps the executing thread to create a pause between simulated inputs.
            </summary>
            <param name="timeout"> The time to wait. </param>
            <returns> This <see cref="T:TestR.Element" /> instance. </returns>
        </member>
        <member name="M:TestR.Element.ToDetailString">
            <summary>
            Provides a string of details for the element.
            </summary>
            <returns> The string of element details. </returns>
        </member>
        <member name="T:TestR.ElementCollection">
            <summary>
            Represents a collection of elements.
            </summary>
        </member>
        <member name="M:TestR.ElementCollection.#ctor(TestR.ElementHost)">
            <summary>
            Initializes an instance of the ElementCollection class.
            </summary>
            <param name="parent"> </param>
        </member>
        <member name="P:TestR.ElementCollection.Item(System.String)">
            <summary>
            Access an element by the Full ID, ID, or Name.
            </summary>
            <param name="id"> The ID of the element. </param>
            <returns> The element if found or null if not found. </returns>
        </member>
        <member name="P:TestR.ElementCollection.Parent">
            <summary>
            Gets the parent element of this element collection.
            </summary>
        </member>
        <member name="M:TestR.ElementCollection.Add(TestR.Element[])">
            <summary>
            Adds items to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="items"> The objects to add to the <see cref="T:System.Collections.Generic.ICollection`1" />. </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1" /> is
            read-only.
            </exception>
        </member>
        <member name="M:TestR.ElementCollection.Any``1(System.Func{``0,System.Boolean})">
            <summary>
            First a collection of element of a specific type from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Contains(System.String)">
            <summary>
            Check to see if this collection contains an element.
            </summary>
            <param name="id"> The id to search for. </param>
            <returns> True if the id is found, false if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Descendants">
            <summary>
            First a collection of element from the collection.
            </summary>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Descendants(System.Func{TestR.Element,System.Boolean})">
            <summary>
            First a collection of element from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Descendants``1">
            <summary>
            First a collection of element of a specific type from the collection.
            </summary>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Descendants``1(System.Func{``0,System.Boolean})">
            <summary>
            First a collection of element of a specific type from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.First(System.String,System.Boolean)">
            <summary>
            Get an element from the collection using the provided ID.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementCollection.First(System.Func{TestR.Element,System.Boolean},System.Boolean)">
            <summary>
            Get an element from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The element matching the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.First``1(System.String,System.Boolean)">
            <summary>
            Get an element from the collection using the provided ID.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementCollection.First``1(System.Func{``0,System.Boolean},System.Boolean)">
            <summary>
            Get an element from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the condition. </returns>
        </member>
        <member name="M:TestR.ElementCollection.FirstOrDefault``1(System.String,System.Boolean)">
            <summary>
            Get an element from the collection using the provided ID.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <returns> The child element for the ID or null if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementCollection.FirstOrDefault``1(System.Func{``0,System.Boolean},System.Boolean)">
            <summary>
            Get an element from the collection using the provided condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <returns> The child element for the condition or null if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementCollection.FirstOrDefault``1(System.Boolean)">
            <summary>
            Get an element from the collection using the provided condition.
            </summary>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <returns> The child element for the condition or null if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementCollection.OfType``1">
            <summary>
            Gets a collection of element of the provided type.
            </summary>
            <typeparam name="T"> The type of the element for the collection. </typeparam>
            <returns> The collection of elements of the provided type. </returns>
        </member>
        <member name="M:TestR.ElementCollection.Remove``1(``0,System.Boolean)">
            <summary>
            Removes an element from a collection.
            </summary>
            <param name="element"> The element to be removed. </param>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <returns> true if item is successfully removed otherwise false. This method also returns false if item was not found. </returns>
        </member>
        <member name="T:TestR.ElementHost">
            <summary>
            Represents a host for a set of elements.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.#ctor(TestR.Application,TestR.ElementHost)">
            <summary>
            Instantiates an instance of an element host.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Application">
            <summary>
            Gets the application for this element host.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Children">
            <summary>
            Gets a hierarchical list of elements.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.FocusedElement">
            <summary>
            Gets the current focused element.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Id">
            <summary>
            Gets the ID of this element host.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Parent">
            <summary>
            Gets the parent element of this element.
            </summary>
        </member>
        <member name="P:TestR.ElementHost.Parents">
            <summary>
            The all parent element of this element.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.Contains(System.String)">
            <summary>
            Check to see if this element host contains an element.
            </summary>
            <param name="id"> The id to search for. </param>
            <returns> True if the id is found, false if otherwise. </returns>
        </member>
        <member name="M:TestR.ElementHost.Descendants">
            <summary>
            Get all the children.
            </summary>
            <returns> The child elements. </returns>
        </member>
        <member name="M:TestR.ElementHost.Descendants(System.Func{TestR.Element,System.Boolean})">
            <summary>
            Get all the children that match the optional condition. If a condition is not provided
            then all children of the type will be returned.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements for the condition. </returns>
        </member>
        <member name="M:TestR.ElementHost.Descendants``1">
            <summary>
            Get all the children of a specific type.
            </summary>
            <returns> The child elements of the specific type. </returns>
        </member>
        <member name="M:TestR.ElementHost.Descendants``1(System.Func{``0,System.Boolean})">
            <summary>
            Get all the children of a specific type that matches the condition.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <returns> The child elements of the specific type for the condition. </returns>
        </member>
        <member name="M:TestR.ElementHost.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.First(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementHost.First(System.Func{TestR.Element,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the condition or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.First``1(System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementHost.First``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <returns> The child element for the ID. </returns>
        </member>
        <member name="M:TestR.ElementHost.First``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <remarks>
            The First method throws an exception if source contains no elements. To instead return a default value
            when the source sequence is empty, use the FirstOrDefault method.
            </remarks>
            <exception cref="T:System.InvalidOperationException"> The source sequence is empty. </exception>
            <returns> The child element for the condition. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the ID or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault(System.Func{TestR.Element,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the condition or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="id"> An ID of the element to get. </param>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the ID or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault``1(System.Func{``0,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="condition"> A function to test each element for a condition. </param>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the condition or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.FirstOrDefault``1(System.Boolean,System.Boolean)">
            <summary>
            Get the child from the children.
            </summary>
            <param name="includeDescendants"> Flag to determine to search descendants or not. </param>
            <param name="wait"> Wait for the child to be available. Will auto refresh on each pass. </param>
            <returns> The child element for the condition or null if no child found. </returns>
        </member>
        <member name="M:TestR.ElementHost.OfType``1">
            <summary>
            Gets a collection of element of the provided type.
            </summary>
            <typeparam name="T"> The type of the element for the collection. </typeparam>
            <returns> The collection of elements of the provided type. </returns>
        </member>
        <member name="M:TestR.ElementHost.Refresh">
            <summary>
            Refresh the children for this element host.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.Refresh``1(System.Func{``0,System.Boolean})">
            <summary>
            Refresh the children for this element host.
            </summary>
        </member>
        <member name="M:TestR.ElementHost.Remove``1(``0,System.Boolean)">
            <summary>
            Removes an element from a collection.
            </summary>
            <param name="element"> The element to be removed. </param>
            <param name="includeDescendants"> The flag that determines to search descendants or not. </param>
            <returns> true if item is successfully removed otherwise false. This method also returns false if item was not found. </returns>
        </member>
        <member name="M:TestR.ElementHost.Wait(System.Func{TestR.ElementHost,System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Runs the action until the action returns true or the timeout is reached. Will delay in between actions of the provided time.
            </summary>
            <param name="action"> The action to call. </param>
            <param name="timeout"> The timeout to attempt the action. This value is in milliseconds. </param>
            <param name="delay"> The delay in between actions. This value is in milliseconds. Defaults to Application.Timeout. </param>
            <returns> Returns true of the call completed successfully or false if it timed out. Default to 50 ms. </returns>
        </member>
        <member name="M:TestR.ElementHost.WaitForComplete(System.Int32)">
            <summary>
            Waits for the host to complete the work. Will wait until no longer busy.
            </summary>
            <param name="minimumDelay"> The minimum delay in milliseconds to wait. Defaults to 0 milliseconds. </param>
        </member>
        <member name="M:TestR.ElementHost.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="T:TestR.Extensions">
            <summary>
            Container for all extension methods.
            </summary>
        </member>
        <member name="M:TestR.Extensions.Count(TestR.Web.BrowserType)">
            <summary>
            Returns the number of browsers for this type.
            </summary>
            <param name="type"> The browser type that contains the configuration. </param>
            <returns> The number of browsers configured in the type. </returns>
        </member>
        <member name="M:TestR.Extensions.ForAllBrowsers(TestR.Web.BrowserType,System.Action{TestR.Web.Browser},System.Boolean,System.Boolean,TestR.Web.BrowserResizeType,System.Int32)">
            <summary>
            Run a test against each browser. BrowserType property will determine which browsers to run the test against.
            </summary>
            <param name="browserType"> The browser types to run the action against. </param>
            <param name="action"> The action to run each browser against. </param>
            <param name="useSecondaryMonitor"> The flag to determine to attempt to use secondary monitor. </param>
            <param name="resizeBrowsers"> The flag to determine to resize the browsers. </param>
            <param name="resizeType"> The resize type if browser resizing is enabled. </param>
            <param name="timeout"> The timeout in milliseconds. </param>
            <seealso cref="T:TestR.Web.BrowserType" />
            <seealso cref="T:TestR.Web.BrowserResizeType" />
        </member>
        <member name="M:TestR.Extensions.ForEachBrowser(TestR.Web.BrowserType,System.Action{TestR.Web.Browser},System.Boolean,System.Boolean,TestR.Web.BrowserResizeType)">
            <summary>
            Run a test against each browser. BrowserType property will determine which browsers to run the test against.
            </summary>
            <param name="browserType"> The browser types to run the action against. </param>
            <param name="action"> The action to run each browser against. </param>
            <param name="useSecondaryMonitor"> The flag to determine to attempt to use secondary monitor. </param>
            <param name="resizeBrowsers"> The flag to determine to resize the browsers. </param>
            <param name="resizeType"> The resize type if browser resizing is enabled. </param>
            <seealso cref="T:TestR.Web.BrowserType" />
            <seealso cref="T:TestR.Web.BrowserResizeType" />
        </member>
        <member name="M:TestR.Extensions.GetTypeArray(TestR.Web.BrowserType)">
            <summary>
            Converts a browser type enum into an array of only individual browser types.
            </summary>
            <param name="browserType"> The browser type to convert. </param>
            <returns> The individual browser type values in the provided type. </returns>
        </member>
        <member name="T:TestR.Input">
            <summary>
            A static combination a keyboard and mouse instance.
            </summary>
        </member>
        <member name="F:TestR.Input._messageDispatcher">
            <summary>
            The instance of the <see cref="T:TestR.Internal.Inputs.InputMessageDispatcher" /> to use for dispatching <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages.
            </summary>
        </member>
        <member name="P:TestR.Input.Keyboard">
            <summary>
            Represents the keyboard and allows for simulated input.
            </summary>
        </member>
        <member name="P:TestR.Input.Mouse">
            <summary>
            Represents the mouse and allows for simulated input.
            </summary>
        </member>
        <member name="M:TestR.Input.SendInput(TestR.InputBuilder)">
            <summary>
            Dispatches the specified inputs from the provided InputBuilder in their specified order by issuing a single call.
            </summary>
            <param name="builder"> The builder containing the input. </param>
        </member>
        <member name="M:TestR.Input.SendInput(TestR.InputBuilder,System.TimeSpan)">
            <summary>
            Dispatches the specified inputs from the provided InputBuilder in their specified order by issuing a single call.
            </summary>
            <param name="builder"> The builder containing the input. </param>
            <param name="delay"> An optional delay after sending input. </param>
        </member>
        <member name="T:TestR.InputBuilder">
            <summary>
            A helper class for building a list of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages ready to be sent to the native Windows API.
            </summary>
        </member>
        <member name="F:TestR.InputBuilder._inputList">
            <summary>
            The public list of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages being built by this instance.
            </summary>
        </member>
        <member name="M:TestR.InputBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TestR.InputBuilder" /> class.
            </summary>
        </member>
        <member name="M:TestR.InputBuilder.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:TestR.InputBuilder" /> class.
            </summary>
            <param name="character"> The character to be added an an input. </param>
        </member>
        <member name="M:TestR.InputBuilder.#ctor(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Initializes a new instance of the <see cref="T:TestR.InputBuilder" /> class.
            </summary>
            <param name="characters"> The characters to add. </param>
        </member>
        <member name="M:TestR.InputBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TestR.InputBuilder" /> class.
            </summary>
            <param name="text"> The text to add. </param>
        </member>
        <member name="M:TestR.InputBuilder.#ctor(TestR.Desktop.KeyStroke[])">
            <summary>
            Initializes a new instance of the <see cref="T:TestR.InputBuilder" /> class.
            </summary>
            <param name="strokes"> The stroke(s) to add. </param>
        </member>
        <member name="M:TestR.InputBuilder.#ctor(TestR.Desktop.KeyboardKey[])">
            <summary>
            Initializes a new instance of the <see cref="T:TestR.InputBuilder" /> class.
            </summary>
            <param name="keys"> The keys to press. </param>
        </member>
        <member name="M:TestR.InputBuilder.#ctor(TestR.Desktop.KeyboardModifier,TestR.Desktop.KeyboardKey[])">
            <summary>
            Initializes a new instance of the <see cref="T:TestR.InputBuilder" /> class.
            </summary>
            <param name="modifiers"> The modifier key(s). </param>
            <param name="keys"> The list of keys to press. </param>
        </member>
        <member name="M:TestR.InputBuilder.Add(System.Char)">
            <summary>
            Adds the character to the builder.
            </summary>
            <param name="character"> The character to be added an an input. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.Add(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Adds all of the characters in the specified <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Char" />.
            </summary>
            <param name="characters"> The characters to add. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.Add(System.String)">
            <summary>
            Adds the characters in the provided <see cref="T:System.String" />.
            </summary>
            <param name="text"> The text to add. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.Add(TestR.Desktop.KeyStroke[])">
            <summary>
            Add key stroke to the input builder.
            </summary>
            <param name="strokes"> The stroke(s) to add. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddKeyDown(TestR.Desktop.KeyboardKey[])">
            <summary>
            Adds a key down to the list of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages.
            </summary>
            <param name="keys"> The keys to press down. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddKeyPress(TestR.Desktop.KeyboardKey[])">
            <summary>
            Adds a key press to the list of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages which is equivalent to a key down followed by a key up.
            </summary>
            <param name="keys"> The keys to press down. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddKeyPress(TestR.Desktop.KeyboardModifier,TestR.Desktop.KeyboardKey[])">
            <summary>
            Adds modified keystroke(s) where there are multiple modifiers and multiple keys like CTRL-ALT-K-C where CTRL
            and ALT are the modifierKeys and K and C are the keys.
            The flow is Modifiers KeyDown in order, Keys Press in order, Modifiers KeyUp in reverse order.
            </summary>
            <param name="modifier"> The modifier key. </param>
            <param name="keys"> The list of keys to press. </param>
        </member>
        <member name="M:TestR.InputBuilder.AddKeyPress(System.Collections.Generic.IEnumerable{TestR.Desktop.KeyboardModifier},TestR.Desktop.KeyboardKey[])">
            <summary>
            Adds modified keystroke(s) where there are multiple modifiers and multiple keys like CTRL-ALT-K-C where CTRL
            and ALT are the modifierKeys and K and C are the keys.
            The flow is Modifiers KeyDown in order, Keys Press in order, Modifiers KeyUp in reverse order.
            </summary>
            <param name="modifiers"> The list of modifier keys </param>
            <param name="keys"> The list of keys to simulate </param>
        </member>
        <member name="M:TestR.InputBuilder.AddKeyUp(TestR.Desktop.KeyboardKey[])">
            <summary>
            Adds a key up to the list of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages.
            </summary>
            <param name="keys"> The keys to release. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseButtonClick(TestR.Desktop.MouseButton)">
            <summary>
            Adds a single click of the specified button.
            </summary>
            <param name="button"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseButtonDoubleClick(TestR.Desktop.MouseButton)">
            <summary>
            Adds a double click of the specified button.
            </summary>
            <param name="button"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseButtonDown(TestR.Desktop.MouseButton)">
            <summary>
            Adds a mouse button down for the specified button.
            </summary>
            <param name="button"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseButtonUp(TestR.Desktop.MouseButton)">
            <summary>
            Adds a mouse button up for the specified button.
            </summary>
            <param name="button"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseHorizontalWheelScroll(System.Int32)">
            <summary>
            Scroll the horizontal mouse wheel by the specified amount.
            </summary>
            <param name="scrollAmount"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseMovement(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Moves the mouse relative to its current position or to an absolute position.
            </summary>
            <param name="x"> If relative is true then the relative amount of distance to move else it will be an absolute X position to move to. </param>
            <param name="y"> If relative is true then the relative amount of distance to move else it will be an absolute Y position to move to. </param>
            <param name="relative"> True to move a relative amount or false to move to an absolute position. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseMovementOnVirtualDesktop(System.Int32,System.Int32)">
            <summary>
            Move the mouse to the absolute position on the virtual desktop.
            </summary>
            <param name="absoluteX"> The absolute X position to move to. </param>
            <param name="absoluteY"> The absolute Y position to move to. </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseVerticalWheelScroll(System.Int32)">
            <summary>
            Scroll the vertical mouse wheel by the specified amount.
            </summary>
            <param name="scrollAmount"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseXButtonClick(System.Int32)">
            <summary>
            Adds a single click of the specified button.
            </summary>
            <param name="xButtonId"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseXButtonDoubleClick(System.Int32)">
            <summary>
            Adds a double click of the specified button.
            </summary>
            <param name="xButtonId"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseXButtonDown(System.Int32)">
            <summary>
            Adds a mouse button down for the specified button.
            </summary>
            <param name="xButtonId"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddMouseXButtonUp(System.Int32)">
            <summary>
            Adds a mouse button up for the specified button.
            </summary>
            <param name="xButtonId"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.Clear">
            <summary>
            Clear the input list.
            </summary>
        </member>
        <member name="M:TestR.InputBuilder.ToArray">
            <summary>
            Returns the list of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages as a <see cref="T:System.Array" /> of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages.
            </summary>
            <returns> The <see cref="T:System.Array" /> of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages. </returns>
        </member>
        <member name="M:TestR.InputBuilder.AddKeyStroke(TestR.Desktop.KeyStroke)">
            <summary>
            Add key strokes to input builder.
            </summary>
            <param name="stroke"> </param>
            <returns> This <see cref="T:TestR.InputBuilder" /> instance. </returns>
        </member>
        <member name="M:TestR.InputBuilder.ConvertModifierToKey(System.Collections.Generic.IEnumerable{TestR.Desktop.KeyboardModifier})">
            <summary>
            Converts the modifier to the key.
            </summary>
            <param name="modifiers"> The modifiers to convert. </param>
            <returns> The key representation of the modifier. </returns>
        </member>
        <member name="M:TestR.InputBuilder.ConvertModifierToKey(TestR.Desktop.KeyboardModifier[])">
            <summary>
            Converts the modifier to the key.
            </summary>
            <param name="modifiers"> The modifiers to convert. </param>
            <returns> The key representation of the modifier. </returns>
        </member>
        <member name="M:TestR.InputBuilder.IsExtendedKey(TestR.Desktop.KeyboardKey)">
            <summary>
            Determines if the <see cref="T:TestR.Desktop.KeyboardKey" /> is an ExtendedKey
            </summary>
            <param name="keyCode"> The key code. </param>
            <returns> true if the key code is an extended key otherwise false. </returns>
            <remarks>
            The extended keys consist of the ALT and CTRL keys on the right-hand side of the keyboard; the INS, DEL, HOME, END, PAGE UP, PAGE DOWN, and arrow keys in the clusters to the left of the numeric keypad; the NUM LOCK key; the BREAK (CTRL+PAUSE) key; the PRINT SCRN key; and the divide (/) and ENTER keys in the numeric keypad.
            See http://msdn.microsoft.com/en-us/library/ms646267(v=vs.85).aspx Section "Extended-Key Flag"
            </remarks>
        </member>
        <member name="M:TestR.Internal.Extensions.AsJToken(System.String)">
            <summary>
            Deserialize JSON data into a JToken class.
            </summary>
            <param name="data"> The JSON data to deserialize. </param>
            <returns> The JToken class of the data. </returns>
        </member>
        <member name="M:TestR.Internal.Extensions.FirstValue(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Return the first string that is not null or empty.
            </summary>
            <param name="collection"> The collection of string to parse. </param>
        </member>
        <member name="M:TestR.Internal.Extensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs an action on each item in the collection.
            </summary>
            <param name="collection"> The collection of items to run the action with. </param>
            <param name="action"> The action to run against each item in the collection. </param>
            <typeparam name="T"> The type of the item in the collection. </typeparam>
        </member>
        <member name="M:TestR.Internal.Extensions.FormatForInnerString(System.String)">
            <summary>
            Formats the string to be able to include inside inner string.
            </summary>
            <param name="source"> The source string value. </param>
            <returns> The string formatted to be place inside inner string. </returns>
        </member>
        <member name="M:TestR.Internal.Extensions.ToInt(System.String)">
            <summary>
            Converts the string to an integer.
            </summary>
            <param name="item"> The item to convert to an integer. </param>
            <returns> The JSON data of the object. </returns>
        </member>
        <member name="T:TestR.Internal.Inputs.HardwareInput">
            <summary>
            The HardwareInput structure contains information about a simulated message generated by an input device other than a keyboard or mouse.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.HardwareInput.Msg">
            <summary>
            Value specifying the message generated by the input hardware.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.HardwareInput.ParamL">
            <summary>
            Specifies the low-order word of the lParam parameter for uMsg.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.HardwareInput.ParamH">
            <summary>
            Specifies the high-order word of the lParam parameter for uMsg.
            </summary>
        </member>
        <member name="T:TestR.Internal.Inputs.InputMessageDispatcher">
            <summary>
            Implements the <see cref="T:TestR.Internal.Inputs.InputMessageDispatcher" /> by calling <see cref="M:TestR.Internal.Native.NativeInput.SendInput(System.UInt32,TestR.Internal.Inputs.InputTypeWithData[],System.Int32)" />.
            </summary>
        </member>
        <member name="M:TestR.Internal.Inputs.InputMessageDispatcher.DispatchInput(TestR.Internal.Inputs.InputTypeWithData[])">
            <summary>
            Dispatches the specified list of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages in their specified order by issuing a single called to <see cref="M:TestR.Internal.Native.NativeInput.SendInput(System.UInt32,TestR.Internal.Inputs.InputTypeWithData[],System.Int32)" />.
            </summary>
            <param name="inputs"> The list of <see cref="T:TestR.Internal.Inputs.InputTypeWithData" /> messages to be dispatched. </param>
            <exception cref="T:System.ArgumentException"> If the <paramref name="inputs" /> array is empty. </exception>
            <exception cref="T:System.ArgumentNullException"> If the <paramref name="inputs" /> array is null. </exception>
            <exception cref="T:System.Exception"> If the any of the commands in the <paramref name="inputs" /> array could not be sent successfully. </exception>
        </member>
        <member name="T:TestR.Internal.Inputs.InputType">
            <summary>
            Specifies the type of the input event. This member can be one of the following values.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.InputType.Mouse">
            <summary>
            INPUT_MOUSE = 0x00 (The event is a mouse event. Use the mi structure of the union.)
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.InputType.Keyboard">
            <summary>
            INPUT_KEYBOARD = 0x01 (The event is a keyboard event. Use the ki structure of the union.)
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.InputType.Hardware">
            <summary>
            INPUT_HARDWARE = 0x02 (Windows 95/98/Me: The event is from input hardware other than a keyboard or mouse. Use the hi structure of the union.)
            </summary>
        </member>
        <member name="T:TestR.Internal.Inputs.InputTypeWithData">
            <summary>
            The INPUT structure is used by SendInput to store information for synthesizing input events such as keystrokes, mouse movement, and mouse clicks.
            </summary>
            <remarks>
            This structure contains information identical to that used in the parameter list of the keybd_event or mouse_event function.
            Windows 2000/XP: INPUT_KEYBOARD supports non-keyboard input methods, such as handwriting recognition or voice recognition, as if it were text input by using the KEYEVENTF_UNICODE flag.
            For more information, see the remarks section of KEYBDINPUT.
            </remarks>
        </member>
        <member name="F:TestR.Internal.Inputs.InputTypeWithData.Type">
            <summary>
            Specifies the type of the input event. This member can be one of the following values.
            <see cref="F:TestR.Internal.Inputs.InputType.Mouse" /> - The event is a mouse event. Use the mi structure of the union.
            <see cref="F:TestR.Internal.Inputs.InputType.Keyboard" /> - The event is a keyboard event. Use the ki structure of the union.
            <see cref="F:TestR.Internal.Inputs.InputType.Hardware" /> - Windows 95/98/Me: The event is from input hardware other than a keyboard or mouse. Use the hi structure of the union.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.InputTypeWithData.Data">
            <summary>
            The data structure that contains information about the simulated Mouse, Keyboard or Hardware event.
            </summary>
        </member>
        <member name="T:TestR.Internal.Inputs.KeyboardFlag">
            <summary>
            Specifies various aspects of a keystroke. This member can be certain combinations of the following values.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardFlag.ExtendedKey">
            <summary>
            KEYEVENTF_EXTENDEDKEY = 0x0001 (If specified, the scan code was preceded by a prefix byte that has the value 0xE0 (224).)
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardFlag.KeyUp">
            <summary>
            KEYEVENTF_KEYUP = 0x0002 (If specified, the key is being released. If not specified, the key is being pressed.)
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardFlag.Unicode">
            <summary>
            KEYEVENTF_UNICODE = 0x0004 (If specified, wScan identifies the key and wVk is ignored.)
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardFlag.ScanCode">
            <summary>
            KEYEVENTF_SCANCODE = 0x0008 (Windows 2000/XP: If specified, the system synthesizes a VK_PACKET keystroke. The wVk parameter must be zero. This flag can only be combined with the KEYEVENTF_KEYUP flag. For more information, see the Remarks section.)
            </summary>
        </member>
        <member name="T:TestR.Internal.Inputs.KeyboardInput">
            <summary>
            The KEYBDINPUT structure contains information about a simulated keyboard event.  (see: http://msdn.microsoft.com/en-us/library/ms646271(VS.85).aspx)
            </summary>
            <remarks>
            Windows 2000/XP: INPUT_KEYBOARD supports nonkeyboard-input methodssuch as handwriting recognition or voice recognitionas if it were text input by using the KEYEVENTF_UNICODE flag. If KEYEVENTF_UNICODE is specified, SendInput sends a WM_KEYDOWN or WM_KEYUP message to the foreground thread's message queue with wParam equal to VK_PACKET. Once GetMessage or PeekMessage obtains this message, passing the message to TranslateMessage posts a WM_CHAR message with the Unicode character originally specified by wScan. This Unicode character will automatically be converted to the appropriate ANSI value if it is posted to an ANSI window.
            Windows 2000/XP: Set the KEYEVENTF_SCANCODE flag to define keyboard input in terms of the scan code. This is useful to simulate a physical keystroke regardless of which keyboard is currently being used. The virtual key value of a key may alter depending on the current keyboard layout or what other keys were pressed, but the scan code will always be the same.
            </remarks>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardInput.KeyCode">
            <summary>
            Specifies a virtual-key code. The code must be a value in the range 1 to 254. If the dwFlags member specifies KEYEVENTF_UNICODE, wVk must be 0.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardInput.Scan">
            <summary>
            Specifies a hardware scan code for the key. If dwFlags specifies KEYEVENTF_UNICODE, wScan specifies a Unicode character which is to be sent to the foreground application.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardInput.Flags">
            <summary>
            Specifies various aspects of a keystroke. This member can be certain combinations of the following values.
            KEYEVENTF_EXTENDEDKEY - If specified, the scan code was preceded by a prefix byte that has the value 0xE0 (224).
            KEYEVENTF_KEYUP - If specified, the key is being released. If not specified, the key is being pressed.
            KEYEVENTF_SCANCODE - If specified, wScan identifies the key and wVk is ignored.
            KEYEVENTF_UNICODE - Windows 2000/XP: If specified, the system synthesizes a VK_PACKET keystroke. The wVk parameter must be zero. This flag can only be combined with the KEYEVENTF_KEYUP flag. For more information, see the Remarks section.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardInput.Time">
            <summary>
            Time stamp for the event, in milliseconds. If this parameter is zero, the system will provide its own time stamp.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.KeyboardInput.ExtraInfo">
            <summary>
            Specifies an additional value associated with the keystroke. Use the GetMessageExtraInfo function to obtain this information.
            </summary>
        </member>
        <member name="T:TestR.Internal.Inputs.MouseFlag">
             <summary>
             The set of MouseFlags for use in the Flags property of the <see cref="T:TestR.Internal.Inputs.MouseInput" /> structure.
             </summary>
             <remarks>
            See: http://msdn.microsoft.com/en-us/library/ms646273(VS.85).aspx
             </remarks>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.Move">
            <summary>
            Specifies that movement occurred.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.LeftDown">
            <summary>
            Specifies that the left button was pressed.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.LeftUp">
            <summary>
            Specifies that the left button was released.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.RightDown">
            <summary>
            Specifies that the right button was pressed.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.RightUp">
            <summary>
            Specifies that the right button was released.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.MiddleDown">
            <summary>
            Specifies that the middle button was pressed.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.MiddleUp">
            <summary>
            Specifies that the middle button was released.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.XDown">
            <summary>
            Windows 2000/XP: Specifies that an X button was pressed.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.XUp">
            <summary>
            Windows 2000/XP: Specifies that an X button was released.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.VerticalWheel">
            <summary>
            Windows NT/2000/XP: Specifies that the wheel was moved, if the mouse has a wheel. The amount of movement is specified in mouseData.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.HorizontalWheel">
            <summary>
            Specifies that the wheel was moved horizontally, if the mouse has a wheel. The amount of movement is specified in mouseData. Windows 2000/XP:  Not supported.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.VirtualDesk">
            <summary>
            Windows 2000/XP: Maps coordinates to the entire desktop. Must be used with MOUSEEVENTF_ABSOLUTE.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseFlag.Absolute">
            <summary>
            Specifies that the dx and dy members contain normalized absolute coordinates. If the flag is not set, dx and dy contain relative data (the change in position
            since the last reported position). This flag can be set, or not set, regardless of what kind of mouse or other pointing device, if any, is connected to the system.
            For further information about relative mouse motion, see the following Remarks section.
            </summary>
        </member>
        <member name="T:TestR.Internal.Inputs.MouseInput">
            <summary>
            The MOUSEINPUT structure contains information about a simulated mouse event. (see: http://msdn.microsoft.com/en-us/library/ms646273(VS.85).aspx)
            Declared in Winuser.h, include Windows.h
            </summary>
            <remarks>
            If the mouse has moved, indicated by MOUSEEVENTF_MOVE, dx and dy specify information about that movement. The information is specified as absolute or relative integer values.
            If MOUSEEVENTF_ABSOLUTE value is specified, dx and dy contain normalized absolute coordinates between 0 and 65,535. The event procedure maps these coordinates onto the display surface.
            Coordinate (0,0) maps onto the upper-left corner of the display surface; coordinate (65535,65535) maps onto the lower-right corner. In a multimonitor system, the coordinates map to the
            primary monitor.
            Windows 2000/XP: If MOUSEEVENTF_VIRTUALDESK is specified, the coordinates map to the entire virtual desktop.
            If the MOUSEEVENTF_ABSOLUTE value is not specified, dx and dy specify movement relative to the previous mouse event (the last reported position). Positive values mean the mouse moved right (or down); negative values mean the mouse moved left (or up).
            Relative mouse motion is subject to the effects of the mouse speed and the two-mouse threshold values. A user sets these three values with the Pointer Speed slider of the Control Panel's Mouse Properties sheet. You can obtain and set these values using the SystemParametersInfo function.
            The system applies two tests to the specified relative mouse movement. If the specified distance along either the x or y axis is greater than the first mouse threshold value, and the mouse speed is not zero, the system doubles the distance. If the specified distance along either the x or y axis is greater than the second mouse threshold value, and the mouse speed is equal to two, the system doubles the distance that resulted from applying the first threshold test. It is thus possible for the system to multiply specified relative mouse movement along the x or y axis by up to four times.
            </remarks>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseInput.X">
            <summary>
            Specifies the absolute position of the mouse, or the amount of motion since the last mouse event was generated, depending on the value of the dwFlags member.
            Absolute data is specified as the x coordinate of the mouse; relative data is specified as the number of pixels moved.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseInput.Y">
            <summary>
            Specifies the absolute position of the mouse, or the amount of motion since the last mouse event was generated, depending on the value of the dwFlags member.
            Absolute data is specified as the y coordinate of the mouse; relative data is specified as the number of pixels moved.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseInput.MouseData">
            <summary>
            If dwFlags contains MOUSEEVENTF_WHEEL, then mouseData specifies the amount of wheel movement. A positive value indicates that the wheel was rotated forward, away from the user; a negative value indicates that the wheel was rotated backward, toward the user. One wheel click is defined as WHEEL_DELTA, which is 120.
            Windows Vista: If dwFlags contains MOUSEEVENTF_HWHEEL, then dwData specifies the amount of wheel movement. A positive value indicates that the wheel was rotated to the right; a negative value indicates that the wheel was rotated to the left. One wheel click is defined as WHEEL_DELTA, which is 120.
            Windows 2000/XP: IfdwFlags does not contain MOUSEEVENTF_WHEEL, MOUSEEVENTF_XDOWN, or MOUSEEVENTF_XUP, then mouseData should be zero.
            If dwFlags contains MOUSEEVENTF_XDOWN or MOUSEEVENTF_XUP, then mouseData specifies which X buttons were pressed or released. This value may be any combination of the following flags.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseInput.Flags">
            <summary>
            A set of bit flags that specify various aspects of mouse motion and button clicks. The bits in this member can be any reasonable combination of the following values.
            The bit flags that specify mouse button status are set to indicate changes in status, not ongoing conditions. For example, if the left mouse button is pressed and held down,
            MOUSEEVENTF_LEFTDOWN is set when the left button is first pressed, but not for subsequent motions. Similarly, MOUSEEVENTF_LEFTUP is set only when the button is first released.
            You cannot specify both the MOUSEEVENTF_WHEEL flag and either MOUSEEVENTF_XDOWN or MOUSEEVENTF_XUP flags simultaneously in the dwFlags parameter, because they both require use
            of the mouseData field.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseInput.Time">
            <summary>
            Time stamp for the event, in milliseconds. If this parameter is 0, the system will provide its own time stamp.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseInput.ExtraInfo">
            <summary>
            Specifies an additional value associated with the mouse event. An application calls GetMessageExtraInfo to obtain this extra information.
            </summary>
        </member>
        <member name="T:TestR.Internal.Inputs.MouseKeyboardInput">
            <summary>
            The combined/overlayed structure that includes Mouse, Keyboard and Hardware Input message data (see: http://msdn.microsoft.com/en-us/library/ms646270(VS.85).aspx)
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseKeyboardInput.Mouse">
            <summary>
            The <see cref="T:TestR.Internal.Inputs.MouseInput" /> definition.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseKeyboardInput.Keyboard">
            <summary>
            The <see cref="T:TestR.Internal.Inputs.KeyboardInput" /> definition.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.MouseKeyboardInput.Hardware">
            <summary>
            The <see cref="T:TestR.Internal.Inputs.HardwareInput" /> definition.
            </summary>
        </member>
        <member name="T:TestR.Internal.Inputs.XButton">
            <summary>
            XButton definitions for use in the MouseData property of the <see cref="T:TestR.Internal.Inputs.MouseInput" /> structure. (See: http://msdn.microsoft.com/en-us/library/ms646273(VS.85).aspx)
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.XButton.XButton1">
            <summary>
            Set if the first X button is pressed or released.
            </summary>
        </member>
        <member name="F:TestR.Internal.Inputs.XButton.XButton2">
            <summary>
            Set if the second X button is pressed or released.
            </summary>
        </member>
        <member name="M:TestR.Internal.ManagementObjectDisposer.DisposeOne(System.IDisposable)">
            <summary>
            Workaround to dispose ManagementBaseObject properly.
            See http://stackoverflow.com/questions/11896282
            </summary>
            <param name="disposable"> The IDisposable object to dispose. </param>
        </member>
        <member name="M:TestR.Internal.ManagementObjectDisposer.EnumerateCollection(System.Management.ManagementObjectCollection)">
            <summary>
            Helper for adding ManagementObjectCollection and enumerating it.
            </summary>
        </member>
        <member name="M:TestR.Internal.ManagementObjectDisposer.Search(System.String)">
            <summary>
            Helper for ManagementObjectSearcher with adding all objects to the disposables.
            </summary>
            <param name="query"> The query string. </param>
        </member>
        <member name="T:TestR.Internal.Native.NativeGeneral">
            <summary>
            References all of the Native Windows API methods for the WindowsInput functionality.
            </summary>
        </member>
        <member name="F:TestR.Internal.Native.NativeGeneral.SetWindowPosFlags.NoMove">
            <summary>
            Retains the current position (ignores X and Y parameters).
            </summary>
        </member>
        <member name="F:TestR.Internal.Native.NativeGeneral.SetWindowPosFlags.NoSize">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="F:TestR.Internal.Native.NativeScreen.DisplayDeviceStateFlags.AttachedToDesktop">
            <summary> The device is part of the desktop. </summary>
        </member>
        <member name="F:TestR.Internal.Native.NativeScreen.DisplayDeviceStateFlags.PrimaryDevice">
            <summary> The device is part of the desktop. </summary>
        </member>
        <member name="F:TestR.Internal.Native.NativeScreen.DisplayDeviceStateFlags.MirroringDriver">
            <summary> Represents a pseudo device used to mirror application drawing for remoting or other purposes. </summary>
        </member>
        <member name="F:TestR.Internal.Native.NativeScreen.DisplayDeviceStateFlags.VGACompatible">
            <summary> The device is VGA compatible. </summary>
        </member>
        <member name="F:TestR.Internal.Native.NativeScreen.DisplayDeviceStateFlags.Removable">
            <summary> The device is removable; it cannot be the primary display. </summary>
        </member>
        <member name="F:TestR.Internal.Native.NativeScreen.DisplayDeviceStateFlags.ModesPruned">
            <summary> The device has more display modes than its output devices support. </summary>
        </member>
        <member name="T:TestR.IScrollableElement">
            <summary>
            Represents a scrollable element.
            </summary>
        </member>
        <member name="P:TestR.IScrollableElement.HorizontalScrollPercent">
            <summary>
            Gets the scroll percentage for the horizontal bar.
            </summary>
        </member>
        <member name="P:TestR.IScrollableElement.IsScrollable">
            <summary>
            Gets a flag indicating the element is scrollable.
            </summary>
        </member>
        <member name="P:TestR.IScrollableElement.VerticalScrollPercent">
            <summary>
            Gets the scroll percentage for the vertical bar.
            </summary>
        </member>
        <member name="M:TestR.IScrollableElement.Scroll(System.Double,System.Double)">
            <summary>
            Scroll the browser window.
            </summary>
            <param name="horizontalPercent"> The percentage to scroll horizontally. </param>
            <param name="verticalPercent"> The percentage to scroll vertically. </param>
        </member>
        <member name="T:TestR.TestRException">
            <summary>
            Custom TestR Exception instead of the generic Exception
            </summary>
        </member>
        <member name="M:TestR.TestRException.#ctor(System.String)">
            <summary>
            Custom TestR Exception instead of the generic Exception
            </summary>
            <param name="message"> </param>
        </member>
        <member name="T:TestR.Utility">
            <summary>
            Represents the Utility class.
            </summary>
        </member>
        <member name="M:TestR.Utility.Wait(System.Func{System.Boolean},System.Double,System.Int32)">
            <summary>
            Runs the action until the action returns true or the timeout is reached. Will delay in between actions of the provided time.
            </summary>
            <param name="action"> The action to call. </param>
            <param name="timeout"> The timeout to attempt the action. This value is in milliseconds. </param>
            <param name="delay"> The delay in between actions. This value is in milliseconds. </param>
            <returns> Returns true of the call completed successfully or false if it timed out. </returns>
        </member>
        <member name="M:TestR.Utility.Wait``1(``0,System.Func{``0,System.Boolean},System.Double,System.Int32)">
            <summary>
            Runs the action until the action returns true or the timeout is reached. Will delay in between actions of the provided time.
            </summary>
            <param name="input"> The input to pass to the action. </param>
            <param name="action"> The action to call. </param>
            <param name="timeout"> The timeout to attempt the action. This value is in milliseconds. </param>
            <param name="delay"> The delay in between actions. This value is in milliseconds. </param>
            <returns> Returns true of the call completed successfully or false if it timed out. </returns>
        </member>
        <member name="T:TestR.Web.Browser">
            <summary>
            This is the base class for browsers.
            </summary>
        </member>
        <member name="F:TestR.Web.Browser.TestrNotDefinedMessage">
            <summary>
            Gets the missing TestR error.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.#ctor(TestR.Application,System.Collections.Generic.ICollection{System.IntPtr})">
            <summary>
            Initializes a new instance of the Browser class.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.ActiveElement">
            <summary>
            Gets the current active element.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.AutoClose">
            <summary>
            Gets or sets a flag to auto close the browser when disposed of. Defaults to false.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.AutoRefresh">
            <summary>
            Gets or sets a flag that allows elements to refresh when reading properties. Defaults to true.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.FocusedElement">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.Browser.HorizontalScrollPercent">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.Browser.Id">
            <summary>
            Gets the ID of the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.IsClosed">
            <summary>
            Gets the value indicating if the browser is closed.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.IsScrollable">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.Browser.JavascriptLibraries">
            <summary>
            Gets a list of JavaScript libraries that were detected on the page.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.Location">
            <summary>
            Gets the location of the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.RawHtml">
            <summary>
            Gets the raw HTML of the page.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.Size">
            <summary>
            Gets the size of the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.Timeout">
            <summary>
            Gets or sets the time out for delay request. Defaults to 60 seconds.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.Uri">
            <summary>
            Gets the URI of the current page.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.VerticalScrollPercent">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.Browser.Window">
            <summary>
            The main windows for the browser.
            </summary>
        </member>
        <member name="P:TestR.Web.Browser.ScrollableElement">
            <summary>
            Gets the scrollable element to
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.AttachBrowsers(TestR.Web.BrowserType,System.Boolean)">
            <summary>
            Attach browsers for each type provided.
            </summary>
            <param name="type"> The type of the browser to attach to. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
        </member>
        <member name="M:TestR.Web.Browser.AttachOrCreate(TestR.Web.BrowserType)">
            <summary>
            Attach or create browsers for each type provided.
            </summary>
            <param name="type"> The type of the browser to attach to or create. </param>
        </member>
        <member name="M:TestR.Web.Browser.AttachToBrowser(System.Diagnostics.Process,System.Boolean)">
            <summary>
            Attach process as a browser.
            </summary>
            <param name="process"> The process of the browser to attach to. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser if successfully attached or otherwise null. </returns>
        </member>
        <member name="M:TestR.Web.Browser.BringToFront">
            <summary>
            Brings the application to the front and makes it the top window.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.Close">
            <summary>
            Closes the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.CloseBrowsers(TestR.Web.BrowserType)">
            <summary>
            Closes all browsers of the provided type.
            </summary>
            <param name="type"> The type of the browser to close. </param>
        </member>
        <member name="M:TestR.Web.Browser.CreateBrowsers(TestR.Web.BrowserType,System.Boolean)">
            <summary>
            Create browsers for each type provided.
            </summary>
            <param name="type"> The type of the browser to create. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
        </member>
        <member name="M:TestR.Web.Browser.ExecuteScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The script to run. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the script. </returns>
        </member>
        <member name="M:TestR.Web.Browser.Focus">
            <summary>
            Sets the browser as the focused window.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.ForEachBrowser(System.Action{TestR.Web.Browser},TestR.Web.BrowserType)">
            <summary>
            Process an action against a new instance of each browser type provided (serial).
            </summary>
            <param name="action"> The action to perform against each browser. </param>
            <param name="type"> The type of the browser to process against. </param>
        </member>
        <member name="M:TestR.Web.Browser.ForAllBrowsers(System.Action{TestR.Web.Browser},TestR.Web.BrowserType,System.TimeSpan)">
            <summary>
            Process an action against a new instance of each browser type provided at the same time (parallel).
            </summary>
            <param name="action"> The action to perform against each browser. </param>
            <param name="type"> The type of the browser to process against. </param>
            <param name="timeout"> The timeout to wait for browsers to complete </param>
        </member>
        <member name="M:TestR.Web.Browser.StartStaTask(System.Action)">
            <summary>
            Runs a task in an STA thread.
            </summary>
            <param name="action"> The action to run. </param>
            <returns> The task started as STA thread running the action. </returns>
        </member>
        <member name="M:TestR.Web.Browser.GetHtml">
            <summary>
            Gets the HTML displayed in the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.GetTestScript">
            <summary>
            Inserts the test script into the current page.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.MoveWindow(System.Int32,System.Int32)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="x"> The x coordinate to move to. </param>
            <param name="y"> The y coordinate to move to. </param>
        </member>
        <member name="M:TestR.Web.Browser.MoveWindow(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="x"> The x coordinate to move to. </param>
            <param name="y"> The y coordinate to move to. </param>
            <param name="width"> The width of the window. </param>
            <param name="height"> The height of the window. </param>
        </member>
        <member name="M:TestR.Web.Browser.MoveWindow(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Move the window and resize it.
            </summary>
            <param name="location"> The location to move to. </param>
            <param name="size"> The size of the window. </param>
        </member>
        <member name="M:TestR.Web.Browser.NavigateTo(System.String,System.String)">
            <summary>
            Navigates the browser to the provided URI.
            </summary>
            <param name="uri"> The URI to navigate to. </param>
            <param name="expectedUri"> The expected URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browser.Refresh``1(System.Func{``0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.Browser.RemoveElement(TestR.Web.WebElement)">
            <summary>
            Removes the element from the page. * Experimental
            </summary>
            <param name="element"> The element to remove. </param>
        </member>
        <member name="M:TestR.Web.Browser.RemoveElementAttribute(TestR.Web.WebElement,System.String)">
            <summary>
            Removes an attribute from an element.
            </summary>
            <param name="element"> The element to remove the attribute from. </param>
            <param name="name"> The name of the attribute to remove. </param>
        </member>
        <member name="M:TestR.Web.Browser.Resize(System.Int32,System.Int32)">
            <summary>
            Resize the browser to the provided size.
            </summary>
            <param name="width"> The width to set. </param>
            <param name="height"> The height to set. </param>
        </member>
        <member name="M:TestR.Web.Browser.Scroll(System.Double,System.Double)">
            <summary>
            Scroll the browser window.
            </summary>
            <param name="horizontalPercent"> The percentage to scroll horizontally. </param>
            <param name="verticalPercent"> The percentage to scroll vertically. </param>
        </member>
        <member name="M:TestR.Web.Browser.SetHtml(System.String)">
            <summary>
            Sets the HTML to display in the browser.
            </summary>
            <param name="html"> The HTML to apply to the browser. </param>
        </member>
        <member name="M:TestR.Web.Browser.WaitForComplete(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.Browser.WaitForNavigation(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Wait for the browser page to redirect to a provided URI.
            </summary>
            <param name="uri"> The expected URI to land on. Defaults to empty string if not provided. </param>
            <param name="timeout"> The timeout before giving up on the redirect. Defaults to Timeout if not provided. </param>
        </member>
        <member name="M:TestR.Web.Browser.BrowserNavigateTo(System.String)">
            <summary>
            Browser implementation of navigate to
            </summary>
            <param name="uri"> The URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browser.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Web.Browser.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The code script to execute. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the execution. </returns>
        </member>
        <member name="M:TestR.Web.Browser.GetBrowserUri">
            <summary>
            Reads the current URI directly from the browser.
            </summary>
            <returns> The current URI that was read from the browser. </returns>
        </member>
        <member name="M:TestR.Web.Browser.GetScrollableElement">
            <summary>
            Gets the scrollable element to scroll browser content.
            </summary>
            <returns> </returns>
        </member>
        <member name="M:TestR.Web.Browser.InjectTestScript(System.Int32)">
            <summary>
            Injects the test script into the browser.
            </summary>
            <param name="count"> The count of how many times this method has been called. </param>
        </member>
        <member name="M:TestR.Web.Browser.Replace(System.String,System.Collections.Generic.Dictionary{System.Char,System.String})">
            <summary>
            Replaces a character with a string. Does not replace if the string replacement matches at starting character.
            </summary>
            <param name="input"> The string to parse. </param>
            <param name="replacements"> The collection of trigger characters and replacements. </param>
            <returns> The updated string. </returns>
        </member>
        <member name="M:TestR.Web.Browser.ReplaceInReverse(System.String,System.Collections.Generic.Dictionary{System.Char,System.String})">
            <summary>
            Replaces a character with a string processing input in reverse. Does not replace if the string replacement matches at starting character.
            </summary>
            <param name="input"> The string to parse. </param>
            <param name="replacements"> The collection of trigger characters and replacements. </param>
            <returns> The updated string. </returns>
        </member>
        <member name="M:TestR.Web.Browser.DetectJavascriptLibraries">
            <summary>
            Runs script to detect specific libraries.
            </summary>
        </member>
        <member name="M:TestR.Web.Browser.RefreshElements">
            <summary>
            Refreshes the element collection for the current page.
            </summary>
        </member>
        <member name="T:TestR.Web.BrowserResizeType">
            <summary>
            Represents browser resize types
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserResizeType.SideBySide">
            <summary>
            Places browser side by side horizontally across the whole screen.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserResizeType.LeftSideBySide">
            <summary>
            Places browser side by side horizontally across the left side screen.
            If more than two browsers then it will create quarters.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserResizeType.RightSideBySide">
            <summary>
            Places browser side by side horizontally across the right side screen.
            If more than two browsers then it will create quarters.
            </summary>
        </member>
        <member name="T:TestR.Web.Browsers.Chrome">
            <summary>
            Represents an Chrome browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Chrome.BrowserName">
            <summary>
            The name of the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Chrome.DebugPort">
            <summary>
            The debug port for the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.#ctor(TestR.Application,System.Collections.Generic.ICollection{System.IntPtr})">
            <summary>
            Initializes a new instance of the Chrome class.
            </summary>
            <param name="application"> The window of the existing browser. </param>
            <param name="windowsToIgnore"> The windows to ignore. Optional. </param>
        </member>
        <member name="P:TestR.Web.Browsers.Chrome.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.Attach(System.Boolean)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.Attach(System.Diagnostics.Process,System.Boolean)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <param name="process"> The process to attach to. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.AttachOrCreate(System.Boolean)">
            <summary>
            Attempts to attach to an existing browser. If one is not found then create and return a new one.
            </summary>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Chrome.Create(System.Boolean)">
            <summary>
            Attempts to create a new browser. If one is not found then we'll make sure it was started with the
            remote debugger argument. If not an exception will be thrown.
            </summary>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance. </returns>
        </member>
        <member name="T:TestR.Web.Browsers.ChromiumBrowser">
            <summary>
            Represents a chromium based browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.ChromiumBrowser.DebugArgument">
            <summary>
            The debugging argument for starting the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.ChromiumBrowser.#ctor(System.Int32,TestR.Application,System.Collections.Generic.ICollection{System.IntPtr})">
            <summary>
            Initializes a new instance of the Chrome class.
            </summary>
            <param name="port"> The debug port number for the browser. </param>
            <param name="application"> The window of the existing browser. </param>
            <param name="windowsToIgnore"> The windows to ignore. Optional. </param>
        </member>
        <member name="M:TestR.Web.Browsers.ChromiumBrowser.BrowserNavigateTo(System.String)">
            <summary>
            Navigates the browser to the provided URI.
            </summary>
            <param name="uri"> The URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browsers.ChromiumBrowser.Connect">
            <summary>
            Connect to the Chrome browser debugger port.
            </summary>
            <exception cref="T:System.Exception"> All debugging sessions are taken. </exception>
        </member>
        <member name="M:TestR.Web.Browsers.ChromiumBrowser.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Web.Browsers.ChromiumBrowser.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The code script to execute. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the execution. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.ChromiumBrowser.GetBrowserUri">
            <summary>
            Reads the current URI directly from the browser.
            </summary>
            <returns> The current URI that was read from the browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.ChromiumBrowser.GetDebugArguments(System.Int32)">
            <summary>
            Gets the debug arguments for the chromium browser.
            </summary>
            <param name="port"> The debug port number for the browser. </param>
            <returns> The command arguments for the browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.ChromiumBrowser.GetScrollableElement">
            <inheritdoc />
        </member>
        <member name="T:TestR.Web.Browsers.Edge">
            <summary>
            Represents an Edge browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Edge.BrowserName">
            <summary>
            The name of the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Edge.DebugPort">
            <summary>
            The debug port for the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.#ctor(TestR.Application,System.Collections.Generic.ICollection{System.IntPtr})">
            <summary>
            Initializes a new instance of the Edge class.
            </summary>
            <param name="application"> The window of the existing browser. </param>
            <param name="windowsToIgnore"> The windows to ignore. Optional. </param>
        </member>
        <member name="P:TestR.Web.Browsers.Edge.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.Attach(System.Boolean)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.Attach(System.Diagnostics.Process,System.Boolean)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <param name="process"> The process to attach to. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.AttachOrCreate(System.Boolean)">
            <summary>
            Attempts to attach to an existing browser. If one is not found then create and return a new one.
            </summary>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Edge.Create(System.Boolean)">
            <summary>
            Attempts to create a new browser. If one is not found then we'll make sure it was started with the
            remote debugger argument. If not an exception will be thrown.
            </summary>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance. </returns>
        </member>
        <member name="T:TestR.Web.Browsers.Firefox">
            <summary>
            Represents a Firefox browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Firefox.BrowserName">
            <summary>
            The name of the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.Browsers.Firefox.DebugArgument">
            <summary>
            The debugging argument for starting the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.#ctor(TestR.Application,System.Collections.Generic.ICollection{System.IntPtr})">
            <summary>
            Initializes a new instance of the Firefox class.
            </summary>
            <param name="application"> The window of the existing browser. </param>
            <param name="windowsToIgnore"> The windows to ignore. Optional. </param>
        </member>
        <member name="P:TestR.Web.Browsers.Firefox.BrowserType">
            <summary>
            Gets the type of the browser.
            </summary>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Attach(System.Boolean)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Attach(System.Diagnostics.Process,System.Boolean)">
            <summary>
            Attempts to attach to an existing browser.
            </summary>
            <param name="process"> The process to attach to. </param>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance or null if not found. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.AttachOrCreate(System.Boolean)">
            <summary>
            Attempts to attach to an existing browser. If one is not found then create and return a new one.
            </summary>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Create(System.Boolean)">
            <summary>
            Attempts to create a new browser.
            </summary>
            <remarks>
            The Firefox browser must have the "listen 6000" command run in the console to enable remote debugging. A newly created
            browser will not be able to connect until someone manually starts the remote debugger.
            </remarks>
            <param name="bringToFront"> The option to bring the application to the front. This argument is optional and defaults to true. </param>
            <returns> The browser instance. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.BrowserNavigateTo(System.String)">
            <summary>
            Navigates the browser to the provided URI.
            </summary>
            <param name="uri"> The URI to navigate to. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"> True if disposing and false if otherwise. </param>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.ExecuteJavaScript(System.String,System.Boolean)">
            <summary>
            Execute JavaScript code in the current document.
            </summary>
            <param name="script"> The code script to execute. </param>
            <param name="expectResponse"> The script will return response. </param>
            <returns> The response from the execution. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.GetBrowserUri">
            <summary>
            Reads the current URI directly from the browser.
            </summary>
            <returns> The current URI that was read from the browser. </returns>
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.GetScrollableElement">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.Browsers.Firefox.Connect">
            <summary>
            Connect to the Firefox browser debugger port.
            </summary>
            <exception cref="T:System.Exception"> All debugging sessions are taken. </exception>
        </member>
        <member name="T:TestR.Web.BrowserType">
            <summary>
            The type of the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.Chrome">
            <summary>
            Represents a Chrome browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.Edge">
            <summary>
            Represents an Edge (Chromium) browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.Firefox">
            <summary>
            Represents a Firefox browser.
            </summary>
        </member>
        <member name="F:TestR.Web.BrowserType.All">
            <summary>
            Represents all browser types.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Abbreviation">
            <summary>
            Represents a browser abbreviation element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Abbreviation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Acronym">
            <summary>
            Represents a browser Acronym element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Acronym.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Address">
            <summary>
            Represents a browser address element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Address.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Applet">
            <summary>
            Represents a browser Applet element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Applet.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Applet.Code">
            <summary>
            Gets or sets the code attribute. This should be a URL to the applet class file.
            </summary>
            <remarks>
            Specifies the file name of a Java applet.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Applet.Height">
            <summary>
            Gets or sets the height attribute.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.Applet.Object">
            <summary>
            Gets or sets the object attribute.
            </summary>
            <remarks>
            Specifies a reference to a serialized representation of an applet.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Applet.Width">
            <summary>
            Gets or sets the width attribute.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Area">
            <summary>
            Represents a browser BoundingRectangle element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Area.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Article">
            <summary>
            Represents a browser article element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Article.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Aside">
            <summary>
            Represents a browser Aside element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Aside.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Audio">
            <summary>
            Represents a browser Audio element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Audio.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Base">
            <summary>
            Represents a browser Base element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Base.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.BaseFont">
            <summary>
            Represents a browser BaseFont element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.BaseFont.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.BiDirectionalIsolation">
            <summary>
            Represents a browser BiDirectionalIsolation element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.BiDirectionalIsolation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.BiDirectionalOverride">
            <summary>
            Represents a browser BiDirectionalOverride element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.BiDirectionalOverride.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Big">
            <summary>
            Represents a browser Big element.
            </summary>
            <remarks>
            Not supported in HTML5 use CSS instead.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.Big.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.BlockQuote">
            <summary>
            Represents a block quotes element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.BlockQuote.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Body">
            <summary>
            Represents a browser Body element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Body.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Bold">
            <summary>
            Represents a browser bold element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Bold.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Button">
            <summary>
            Represent a browser button element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Button.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a Button browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Button.AutoFocus">
            <summary>
            Gets or sets the autofocus attribute.
            </summary>
            <remarks>
            HTML5: Specifies that a button should automatically get focus when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.Form">
            <summary>
            Gets or sets the form attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the button belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormAction">
            <summary>
            Gets or sets the form action attribute.
            </summary>
            <remarks>
            HTML5: Specifies where to send the form-data when a form is submitted. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormEncType">
            <summary>
            Gets or sets the form encoded type attribute.
            </summary>
            <remarks>
            HTML5: Specifies how form-data should be encoded before sending it to a server. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormMethod">
            <summary>
            Gets or sets the form method attribute.
            </summary>
            <remarks>
            HTML5: Specifies how to send the form-data (which HTTP method to use). Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormNoValidate">
            <summary>
            Gets or sets the form no validate attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the form-data should not be validated on submission. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.FormTarget">
            <summary>
            Gets or sets the form target attribute.
            </summary>
            <remarks>
            HTML5: Specifies where to display the response after submitting the form. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Button.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.Button.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Canvas">
            <summary>
            Represents a browser Canvas element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Canvas.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Caption">
            <summary>
            Represents a browser Caption element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Caption.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Center">
            <summary>
            Represents a browser Center element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Center.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.CheckBox">
            <summary>
            Represent a browser input checkbox element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.CheckBox.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a check box browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Checked">
            <summary>
            Gets or sets the checked attribute.
            </summary>
            <remarks>
            Specifies that an element should be pre-selected when the page loads (for type="checkbox" or type="radio").
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Form">
            <summary>
            Gets or sets the form attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the button belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.FormNoValidate">
            <summary>
            Gets or sets the form no validate attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the form-data should not be validated on submission. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.CheckBox.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Cite">
            <summary>
            Represents a browser Cite element.
            </summary>
            <remarks>
            In HTML5 this tag defines the title of a work.
            In HTML4 this tag defines a citation.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.Cite.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Code">
            <summary>
            Represents a browser code element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Code.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Column">
            <summary>
            Represents a browser Column (col) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Column.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.ColumnGroup">
            <summary>
            Represents a browser ColumnGroup element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.ColumnGroup.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.DataList">
            <summary>
            Represents a browser DataList element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.DataList.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Definition">
            <summary>
            Represents a browser Definition (dfn) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Definition.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Deleted">
            <summary>
            Represents a browser Deleted (del) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Deleted.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.DescriptionList">
            <summary>
            Represents a browser DescriptionList (dl) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.DescriptionList.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.DescriptionListDefinition">
            <summary>
            Represents a browser DescriptionListDefinition (dd) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.DescriptionListDefinition.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.DescriptionListTerm">
            <summary>
            Represents a browser DescriptionListTerm (dt) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.DescriptionListTerm.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Details">
            <summary>
            Represents a browser Details element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Details.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Dialog">
            <summary>
            Represents a browser Dialog element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Dialog.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Directory">
            <summary>
            Represents a browser Directory (dir) element.
            </summary>
            <remarks>
            Not supported in HTML5 so use CSS instead.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.Directory.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Division">
            <summary>
            Represents a browser division (div) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Division.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Embed">
            <summary>
            Represents a browser Embed element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Embed.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Emphasis">
            <summary>
            Represents a browser Emphasis (em) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Emphasis.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.FieldSet">
            <summary>
            Represents a browser fieldset element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.FieldSet.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Figure">
            <summary>
            Represents a browser Figure element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Figure.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.FigureCaption">
            <summary>
            Represents a browser FigureCaption (figcapture) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.FigureCaption.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Font">
            <summary>
            Represents a browser Font element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Font.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Footer">
            <summary>
            Represents a browser Footer element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Footer.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Form">
            <summary>
            Represent a browser form element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Form.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a form browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Form.Action">
            <summary>
            Gets or sets the action attribute.
            </summary>
            <remarks>
            Specifies where to send the form-data when a form is submitted.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.AutoComplete">
            <summary>
            Gets or sets the auto complete attribute.
            </summary>
            <remarks>
            HTML5: Specifies whether a form should have autocomplete on or off.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.EncType">
            <summary>
            Gets or sets the encoded type attribute.
            </summary>
            <remarks>
            Specifies how the form-data should be encoded when submitting it to the server (only for method="post").
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.Method">
            <summary>
            Gets or sets the method attribute.
            </summary>
            <remarks>
            Specifies the HTTP method to use when sending form-data.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.NoValidate">
            <summary>
            Gets or sets the no validate attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the form should not be validated when submitted.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Form.Target">
            <summary>
            Gets or sets the target attribute.
            </summary>
            <remarks>
            Specifies where to display the response that is received after submitting the form.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.Frame">
            <summary>
            Represents a browser Frame element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Frame.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.FrameSet">
            <summary>
            Represents a browser FrameSet element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.FrameSet.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Head">
            <summary>
            Represents a browser Head element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Head.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Header">
            <summary>
            Represents a browser header element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Header.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.HeadingGroup">
            <summary>
            Represents a browser HeadingGroup (hgroup) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.HeadingGroup.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.HorizontalRule">
            <summary>
            Represents a browser horizontal rule element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.HorizontalRule.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Html">
            <summary>
            Represents a browser Html element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Html.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Image">
            <summary>
            Represents a browser text input["image"] element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Image.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a Image browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Image.Alt">
            <summary>
            Gets or sets the alt attribute.
            </summary>
            <remarks>
            Specifies an alternate text for images.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Image.Height">
            <summary>
            Gets or sets the height attribute.
            </summary>
            <remarks>
            HTML5: Specifies the height of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Image.Src">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the URL of the image to use as a submit button.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Image.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Image.Width">
            <summary>
            Gets or sets the width attribute.
            </summary>
            <remarks>
            HTML5: Specifies the width of an input element.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.InlineFrame">
            <summary>
            Represents a browser InlineFrame element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.InlineFrame.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Insert">
            <summary>
            Represents a browser Insert (ins) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Insert.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Italic">
            <summary>
            Represents a browser Italic element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Italic.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Keyboard">
            <summary>
            Represents a browser Keyboard (kbd) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Keyboard.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.KeyGenerator">
            <summary>
            Represents a browser KeyGenerator (keygen) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.KeyGenerator.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Label">
            <summary>
            Represents a browser label element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Label.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Label.For">
            <summary>
            Gets or sets the element id (for) attribute.
            </summary>
            <remarks>
            Specifies which form element a label is bound to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Label.Form">
            <summary>
            Gets or sets the form id (form) attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the label belongs to.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.Legend">
            <summary>
            Represents a browser legend element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Legend.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.LineBreak">
            <summary>
            Represent a browser line break element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.LineBreak.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a line break browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Link">
            <summary>
            Represent a browser link element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Link.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a Link browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Link.Download">
            <summary>
            Gets or set the download attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the target will be downloaded when a user clicks on the hyper link.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Href">
            <summary>
            Gets or set the hypertext reference (href) attribute.
            </summary>
            <remarks>
            Specifies the URL of the page the link goes to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Media">
            <summary>
            Gets or set the media attribute.
            </summary>
            <remarks>
            HTML5: Specifies what media/device the linked document is optimized for.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Rel">
            <summary>
            Gets or set the hypertext reference of this link.
            </summary>
            <remarks>
            The rel attribute specifies the relationship between the current document and the linked
            document. Only used if the href attribute is present.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Target">
            <summary>
            Gets or set the target of this link.
            </summary>
            <remarks>
            Specifies where to open the linked document.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Link.Type">
            <summary>
            Gets or set the media type of this link.
            </summary>
            <remarks>
            The Internet media type of the linked document. Look at IANA Media Types for a complete
            list of standard media types.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.ListItem">
            <summary>
            Represents a browser list item element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.ListItem.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.ListItem.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of a list item. The following list items will increment from that number (only for ordered lists).
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.Main">
            <summary>
            Represents a browser Main element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Main.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Map">
            <summary>
            Represents a browser Map element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Map.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Mark">
            <summary>
            Represents a browser Mark element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Mark.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Menu">
            <summary>
            Represents a browser Menu element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Menu.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.MenuItem">
            <summary>
            Represents a browser MenuItem element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.MenuItem.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Metadata">
            <summary>
            Represents a browser Metadata (meta) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Metadata.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Meter">
            <summary>
            Represents a browser Meter element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Meter.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Navigation">
            <summary>
            Represents a browser Navigation (nav) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Navigation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.NoFrames">
            <summary>
            Represents a browser NoFrames element.
            </summary>
            <remarks>
            Not supported in HTML5.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.NoFrames.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.NoScript">
            <summary>
            Represents a browser NoScript element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.NoScript.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Object">
            <summary>
            Represents a browser Object element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Object.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Option">
            <summary>
            Represents a browser option element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Option.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Option.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that an option should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Option.Label">
            <summary>
            Gets or sets the label attribute.
            </summary>
            <remarks>
            Specifies a shorter label for an option.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Option.Selected">
            <summary>
            Gets or sets the selected attribute.
            </summary>
            <remarks>
            Specifies that an option should be pre-selected when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Option.Value">
            <summary>
            Gets or sets the value for this select.
            </summary>
            <remarks>
            Specifies the value to be sent to a server.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.OptionGroup">
            <summary>
            Represents a browser OptionGroup (optgroup) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.OptionGroup.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.OrderedList">
            <summary>
            Represents a browser ordered list element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.OrderedList.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Output">
            <summary>
            Represents a browser Output element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Output.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Paragraph">
            <summary>
            Represents a browser paragraph (p) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Paragraph.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Parameter">
            <summary>
            Represents a browser Parameter (param) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Parameter.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.PreformattedText">
            <summary>
            Represents a browser PreformattedText (pre) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.PreformattedText.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Progress">
            <summary>
            Represents a browser Progress element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Progress.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Quotation">
            <summary>
            Represents a browser Quotation (q) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Quotation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.RadioButton">
            <summary>
            Represent a browser input radio button element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.RadioButton.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a input radio button browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Checked">
            <summary>
            Gets or sets the checked attribute.
            </summary>
            <remarks>
            Specifies that an element should be pre-selected when the page loads (for type="checkbox" or type="radio").
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Form">
            <summary>
            Gets or sets the form attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the button belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.FormNoValidate">
            <summary>
            Gets or sets the form no validate attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the form-data should not be validated on submission. Only for type="submit".
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.RadioButton.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
        </member>
        <member name="T:TestR.Web.Elements.Ruby">
            <summary>
            Represents a browser Ruby element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Ruby.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.RubyExplanation">
            <summary>
            Represents a browser RubyExplanation (rp) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.RubyExplanation.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.RubyTag">
            <summary>
            Represents a browser RubyTag (rt) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.RubyTag.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Sample">
            <summary>
            Represents a browser Sample (samp) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Sample.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Script">
            <summary>
            Represents a browser Script element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Script.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Section">
            <summary>
            Represents a browser Section element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Section.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Select">
            <summary>
            Represents a browser select element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Select.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Select.AutoFocus">
            <summary>
            Gets or sets the autofocus attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the drop-down list should automatically get focus when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a drop-down list should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.Form">
            <summary>
            Gets or sets the form id (form) attribute.
            </summary>
            <remarks>
            HTML5: Defines one or more forms the select field belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.Multiple">
            <summary>
            Gets or sets the multiple attribute.
            </summary>
            <remarks>
            Specifies that multiple options can be selected at once.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.OptionCount">
            <summary>
            Gets or sets the size attribute.
            </summary>
            <remarks>
            Defines the number of visible options in a drop-down list.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.Required">
            <summary>
            Gets or sets the required attribute.
            </summary>
            <remarks>
            HTML5: Specifies that the user is required to select a value before submitting the form.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.Select.SelectedOption">
            <summary>
            Returns the selected option or null if nothing is selected.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.Select.Text">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.Elements.Select.Value">
            <summary>
            Gets or sets the value for this select.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Select.SendInput(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TestR.Web.Elements.Small">
            <summary>
            Represents a browser small element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Small.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Source">
            <summary>
            Represents a browser Source element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Source.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Span">
            <summary>
            Represents a browser span element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Span.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Strike">
            <summary>
            Represents a browser Strike element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Strike.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.StrikeThrough">
            <summary>
            Represents a browser StrikeThrough (s) element.
            </summary>
            <remarks>
            The strike through element was deprecated in HTML4 use the delete (del) tag instead.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.StrikeThrough.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Strong">
            <summary>
            Represents a browser strong element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Strong.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Style">
            <summary>
            Represents a browser Style element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Style.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.StyleSheetLink">
            <summary>
            Represents a browser StyleSheetLink (link) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.StyleSheetLink.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.SubScript">
            <summary>
            Represents a browser SubScript (sub) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.SubScript.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Summary">
            <summary>
            Represents a browser Summary element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Summary.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.SuperScriptText">
            <summary>
            Represents a browser SuperScriptText (sup) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.SuperScriptText.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Table">
            <summary>
            Represents a browser table (table) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Table.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.Table.Sortable">
            <summary>
            Gets or sets the sortable attribute.
            </summary>
            <remarks>
            Specifies that the table should be sortable.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.TableBody">
            <summary>
            Represents a browser table body (tbody) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableBody.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TableColumn">
            <summary>
            Represents a browser table column (td) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableColumn.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.TableColumn.ColumnSpan">
            <summary>
            Gets or sets the column span (colspan) attribute.
            </summary>
            <remarks>
            Specifies the number of columns a cell should span.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TableColumn.Headers">
            <summary>
            Gets or sets the header id (headers) attribute.
            </summary>
            <remarks>
            Specifies one or more header cells a cell is related to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TableColumn.RowSpan">
            <summary>
            Gets or sets the row span (rowspan) attribute.
            </summary>
            <remarks>
            Sets the number of rows a cell should span.
            </remarks>
        </member>
        <member name="T:TestR.Web.Elements.TableFooter">
            <summary>
            Represents a browser TableFooter (tfoot) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableFooter.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TableHead">
            <summary>
            Represents a browser table head (thead) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableHead.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TableHeaderColumn">
            <summary>
            Represents a browser TableHeaderColumn (th) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableHeaderColumn.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TableRow">
            <summary>
            Represents a browser table row (tr) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TableRow.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TeletypeText">
            <summary>
            Represents a browser TeletypeText (tt) element.
            </summary>
            <remarks>
            This tag is not supported in HTML5 so use CSS instead.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.TeletypeText.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.TextArea">
            <summary>
            Represents a browser text area element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TextArea.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a text area browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.AutoFocus">
            <summary>
            Gets or sets the autofocus attribute.
            </summary>
            <remarks>
            HTML5: Specifies that an input element should automatically get focus when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Cols">
            <summary>
            Gets or sets the cols attribute.
            </summary>
            <remarks>
            Specifies the visible width of a text area.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Form">
            <summary>
            Gets or sets the form attribute.
            </summary>
            <remarks>
            HTML5: Specifies one or more forms the text area belongs to.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.MaxLength">
            <summary>
            Gets or sets the max length attribute.
            </summary>
            <remarks>
            HTML5: Specifies the maximum number of characters allowed in the text area.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.PlaceHolder">
            <summary>
            Gets or sets the place holder attribute.
            </summary>
            <remarks>
            HTML5: Specifies a short hint that describes the expected value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.ReadOnly">
            <summary>
            Gets or sets the read only attribute.
            </summary>
            <remarks>
            Specifies that an input field is read-only
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Required">
            <summary>
            Gets or sets the required attribute.
            </summary>
            <remarks>
            HTML5: Specifies that a text area is required/must be filled out.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Rows">
            <summary>
            Gets or sets the rows attribute.
            </summary>
            <remarks>
            Specifies the visible number of lines in a text area.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.TypingDelay">
            <summary>
            Gets the delay (in milliseconds) between each character.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextArea.Wrap">
            <summary>
            Gets or sets the wrap attribute.
            </summary>
            <remarks>
            HTML5: Specifies how the text in a text area is to be wrapped when submitted in a form.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.TextArea.SendInput(System.String)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.Elements.TextArea.SendInput(System.String,System.Boolean)">
            <summary>
            Type text into the element.
            </summary>
            <param name="value"> The value to be typed. </param>
            <param name="reset"> Resets the text in the element before typing the text. </param>
        </member>
        <member name="T:TestR.Web.Elements.TextInput">
            <summary>
            Represents a browser text input element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.TextInput.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a TextInput browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.AutoFocus">
            <summary>
            Gets or sets the autofocus attribute.
            </summary>
            <remarks>
            HTML5: Specifies that an input element should automatically get focus when the page loads.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
            <remarks>
            Specifies that a button should be disabled.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Pattern">
            <summary>
            Gets or sets the pattern attribute.
            </summary>
            <remarks>
            HTML5: Specifies a regular expression that an input element's value is checked against.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.PlaceHolder">
            <summary>
            Gets or sets the place holder attribute.
            </summary>
            <remarks>
            HTML5: Specifies a short hint that describes the expected value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.ReadOnly">
            <summary>
            Gets or sets the read only attribute.
            </summary>
            <remarks>
            Specifies that an input field is read-only
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Step">
            <summary>
            Gets or sets the step attribute.
            </summary>
            <remarks>
            HTML5: Specifies the legal number intervals for an input field.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Text">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.TypingDelay">
            <summary>
            Gets the delay (in milliseconds) between each character.
            </summary>
        </member>
        <member name="P:TestR.Web.Elements.TextInput.Value">
            <summary>
            Gets or sets the value attribute.
            </summary>
            <remarks>
            Specifies the value of an input element.
            </remarks>
        </member>
        <member name="M:TestR.Web.Elements.TextInput.SendInput(System.String)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.Elements.TextInput.SendInput(System.String,System.Boolean)">
            <summary>
            Type text into the element.
            </summary>
            <param name="value"> The value to be typed. </param>
            <param name="reset"> Clear the input before typing the text. </param>
        </member>
        <member name="T:TestR.Web.Elements.Time">
            <summary>
            Represents a browser Time element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Time.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Title">
            <summary>
            Represents a browser Title element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Title.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Track">
            <summary>
            Represents a browser Track element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Track.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Underline">
            <summary>
            Represents a browser underline element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Underline.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.UnorderedList">
            <summary>
            Represents a browser unordered list element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.UnorderedList.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Variable">
            <summary>
            Represents a browser Variable (var) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Variable.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.Video">
            <summary>
            Represents a browser Video element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.Video.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.Elements.WordBreakOpportunity">
            <summary>
            Represents a browser WordBreakOpportunity (wbr) element.
            </summary>
        </member>
        <member name="M:TestR.Web.Elements.WordBreakOpportunity.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> The parent host for this element. </param>
        </member>
        <member name="T:TestR.Web.JavaScriptLibrary">
            <summary>
            Specifies different JavaScript libraries that are detected after page navigation in the browser.
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Angular">
            <summary>
            AngularJS
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.JQuery">
            <summary>
            JQuery
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Moment">
            <summary>
            Moment
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Bootstrap2">
            <summary>
            Bootstrap 2
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Bootstrap3">
            <summary>
            Bootstrap 3
            </summary>
        </member>
        <member name="F:TestR.Web.JavaScriptLibrary.Vue">
            <summary>
            Vue
            </summary>
        </member>
        <member name="T:TestR.Web.WebElement">
            <summary>
            Represents an element for a browser.
            </summary>
        </member>
        <member name="F:TestR.Web.WebElement._propertiesToRename">
            <summary>
            Properties that need to be renamed when requested.
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.#ctor(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Initializes an instance of a browser element.
            </summary>
            <param name="element"> The browser element this is for. </param>
            <param name="browser"> The browser this element is associated with. </param>
            <param name="parent"> </param>
        </member>
        <member name="P:TestR.Web.WebElement.AccessKey">
            <summary>
            Gets or sets the access key attribute.
            </summary>
            <remarks>
            Specifies a shortcut key to activate/focus an element.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Browser">
            <summary>
            Gets the browser this element is currently associated with.
            </summary>
        </member>
        <member name="P:TestR.Web.WebElement.Class">
            <summary>
            Gets or sets the class attribute.
            </summary>
            <remarks>
            Specifies one or more class names for an element (refers to a class in a style sheet).
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.ContentEditable">
            <summary>
            Gets the content editable (contenteditable) attribute.
            </summary>
            <remarks>
            HTML5: Specifies whether the content of an element is editable or not.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.ContextMenu">
            <summary>
            Gets or sets the context menu attribute.
            </summary>
            <remarks>
            HTML5: Specifies a context menu for an element. The context menu appears when a user Right-clicks on the element.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Draggable">
            <summary>
            Gets or sets the draggable attribute.
            </summary>
            <remarks>
            HTML5: Specifies whether an element is draggable or not.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.DropZone">
            <summary>
            Gets or sets the drop zone (dropzone) attribute.
            </summary>
            <remarks>
            HTML5: Specifies whether the dragged data is copied, moved, or linked, when dropped.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Enabled">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Focused">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.FocusedElement">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.FrameId">
            <summary>
            Gets the optional ID of the frame hosting the element. Will be null if the element is not hostied in a frame.
            </summary>
        </member>
        <member name="P:TestR.Web.WebElement.Height">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Hidden">
            <summary>
            Gets or sets the hidden attribute.
            </summary>
            <remarks>
            HTML5: Specifies that an element is not yet, or is no longer, relevant.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Id">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Language">
            <summary>
            Gets or sets the language (lang) attribute.
            </summary>
            <remarks>
            Specifies the language of the element's content.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Location">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.Name">
            <inheritdoc />
        </member>
        <member name="P:TestR.Web.WebElement.ParentId">
            <summary>
            Gets the ID of the parent element.
            </summary>
        </member>
        <member name="P:TestR.Web.WebElement.SpellCheck">
            <summary>
            Gets or sets the spell check (spellcheck) attribute.
            </summary>
            <remarks>
            HTML5: Specifies whether the element is to have its spelling and grammar checked or not.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Style">
            <summary>
            Gets or sets the style attribute.
            </summary>
            <remarks>
            Specifies an inline CSS style for an element.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.TabIndex">
            <summary>
            Gets or sets the tab index (tabindex) attribute.
            </summary>
            <remarks>
            Specifies the tabbing order of the element.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.TagName">
            <summary>
            Gets the tag element name.
            </summary>
        </member>
        <member name="P:TestR.Web.WebElement.Text">
            <summary>
            Gets or sets the text content.
            </summary>
        </member>
        <member name="P:TestR.Web.WebElement.TextDirection">
            <summary>
            Gets the text direction (dir) attribute.
            </summary>
            <remarks>
            Specifies the text direction for the content in an element.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Title">
            <summary>
            Gets or sets the title attribute.
            </summary>
            <remarks>
            Specifies extra information about an element.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Translate">
            <summary>
            Gets or sets the translate attribute.
            </summary>
            <remarks>
            HTML5: Specifies whether the content of an element should be translated or not.
            </remarks>
        </member>
        <member name="P:TestR.Web.WebElement.Width">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.Click(System.Int32,System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.FireEvent(System.String)">
            <summary>
            Fires an event on the element.
            </summary>
            <param name="eventName"> The events name to fire. </param>
        </member>
        <member name="M:TestR.Web.WebElement.FireEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Fires an event on the element.
            </summary>
            <param name="eventName"> The events name to fire. </param>
            <param name="eventProperties"> The properties for the event. </param>
        </member>
        <member name="M:TestR.Web.WebElement.Focus">
            <summary>
            Focuses on the element.
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.GetAttributeValue(System.String)">
            <summary>
            Gets an attribute value by the provided name.
            </summary>
            <param name="name"> The name of the attribute to read. </param>
            <returns> The attribute value. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.GetAttributeValue(System.String,System.Boolean)">
            <summary>
            Gets an attribute value by the provided name.
            </summary>
            <param name="name"> The name of the attribute to read. </param>
            <param name="refresh"> A flag to force the element to refresh. </param>
            <returns> The attribute value. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.GetHtml">
            <summary>
            Gets the HTML displayed in the element.
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.GetStyleAttributeValue(System.String)">
            <summary>
            Gets an attribute style value by the provided name.
            </summary>
            <param name="name"> The name of the attribute style to read. </param>
            <returns> The attribute style value. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.GetStyleAttributeValue(System.String,System.Boolean)">
            <summary>
            Gets an attribute style value by the provided name.
            </summary>
            <param name="name"> The name of the attribute style to read. </param>
            <param name="forceRefresh"> A flag to force the element to refresh. </param>
            <returns> The attribute style value. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.Highlight(System.Boolean)">
            <summary>
            Highlight or resets the element.
            </summary>
            <param name="highlight">
            If true the element is highlight yellow. If false the element is returned to its original
            color.
            </param>
        </member>
        <member name="M:TestR.Web.WebElement.LeftClick(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.MiddleClick(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.MoveMouseTo(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.Refresh``1(System.Func{``0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.RemoveAttribute(System.String)">
            <summary>
            Remove the element attribute. * Experimental
            </summary>
            <param name="name"> The name of the attribute. </param>
        </member>
        <member name="M:TestR.Web.WebElement.RightClick(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.ScrollIntoView">
            <summary>
            Scroll the element into view.
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.SendInput(System.String)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.SendInput(System.String,TestR.Desktop.KeyboardKey[])">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.SendInput(System.String,System.TimeSpan,TestR.Desktop.KeyboardKey[])">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.SendInput(System.String,System.TimeSpan,TestR.Desktop.KeyStroke[])">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.SendInput(TestR.Desktop.KeyboardKey[])">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.SendInput(TestR.Desktop.KeyboardModifier,TestR.Desktop.KeyboardKey[])">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.SendInput(TestR.Desktop.KeyStroke[])">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.SetAttributeValue(System.String,System.String)">
            <summary>
            Sets an attribute value by the provided name.
            </summary>
            <param name="name"> The name of the attribute to write. </param>
            <param name="value"> The value to be written. </param>
        </member>
        <member name="M:TestR.Web.WebElement.SetHtml(System.String)">
            <summary>
            Sets the HTML displayed in the element.
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.SetStyleAttributeValue(System.String,System.String)">
            <summary>
            Sets an attribute style value by the provided name.
            </summary>
            <param name="name"> The name of the attribute style to write. </param>
            <param name="value"> The style value to be written. </param>
        </member>
        <member name="M:TestR.Web.WebElement.ToDetailString">
            <summary>
            Provides a string of details for the element.
            </summary>
            <returns> The string of element details. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.ToString">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.WaitForComplete(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:TestR.Web.WebElement.GetKeyCodeEventProperty(System.Char)">
            <summary>
            First the key code event properties for the character.
            </summary>
            <param name="character"> The character to get the event properties for. </param>
            <returns> An event properties for the character. </returns>
        </member>
        <member name="M:TestR.Web.WebElement.TriggerElement">
            <summary>
            Triggers the element to ensure the element detect changes.
            </summary>
        </member>
        <member name="M:TestR.Web.WebElement.Create(Newtonsoft.Json.Linq.JToken,TestR.Web.Browser,TestR.ElementHost)">
            <summary>
            Adds a collection of elements and initializes them as their specific element type.
            </summary>
            <param name="token"> The collection of elements to add. </param>
            <param name="browser"> The browser the element is for. </param>
            <param name="parent"> The parent for this element. </param>
        </member>
        <member name="M:TestR.Web.WebElement.AddOrUpdateElementAttribute(System.String,System.String)">
            <summary>
            Add or updates the cached attributes for this element.
            </summary>
            <param name="name"> </param>
            <param name="value"> </param>
        </member>
        <member name="M:TestR.Web.WebElement.GetCachedAttribute(System.String)">
            <summary>
            Gets the attribute from the local cache.
            </summary>
            <param name="name"> The name of the attribute. </param>
            <returns> Returns the value or null if the attribute was not found. </returns>
        </member>
    </members>
</doc>
